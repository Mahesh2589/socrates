
/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module.exports) {
    module.exports = {};
    module.client = module.component = true;
    module.call(this, module.exports, require.relative(resolved), module);
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);
  var index = path + '/index.js';

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
  }

  if (require.aliases.hasOwnProperty(index)) {
    return require.aliases[index];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("component-indexof/index.js", Function("exports, require, module",
"\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};//@ sourceURL=component-indexof/index.js"
));
require.register("component-emitter/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar index = require('indexof');\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  fn._off = on;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var i = index(callbacks, fn._off || fn);\n  if (~i) callbacks.splice(i, 1);\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n//@ sourceURL=component-emitter/index.js"
));
require.register("component-to-function/index.js", Function("exports, require, module",
"\n/**\n * Expose `toFunction()`.\n */\n\nmodule.exports = toFunction;\n\n/**\n * Convert `obj` to a `Function`.\n *\n * @param {Mixed} obj\n * @return {Function}\n * @api private\n */\n\nfunction toFunction(obj) {\n  switch ({}.toString.call(obj)) {\n    case '[object Object]':\n      return objectToFunction(obj);\n    case '[object Function]':\n      return obj;\n    case '[object String]':\n      return stringToFunction(obj);\n    case '[object RegExp]':\n      return regexpToFunction(obj);\n    default:\n      return defaultToFunction(obj);\n  }\n}\n\n/**\n * Default to strict equality.\n *\n * @param {Mixed} val\n * @return {Function}\n * @api private\n */\n\nfunction defaultToFunction(val) {\n  return function(obj){\n    return val === obj;\n  }\n}\n\n/**\n * Convert `re` to a function.\n *\n * @param {RegExp} re\n * @return {Function}\n * @api private\n */\n\nfunction regexpToFunction(re) {\n  return function(obj){\n    return re.test(obj);\n  }\n}\n\n/**\n * Convert property `str` to a function.\n *\n * @param {String} str\n * @return {Function}\n * @api private\n */\n\nfunction stringToFunction(str) {\n  // immediate such as \"> 20\"\n  if (/^ *\\W+/.test(str)) return new Function('_', 'return _ ' + str);\n\n  // properties such as \"name.first\" or \"age > 18\"\n  return new Function('_', 'return _.' + str);\n}\n\n/**\n * Convert `object` to a function.\n *\n * @param {Object} object\n * @return {Function}\n * @api private\n */\n\nfunction objectToFunction(obj) {\n  var match = {}\n  for (var key in obj) {\n    match[key] = typeof obj[key] === 'string'\n      ? defaultToFunction(obj[key])\n      : toFunction(obj[key])\n  }\n  return function(val){\n    if (typeof val !== 'object') return false;\n    for (var key in match) {\n      if (!(key in val)) return false;\n      if (!match[key](val[key])) return false;\n    }\n    return true;\n  }\n}\n//@ sourceURL=component-to-function/index.js"
));
require.register("component-enumerable/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar toFunction = require('to-function')\n  , proto = {};\n\n/**\n * Expose `Enumerable`.\n */\n\nmodule.exports = Enumerable;\n\n/**\n * Mixin to `obj`.\n *\n *    var Enumerable = require('enumerable');\n *    Enumerable(Something.prototype);\n *\n * @param {Object} obj\n * @return {Object} obj\n */\n\nfunction mixin(obj){\n  for (var key in proto) obj[key] = proto[key];\n  obj.__iterate__ = obj.__iterate__ || defaultIterator;\n  return obj;\n}\n\n/**\n * Initialize a new `Enumerable` with the given `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Enumerable(obj) {\n  if (!(this instanceof Enumerable)) {\n    if (Array.isArray(obj)) return new Enumerable(obj);\n    return mixin(obj);\n  }\n  this.obj = obj;\n}\n\n/*!\n * Default iterator utilizing `.length` and subscripts.\n */\n\nfunction defaultIterator() {\n  var self = this;\n  return {\n    length: function(){ return self.length },\n    get: function(i){ return self[i] }\n  }\n}\n\n/**\n * Return a string representation of this enumerable.\n *\n *    [Enumerable [1,2,3]]\n *\n * @return {String}\n * @api public\n */\n\nEnumerable.prototype.inspect =\nEnumerable.prototype.toString = function(){\n  return '[Enumerable ' + JSON.stringify(this.obj) + ']';\n};\n\n/**\n * Iterate enumerable.\n *\n * @return {Object}\n * @api private\n */\n\nEnumerable.prototype.__iterate__ = function(){\n  var obj = this.obj;\n  obj.__iterate__ = obj.__iterate__ || defaultIterator;\n  return obj.__iterate__();\n};\n\n/**\n * Iterate each value and invoke `fn(val, i)`.\n *\n *    users.each(function(val, i){\n *\n *    })\n *\n * @param {Function} fn\n * @return {Object} self\n * @api public\n */\n\nproto.forEach =\nproto.each = function(fn){\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    fn(vals.get(i), i);\n  }\n  return this;\n};\n\n/**\n * Map each return value from `fn(val, i)`.\n *\n * Passing a callback function:\n *\n *    users.map(function(user){\n *      return user.name.first\n *    })\n *\n * Passing a property string:\n *\n *    users.map('name.first')\n *\n * @param {Function} fn\n * @return {Enumerable}\n * @api public\n */\n\nproto.map = function(fn){\n  fn = toFunction(fn);\n  var vals = this.__iterate__();\n  var len = vals.length();\n  var arr = [];\n  for (var i = 0; i < len; ++i) {\n    arr.push(fn(vals.get(i), i));\n  }\n  return new Enumerable(arr);\n};\n\n/**\n * Select all values that return a truthy value of `fn(val, i)`.\n *\n *    users.select(function(user){\n *      return user.age > 20\n *    })\n *\n *  With a property:\n *\n *    items.select('complete')\n *\n * @param {Function|String} fn\n * @return {Enumerable}\n * @api public\n */\n\nproto.filter =\nproto.select = function(fn){\n  fn = toFunction(fn);\n  var val;\n  var arr = [];\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (fn(val, i)) arr.push(val);\n  }\n  return new Enumerable(arr);\n};\n\n/**\n * Select all unique values.\n *\n *    nums.unique()\n *\n * @return {Enumerable}\n * @api public\n */\n\nproto.unique = function(){\n  var val;\n  var arr = [];\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (~arr.indexOf(val)) continue;\n    arr.push(val);\n  }\n  return new Enumerable(arr);\n};\n\n/**\n * Reject all values that return a truthy value of `fn(val, i)`.\n *\n * Rejecting using a callback:\n *\n *    users.reject(function(user){\n *      return user.age < 20\n *    })\n *\n * Rejecting with a property:\n *\n *    items.reject('complete')\n *\n * Rejecting values via `==`:\n *\n *    data.reject(null)\n *    users.reject(tobi)\n *\n * @param {Function|String|Mixed} fn\n * @return {Enumerable}\n * @api public\n */\n\nproto.reject = function(fn){\n  var val;\n  var arr = [];\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  if ('string' == typeof fn) fn = toFunction(fn);\n\n  if (fn) {\n    for (var i = 0; i < len; ++i) {\n      val = vals.get(i);\n      if (!fn(val, i)) arr.push(val);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      val = vals.get(i);\n      if (val != fn) arr.push(val);\n    }\n  }\n\n  return new Enumerable(arr);\n};\n\n/**\n * Reject `null` and `undefined`.\n *\n *    [1, null, 5, undefined].compact()\n *    // => [1,5]\n *\n * @return {Enumerable}\n * @api public\n */\n\n\nproto.compact = function(){\n  return this.reject(null);\n};\n\n/**\n * Return the first value when `fn(val, i)` is truthy,\n * otherwise return `undefined`.\n *\n *    users.find(function(user){\n *      return user.role == 'admin'\n *    })\n *\n * With a property string:\n *\n *    users.find('age > 20')\n *\n * @param {Function|String} fn\n * @return {Mixed}\n * @api public\n */\n\nproto.find = function(fn){\n  fn = toFunction(fn);\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (fn(val, i)) return val;\n  }\n};\n\n/**\n * Return the last value when `fn(val, i)` is truthy,\n * otherwise return `undefined`.\n *\n *    users.findLast(function(user){\n *      return user.role == 'admin'\n *    })\n *\n * @param {Function} fn\n * @return {Mixed}\n * @api public\n */\n\nproto.findLast = function(fn){\n  fn = toFunction(fn);\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = len - 1; i > -1; --i) {\n    val = vals.get(i);\n    if (fn(val, i)) return val;\n  }\n};\n\n/**\n * Assert that all invocations of `fn(val, i)` are truthy.\n *\n * For example ensuring that all pets are ferrets:\n *\n *    pets.all(function(pet){\n *      return pet.species == 'ferret'\n *    })\n *\n *    users.all('admin')\n *\n * @param {Function|String} fn\n * @return {Boolean}\n * @api public\n */\n\nproto.all =\nproto.every = function(fn){\n  fn = toFunction(fn);\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (!fn(val, i)) return false;\n  }\n  return true;\n};\n\n/**\n * Assert that none of the invocations of `fn(val, i)` are truthy.\n *\n * For example ensuring that no pets are admins:\n *\n *    pets.none(function(p){ return p.admin })\n *    pets.none('admin')\n *\n * @param {Function|String} fn\n * @return {Boolean}\n * @api public\n */\n\nproto.none = function(fn){\n  fn = toFunction(fn);\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (fn(val, i)) return false;\n  }\n  return true;\n};\n\n/**\n * Assert that at least one invocation of `fn(val, i)` is truthy.\n *\n * For example checking to see if any pets are ferrets:\n *\n *    pets.any(function(pet){\n *      return pet.species == 'ferret'\n *    })\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api public\n */\n\nproto.any = function(fn){\n  fn = toFunction(fn);\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (fn(val, i)) return true;\n  }\n  return false;\n};\n\n/**\n * Count the number of times `fn(val, i)` returns true.\n *\n *    var n = pets.count(function(pet){\n *      return pet.species == 'ferret'\n *    })\n *\n * @param {Function} fn\n * @return {Number}\n * @api public\n */\n\nproto.count = function(fn){\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  var n = 0;\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (fn(val, i)) ++n;\n  }\n  return n;\n};\n\n/**\n * Determine the indexof `obj` or return `-1`.\n *\n * @param {Mixed} obj\n * @return {Number}\n * @api public\n */\n\nproto.indexOf = function(obj){\n  var val;\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    val = vals.get(i);\n    if (val === obj) return i;\n  }\n  return -1;\n};\n\n/**\n * Check if `obj` is present in this enumerable.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api public\n */\n\nproto.has = function(obj){\n  return !! ~this.indexOf(obj);\n};\n\n/**\n * Reduce with `fn(accumulator, val, i)` using\n * optional `init` value defaulting to the first\n * enumerable value.\n *\n * @param {Function} fn\n * @param {Mixed} [val]\n * @return {Mixed}\n * @api public\n */\n\nproto.reduce = function(fn, init){\n  var val;\n  var i = 0;\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  val = null == init\n    ? vals.get(i++)\n    : init;\n\n  for (; i < len; ++i) {\n    val = fn(val, vals.get(i), i);\n  }\n\n  return val;\n};\n\n/**\n * Determine the max value.\n *\n * With a callback function:\n *\n *    pets.max(function(pet){\n *      return pet.age\n *    })\n *\n * With property strings:\n *\n *    pets.max('age')\n *\n * With immediate values:\n *\n *    nums.max()\n *\n * @param {Function|String} fn\n * @return {Number}\n * @api public\n */\n\nproto.max = function(fn){\n  var val;\n  var n = 0;\n  var max = -Infinity;\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  if (fn) {\n    fn = toFunction(fn);\n    for (var i = 0; i < len; ++i) {\n      n = fn(vals.get(i), i);\n      max = n > max ? n : max;\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      n = vals.get(i);\n      max = n > max ? n : max;\n    }\n  }\n\n  return max;\n};\n\n/**\n * Determine the min value.\n *\n * With a callback function:\n *\n *    pets.min(function(pet){\n *      return pet.age\n *    })\n *\n * With property strings:\n *\n *    pets.min('age')\n *\n * With immediate values:\n *\n *    nums.min()\n *\n * @param {Function|String} fn\n * @return {Number}\n * @api public\n */\n\nproto.min = function(fn){\n  var val;\n  var n = 0;\n  var min = Infinity;\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  if (fn) {\n    fn = toFunction(fn);\n    for (var i = 0; i < len; ++i) {\n      n = fn(vals.get(i), i);\n      min = n < min ? n : min;\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      n = vals.get(i);\n      min = n < min ? n : min;\n    }\n  }\n\n  return min;\n};\n\n/**\n * Determine the sum.\n *\n * With a callback function:\n *\n *    pets.sum(function(pet){\n *      return pet.age\n *    })\n *\n * With property strings:\n *\n *    pets.sum('age')\n *\n * With immediate values:\n *\n *    nums.sum()\n *\n * @param {Function|String} fn\n * @return {Number}\n * @api public\n */\n\nproto.sum = function(fn){\n  var ret;\n  var n = 0;\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  if (fn) {\n    fn = toFunction(fn);\n    for (var i = 0; i < len; ++i) {\n      n += fn(vals.get(i), i);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      n += vals.get(i);\n    }\n  }\n\n  return n;\n};\n\n/**\n * Determine the average value.\n *\n * With a callback function:\n *\n *    pets.avg(function(pet){\n *      return pet.age\n *    })\n *\n * With property strings:\n *\n *    pets.avg('age')\n *\n * With immediate values:\n *\n *    nums.avg()\n *\n * @param {Function|String} fn\n * @return {Number}\n * @api public\n */\n\nproto.avg =\nproto.mean = function(fn){\n  var ret;\n  var n = 0;\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  if (fn) {\n    fn = toFunction(fn);\n    for (var i = 0; i < len; ++i) {\n      n += fn(vals.get(i), i);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      n += vals.get(i);\n    }\n  }\n\n  return n / len;\n};\n\n/**\n * Return the first value, or first `n` values.\n *\n * @param {Number|Function} [n]\n * @return {Array|Mixed}\n * @api public\n */\n\nproto.first = function(n){\n  if ('function' == typeof n) return this.find(n);\n  var vals = this.__iterate__();\n\n  if (n) {\n    var len = Math.min(n, vals.length());\n    var arr = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      arr[i] = vals.get(i);\n    }\n    return arr;\n  }\n\n  return vals.get(0);\n};\n\n/**\n * Return the last value, or last `n` values.\n *\n * @param {Number|Function} [n]\n * @return {Array|Mixed}\n * @api public\n */\n\nproto.last = function(n){\n  if ('function' == typeof n) return this.findLast(n);\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  if (n) {\n    var i = Math.max(0, len - n);\n    var arr = [];\n    for (; i < len; ++i) {\n      arr.push(vals.get(i));\n    }\n    return arr;\n  }\n\n  return vals.get(len - 1);\n};\n\n/**\n * Return values in groups of `n`.\n *\n * @param {Number} n\n * @return {Enumerable}\n * @api public\n */\n\nproto.inGroupsOf = function(n){\n  var arr = [];\n  var group = [];\n  var vals = this.__iterate__();\n  var len = vals.length();\n\n  for (var i = 0; i < len; ++i) {\n    group.push(vals.get(i));\n    if ((i + 1) % n == 0) {\n      arr.push(group);\n      group = [];\n    }\n  }\n\n  if (group.length) arr.push(group);\n\n  return new Enumerable(arr);\n};\n\n/**\n * Return the value at the given index.\n *\n * @param {Number} i\n * @return {Mixed}\n * @api public\n */\n\nproto.at = function(i){\n  return this.__iterate__().get(i);\n};\n\n/**\n * Return a regular `Array`.\n *\n * @return {Array}\n * @api public\n */\n\nproto.toJSON =\nproto.array = function(){\n  var arr = [];\n  var vals = this.__iterate__();\n  var len = vals.length();\n  for (var i = 0; i < len; ++i) {\n    arr.push(vals.get(i));\n  }\n  return arr;\n};\n\n/**\n * Return the enumerable value.\n *\n * @return {Mixed}\n * @api public\n */\n\nproto.value = function(){\n  return this.obj;\n};\n\n/**\n * Mixin enumerable.\n */\n\nmixin(Enumerable.prototype);\n//@ sourceURL=component-enumerable/index.js"
));
require.register("segmentio-collection/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter')\n  , Enumerable = require('enumerable');\n\n/**\n * Expose `Collection`.\n */\n\nmodule.exports = Collection;\n\n/**\n * Initialize a new collection with the given `models`.\n *\n * @param {Array} models\n * @api public\n */\n\nfunction Collection(models) {\n  this.models = models || [];\n}\n\n/**\n * Mixin emitter.\n */\n\nEmitter(Collection.prototype);\n\n/**\n * Mixin enumerable.\n */\n\nEnumerable(Collection.prototype);\n\n/**\n * Iterator implementation.\n */\n\nCollection.prototype.__iterate__ = function(){\n  var self = this;\n  return {\n    length: function(){ return self.length() },\n    get: function(i){ return self.models[i] }\n  }\n};\n\n/**\n * Return the collection length.\n *\n * @return {Number}\n * @api public\n */\n\nCollection.prototype.length = function(){\n  return this.models.length;\n};\n\n/**\n * Add `model` to the collection and return the index.\n *\n * @param {Object} model\n * @return {Number}\n * @api public\n */\n\nCollection.prototype.add =\nCollection.prototype.push = function(model){\n  var length = this.models.push(model);\n  this.emit('add', model);\n  return length;\n};\n\n/**\n * Remove `model` from the collection, returning `true` when present,\n * otherwise `false`.\n *\n * @param {Object} model\n * @api public\n */\n\nCollection.prototype.remove = function(model){\n  var i = this.indexOf(model);\n  if (~i) {\n    this.models.splice(i, 1);\n    this.emit('remove', model);\n  }\n  return !! ~i;\n};\n//@ sourceURL=segmentio-collection/index.js"
));
require.register("component-type/index.js", Function("exports, require, module",
"\n/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Function]': return 'function';\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object String]': return 'string';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val && val.nodeType === 1) return 'element';\n  if (val === Object(val)) return 'object';\n\n  return typeof val;\n};\n//@ sourceURL=component-type/index.js"
));
require.register("component-each/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar type = require('type');\n\n/**\n * HOP reference.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Iterate the given `obj` and invoke `fn(val, i)`.\n *\n * @param {String|Array|Object} obj\n * @param {Function} fn\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  switch (type(obj)) {\n    case 'array':\n      return array(obj, fn);\n    case 'object':\n      if ('number' == typeof obj.length) return array(obj, fn);\n      return object(obj, fn);\n    case 'string':\n      return string(obj, fn);\n  }\n};\n\n/**\n * Iterate string chars.\n *\n * @param {String} obj\n * @param {Function} fn\n * @api private\n */\n\nfunction string(obj, fn) {\n  for (var i = 0; i < obj.length; ++i) {\n    fn(obj.charAt(i), i);\n  }\n}\n\n/**\n * Iterate object keys.\n *\n * @param {Object} obj\n * @param {Function} fn\n * @api private\n */\n\nfunction object(obj, fn) {\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Iterate array-ish.\n *\n * @param {Array|Object} obj\n * @param {Function} fn\n * @api private\n */\n\nfunction array(obj, fn) {\n  for (var i = 0; i < obj.length; ++i) {\n    fn(obj[i], i);\n  }\n}//@ sourceURL=component-each/index.js"
));
require.register("component-path-to-regexp/index.js", Function("exports, require, module",
"/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  var sensitive = options.sensitive;\n  var strict = options.strict;\n  keys = keys || [];\n\n  if (path instanceof RegExp) return path;\n  if (path instanceof Array) path = '(' + path.join('|') + ')';\n\n  path = path\n    .concat(strict ? '' : '/?')\n    .replace(/\\/\\(/g, '(?:/')\n    .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?(\\*)?/g, function(_, slash, format, key, capture, optional, star){\n      keys.push({ name: key, optional: !! optional });\n      slash = slash || '';\n      return ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + (optional ? slash : '')\n        + (format || '') + (capture || (format && '([^/.]+?)' || '([^/]+?)')) + ')'\n        + (optional || '')\n        + (star ? '(/*)?' : '');\n    })\n    .replace(/([\\/.])/g, '\\\\$1')\n    .replace(/\\*/g, '(.*)');\n\n  return new RegExp('^' + path + '$', sensitive ? '' : 'i');\n};\n//@ sourceURL=component-path-to-regexp/index.js"
));
require.register("component-route/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar toRegexp = require('path-to-regexp');\n\n/**\n * Expose `Route`.\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize a route with the given `path`.\n *\n * @param {String|Regexp} path\n * @return {Type}\n * @api public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.keys = [];\n  this.regexp = toRegexp(path, this.keys);\n  this._before = [];\n  this._after = [];\n}\n\n/**\n * Add before `fn`.\n *\n * @param {Function} fn\n * @return {Route} self\n * @api public\n */\n\nRoute.prototype.before = function(fn){\n  this._before.push(fn);\n  return this;\n};\n\n/**\n * Add after `fn`.\n *\n * @param {Function} fn\n * @return {Route} self\n * @api public\n */\n\nRoute.prototype.after = function(fn){\n  this._after.push(fn);\n  return this;\n};\n\n/**\n * Invoke callbacks for `type` with `args`.\n *\n * @param {String} type\n * @param {Array} args\n * @api public\n */\n\nRoute.prototype.call = function(type, args){\n  args = args || [];\n  var fns = this['_' + type];\n  if (!fns) throw new Error('invalid type');\n  for (var i = 0; i < fns.length; i++) {\n    fns[i].apply(null, args);\n  }\n};\n\n/**\n * Check if `path` matches this route,\n * returning `false` or an object.\n *\n * @param {String} path\n * @return {Object}\n * @api public\n */\n\nRoute.prototype.match = function(path){\n  var keys = this.keys;\n  var qsIndex = path.indexOf('?');\n  var pathname = ~qsIndex ? path.slice(0, qsIndex) : path;\n  var m = this.regexp.exec(pathname);\n  var params = [];\n  var args = [];\n\n  if (!m) return false;\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n\n    var val = 'string' == typeof m[i]\n      ? decodeURIComponent(m[i])\n      : m[i];\n\n    if (key) {\n      params[key.name] = undefined !== params[key.name]\n        ? params[key.name]\n        : val;\n    } else {\n      params.push(val);\n    }\n\n    args.push(val);\n  }\n\n  params.args = args;\n  return params;\n};\n//@ sourceURL=component-route/index.js"
));
require.register("component-router/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\ntry {\n  var Route = require('route-component');\n} catch (err) {\n  var Route = require('route');\n}\n\n/**\n * Expose `Router`.\n */\n\nmodule.exports = Router;\n\n/**\n * Initialize a new Router.\n *\n * @api public\n */\n\nfunction Router() {\n  this.routes = [];\n}\n\n/**\n * Create route `path` with optional `before`\n * and `after` callbacks. If you omit these\n * they may be added later with the `Route` returned.\n *\n *   router.get('/user/:id', showUser, hideUser);\n *\n *   router.get('/user/:id')\n *     .before(showUser)\n *     .after(hideUser)\n *\n * @param {String} path\n * @param {Function} before\n * @param {Function} after\n * @return {Route}\n * @api public\n */\n\nRouter.prototype.get = function(path, before, after){\n  var route = new Route(path);\n  this.routes.push(route);\n  if (before) route.before(before);\n  if (after) route.after(after);\n  return route;\n};\n\n/**\n * Dispatch the given `path`, matching routes\n * sequentially.\n *\n * @param {String} path\n * @api public\n */\n\nRouter.prototype.dispatch = function(path){\n  var ret;\n  this.teardown();\n  for (var i = 0; i < this.routes.length; i++) {\n    var route = this.routes[i];\n    if (ret = route.match(path)) {\n      this.route = route;\n      this.args = ret.args;\n      route.call('before', ret.args);\n      break;\n    }\n  }\n};\n\n/**\n * Invoke teardown callbacks of previous route.\n *\n * @api private\n */\n\nRouter.prototype.teardown = function(){\n  var route = this.route;\n  if (!route) return;\n  route.call('after', this.args);\n};\n//@ sourceURL=component-router/index.js"
));
require.register("component-event/index.js", Function("exports, require, module",
"\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, type, fn, capture){\n  if (el.addEventListener) {\n    el.addEventListener(type, fn, capture);\n  } else {\n    el.attachEvent('on' + type, fn);\n  }\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  if (el.removeEventListener) {\n    el.removeEventListener(type, fn, capture);\n  } else {\n    el.detachEvent('on' + type, fn);\n  }\n  return fn;\n};\n//@ sourceURL=component-event/index.js"
));
require.register("component-matches-selector/index.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar query = require('query');\n\n/**\n * Element prototype.\n */\n\nvar proto = Element.prototype;\n\n/**\n * Vendor function.\n */\n\nvar vendor = proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\n/**\n * Expose `match()`.\n */\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = query.all(selector, el.parentNode);\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n//@ sourceURL=component-matches-selector/index.js"
));
require.register("component-delegate/index.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar matches = require('matches-selector')\n  , event = require('event');\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, selector, type, fn, capture){\n  return event.bind(el, type, function(e){\n    if (matches(e.target || e.srcElement, selector)) fn.call(el, e);\n  }, capture);\n};\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  event.unbind(el, type, fn, capture);\n};\n//@ sourceURL=component-delegate/index.js"
));
require.register("component-domify/index.js", Function("exports, require, module",
"\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  option: [1, '<select multiple=\"multiple\">', '</select>'],\n  optgroup: [1, '<select multiple=\"multiple\">', '</select>'],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  thead: [1, '<table>', '</table>'],\n  tbody: [1, '<table>', '</table>'],\n  tfoot: [1, '<table>', '</table>'],\n  colgroup: [1, '<table>', '</table>'],\n  caption: [1, '<table>', '</table>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  th: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  _default: [0, '', '']\n};\n\n/**\n * Parse `html` and return the children.\n *\n * @param {String} html\n * @return {Array}\n * @api private\n */\n\nfunction parse(html) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n  \n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) throw new Error('No elements were generated.');\n  var tag = m[1];\n  \n  // body support\n  if (tag == 'body') {\n    var el = document.createElement('html');\n    el.innerHTML = html;\n    return [el.removeChild(el.lastChild)];\n  }\n  \n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = document.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  return orphan(el.children);\n}\n\n/**\n * Orphan `els` and return an array.\n *\n * @param {NodeList} els\n * @return {Array}\n * @api private\n */\n\nfunction orphan(els) {\n  var ret = [];\n\n  while (els.length) {\n    ret.push(els[0].parentNode.removeChild(els[0]));\n  }\n\n  return ret;\n}\n//@ sourceURL=component-domify/index.js"
));
require.register("component-classes/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar index = require('indexof');\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name){\n  // classList\n  if (this.list) {\n    this.list.toggle(name);\n    return this;\n  }\n\n  // fallback\n  if (this.has(name)) {\n    this.remove(name);\n  } else {\n    this.add(name);\n  }\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var arr = this.el.className.split(re);\n  if ('' === arr[0]) arr.pop();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n//@ sourceURL=component-classes/index.js"
));
require.register("component-css/index.js", Function("exports, require, module",
"\n/**\n * Properties to ignore appending \"px\".\n */\n\nvar ignore = {\n  columnCount: true,\n  fillOpacity: true,\n  fontWeight: true,\n  lineHeight: true,\n  opacity: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true\n};\n\n/**\n * Set `el` css values.\n *\n * @param {Element} el\n * @param {Object} obj\n * @return {Element}\n * @api public\n */\n\nmodule.exports = function(el, obj){\n  for (var key in obj) {\n    var val = obj[key];\n    if ('number' == typeof val && !ignore[key]) val += 'px';\n    el.style[key] = val;\n  }\n  return el;\n};\n//@ sourceURL=component-css/index.js"
));
require.register("component-sort/index.js", Function("exports, require, module",
"\n/**\n * Expose `sort`.\n */\n\nexports = module.exports = sort;\n\n/**\n * Sort `el`'s children with the given `fn(a, b)`.\n *\n * @param {Element} el\n * @param {Function} fn\n * @api public\n */\n\nfunction sort(el, fn) {\n  var arr = [].slice.call(el.children).sort(fn);\n  var frag = document.createDocumentFragment();\n  for (var i = 0; i < arr.length; i++) {\n    frag.appendChild(arr[i]);\n  }\n  el.appendChild(frag);\n};\n\n/**\n * Sort descending.\n *\n * @param {Element} el\n * @param {Function} fn\n * @api public\n */\n\nexports.desc = function(el, fn){\n  sort(el, function(a, b){\n    return ~fn(a, b) + 1;\n  });\n};\n\n/**\n * Sort ascending.\n */\n\nexports.asc = sort;\n//@ sourceURL=component-sort/index.js"
));
require.register("component-query/index.js", Function("exports, require, module",
"\nfunction one(selector, el) {\n  return el.querySelector(selector);\n}\n\nexports = module.exports = function(selector, el){\n  el = el || document;\n  return one(selector, el);\n};\n\nexports.all = function(selector, el){\n  el = el || document;\n  return el.querySelectorAll(selector);\n};\n\nexports.engine = function(obj){\n  if (!obj.one) throw new Error('.one callback required');\n  if (!obj.all) throw new Error('.all callback required');\n  one = obj.one;\n  exports.all = obj.all;\n};\n//@ sourceURL=component-query/index.js"
));
require.register("segmentio-dom/index.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar delegate = require('delegate');\nvar classes = require('classes');\nvar indexof = require('indexof');\nvar domify = require('domify');\nvar events = require('event');\nvar value = require('value');\nvar query = require('query');\nvar type = require('type');\nvar css = require('css');\n\n/**\n * Attributes supported.\n */\n\nvar attrs = [\n  'id',\n  'src',\n  'rel',\n  'cols',\n  'rows',\n  'name',\n  'href',\n  'title',\n  'style',\n  'width',\n  'height',\n  'tabindex',\n  'placeholder'\n];\n\n/**\n * Expose `dom()`.\n */\n\nexports = module.exports = dom;\n\n/**\n * Expose supported attrs.\n */\n\nexports.attrs = attrs;\n\n/**\n * Return a dom `List` for the given\n * `html`, selector, or element.\n *\n * @param {String|Element|List}\n * @return {List}\n * @api public\n */\n\nfunction dom(selector, context) {\n  // array\n  if (Array.isArray(selector)) {\n    return new List(selector);\n  }\n\n  // List\n  if (selector instanceof List) {\n    return selector;\n  }\n\n  // node\n  if (selector.nodeName) {\n    return new List([selector]);\n  }\n\n  if ('string' != typeof selector) {\n    throw new TypeError('invalid selector');\n  }\n\n  // html\n  if ('<' == selector.charAt(0)) {\n    return new List([domify(selector)[0]], selector);\n  }\n\n  // selector\n  var ctx = context\n    ? (context.els ? context.els[0] : context)\n    : document;\n\n  return new List(query.all(selector, ctx), selector);\n}\n\n/**\n * Expose `List` constructor.\n */\n\nexports.List = List;\n\n/**\n * Initialize a new `List` with the\n * given array-ish of `els` and `selector`\n * string.\n *\n * @param {Mixed} els\n * @param {String} selector\n * @api private\n */\n\nfunction List(els, selector) {\n  this.els = els || [];\n  this.selector = selector;\n}\n\n/**\n * Enumerable iterator.\n */\n\nList.prototype.__iterate__ = function(){\n  var self = this;\n  return {\n    length: function(){ return self.els.length },\n    get: function(i){ return new List([self.els[i]]) }\n  }\n};\n\n/**\n * Remove elements from the DOM.\n *\n * @api public\n */\n\nList.prototype.remove = function(){\n  for (var i = 0; i < this.els.length; i++) {\n    var el = this.els[i];\n    var parent = el.parentNode;\n    if (parent) parent.removeChild(el);\n  }\n};\n\n/**\n * Replace elements in the DOM.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.replace = function(val){\n  val = dom(val);\n  var el = val.els[0];\n  if (!el) return;\n  for (var i = 0; i < this.els.length; i++) {\n    var old = this.els[i];\n    var parent = old.parentNode;\n    if (parent) parent.replaceChild(val.els[0], old);\n  }\n  return val;\n};\n\n/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {String} name\n * @param {String} [val]\n * @return {String|List} self\n * @api public\n */\n\nList.prototype.attr = function(name, val){\n  // get\n  if (1 == arguments.length) {\n    return this.els[0] && this.els[0].getAttribute(name);\n  }\n\n  // remove\n  if (null == val) {\n    return this.removeAttr(name);\n  }\n\n  // set\n  return this.forEach(function(el){\n    el.setAttribute(name, val);\n  });\n};\n\n/**\n * Remove attribute `name`.\n *\n * @param {String} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.removeAttr = function(name){\n  return this.forEach(function(el){\n    el.removeAttribute(name);\n  });\n};\n\n/**\n * Set property `name` to `val`, or get property `name`.\n *\n * @param {String} name\n * @param {String} [val]\n * @return {Object|List} self\n * @api public\n */\n\nList.prototype.prop = function(name, val){\n  if (1 == arguments.length) {\n    return this.els[0] && this.els[0][name];\n  }\n\n  return this.forEach(function(el){\n    el[name] = val;\n  });\n};\n\n/**\n * Get the first element's value or set selected\n * element values to `val`.\n *\n * @param {Mixed} [val]\n * @return {Mixed}\n * @api public\n */\n\nList.prototype.val =\nList.prototype.value = function(val){\n  if (0 == arguments.length) {\n    return this.els[0]\n      ? value(this.els[0])\n      : undefined;\n  }\n\n  return this.forEach(function(el){\n    value(el, val);\n  });\n};\n\n/**\n * Return a cloned `List` with all elements cloned.\n *\n * @return {List}\n * @api public\n */\n\nList.prototype.clone = function(){\n  var arr = [];\n  for (var i = 0, len = this.els.length; i < len; ++i) {\n    arr.push(this.els[i].cloneNode(true));\n  }\n  return new List(arr);\n};\n\n/**\n * Prepend `val`.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.prepend = function(val){\n  var el = this.els[0];\n  if (!el) return this;\n  val = dom(val);\n  for (var i = 0; i < val.els.length; ++i) {\n    if (el.children.length) {\n      el.insertBefore(val.els[i], el.firstChild);\n    } else {\n      el.appendChild(val.els[i]);\n    }\n  }\n  return val;\n};\n\n/**\n * Append `val`.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.append = function(val){\n  var el = this.els[0];\n  if (!el) return this;\n  val = dom(val);\n  for (var i = 0; i < val.els.length; ++i) {\n    el.appendChild(val.els[i]);\n  }\n  return val;\n};\n\n/**\n * Append self's `el` to `val`\n *\n * @param {String|Element|List} val\n * @return {List} self\n * @api public\n */\n\nList.prototype.appendTo = function(val){\n  dom(val).append(this);\n  return this;\n};\n\n/**\n * Return a `List` containing the element at `i`.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.at = function(i){\n  return new List([this.els[i]], this.selector);\n};\n\n/**\n * Return a `List` containing the first element.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.first = function(){\n  return new List([this.els[0]], this.selector);\n};\n\n/**\n * Return a `List` containing the last element.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.last = function(){\n  return new List([this.els[this.els.length - 1]], this.selector);\n};\n\n/**\n * Return a `List` containing the next element.\n *\n * @return {List}\n * @api public\n */\n\nList.prototype.next = function(){\n  var el = this.els[0];\n  while(el = el.nextSibling && el.nodeType !== 1) {} // only element nodes\n  return new List(el, this.selector);\n};\n\n/**\n * Return a `List` containing the previous element.\n *\n * @return {List}\n * @api public\n */\n\nList.prototype.prev = function(){\n  var el = this.els[0];\n  while(el = el.previousSibling && el.nodeType !== 1) {} // only element nodes\n  return new List(el, this.selector);\n};\n\n/**\n * Return an `Element` at `i`.\n *\n * @param {Number} i\n * @return {Element}\n * @api public\n */\n\nList.prototype.get = function(i){\n  return this.els[i || 0];\n};\n\n/**\n * Return list length.\n *\n * @return {Number}\n * @api public\n */\n\nList.prototype.length = function(){\n  return this.els.length;\n};\n\n/**\n * Return element text.\n *\n * @param {String} str\n * @return {String|List}\n * @api public\n */\n\nList.prototype.text = function(str){\n  // TODO: real impl\n  if (1 == arguments.length) {\n    this.forEach(function(el){\n      el.textContent = str;\n    });\n    return this;\n  }\n\n  var str = '';\n  for (var i = 0; i < this.els.length; ++i) {\n    str += this.els[i].textContent;\n  }\n  return str;\n};\n\n/**\n * Return element html.\n *\n * @return {String} html\n * @api public\n */\n\nList.prototype.html = function(html){\n  if (1 == arguments.length) {\n    this.forEach(function(el){\n      el.innerHTML = html;\n    });\n  }\n  // TODO: real impl\n  return this.els[0] && this.els[0].innerHTML;\n};\n\n/**\n * Bind to `event` and invoke `fn(e)`. When\n * a `selector` is given then events are delegated.\n *\n * @param {String} event\n * @param {String} [selector]\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {List}\n * @api public\n */\n\nList.prototype.on = function(event, selector, fn, capture){\n  if ('string' == typeof selector) {\n    for (var i = 0; i < this.els.length; ++i) {\n      fn._delegate = delegate.bind(this.els[i], selector, event, fn, capture);\n    }\n    return this;\n  }\n\n  capture = fn;\n  fn = selector;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    events.bind(this.els[i], event, fn, capture);\n  }\n\n  return this;\n};\n\n/**\n * Unbind to `event` and invoke `fn(e)`. When\n * a `selector` is given then delegated event\n * handlers are unbound.\n *\n * @param {String} event\n * @param {String} [selector]\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {List}\n * @api public\n */\n\nList.prototype.off = function(event, selector, fn, capture){\n  if ('string' == typeof selector) {\n    for (var i = 0; i < this.els.length; ++i) {\n      // TODO: add selector support back\n      delegate.unbind(this.els[i], event, fn._delegate, capture);\n    }\n    return this;\n  }\n\n  capture = fn;\n  fn = selector;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    events.unbind(this.els[i], event, fn, capture);\n  }\n  return this;\n};\n\n/**\n * Iterate elements and invoke `fn(list, i)`.\n *\n * @param {Function} fn\n * @return {List} self\n * @api public\n */\n\nList.prototype.each = function(fn){\n  for (var i = 0; i < this.els.length; ++i) {\n    fn(new List([this.els[i]], this.selector), i);\n  }\n  return this;\n};\n\n/**\n * Iterate elements and invoke `fn(el, i)`.\n *\n * @param {Function} fn\n * @return {List} self\n * @api public\n */\n\nList.prototype.forEach = function(fn){\n  for (var i = 0; i < this.els.length; ++i) {\n    fn(this.els[i], i);\n  }\n  return this;\n};\n\n/**\n * Map elements invoking `fn(list, i)`.\n *\n * @param {Function} fn\n * @return {Array}\n * @api public\n */\n\nList.prototype.map = function(fn){\n  var arr = [];\n  for (var i = 0; i < this.els.length; ++i) {\n    arr.push(fn(new List([this.els[i]], this.selector), i));\n  }\n  return arr;\n};\n\n/**\n * Filter elements invoking `fn(list, i)`, returning\n * a new `List` of elements when a truthy value is returned.\n *\n * @param {Function} fn\n * @return {List}\n * @api public\n */\n\nList.prototype.select =\nList.prototype.filter = function(fn){\n  var el;\n  var list = new List([], this.selector);\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    if (fn(new List([el], this.selector), i)) list.els.push(el);\n  }\n  return list;\n};\n\n/**\n * Add the given class `name`.\n *\n * @param {String} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.addClass = function(name){\n  var el;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes.add(name);\n  }\n  return this;\n};\n\n/**\n * Remove the given class `name`.\n *\n * @param {String|RegExp} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.removeClass = function(name){\n  var el;\n\n  if ('regexp' == type(name)) {\n    for (var i = 0; i < this.els.length; ++i) {\n      el = this.els[i];\n      el._classes = el._classes || classes(el);\n      var arr = el._classes.array();\n      for (var j = 0; j < arr.length; j++) {\n        if (name.test(arr[j])) {\n          el._classes.remove(arr[j]);\n        }\n      }\n    }\n    return this;\n  }\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes.remove(name);\n  }\n\n  return this;\n};\n\n/**\n * Toggle the given class `name`,\n * optionally a `bool` may be given\n * to indicate that the class should\n * be added when truthy.\n *\n * @param {String} name\n * @param {Boolean} bool\n * @return {List} self\n * @api public\n */\n\nList.prototype.toggleClass = function(name, bool){\n  var el;\n  var fn = 'toggle';\n\n  // toggle with boolean\n  if (2 == arguments.length) {\n    fn = bool ? 'add' : 'remove';\n  }\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes[fn](name);\n  }\n\n  return this;\n};\n\n/**\n * Check if the given class `name` is present.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nList.prototype.hasClass = function(name){\n  var el;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    if (el._classes.has(name)) return true;\n  }\n  return false;\n};\n\n/**\n * Set CSS `prop` to `val` or get `prop` value.\n * Also accepts an object (`prop`: `val`)\n *\n * @param {String} prop\n * @param {Mixed} val\n * @return {List|String}\n * @api public\n */\n\nList.prototype.css = function(prop, val){\n  if (2 == arguments.length) {\n    var obj = {};\n    obj[prop] = val;\n    return this.setStyle(obj);\n  }\n\n  if ('object' == type(prop)) {\n    return this.setStyle(prop);\n  }\n\n  return this.getStyle(prop);\n};\n\n/**\n * Set CSS `props`.\n *\n * @param {Object} props\n * @return {List} self\n * @api private\n */\n\nList.prototype.setStyle = function(props){\n  for (var i = 0; i < this.els.length; ++i) {\n    css(this.els[i], props);\n  }\n  return this;\n};\n\n/**\n * Get CSS `prop` value.\n *\n * @param {String} prop\n * @return {String}\n * @api private\n */\n\nList.prototype.getStyle = function(prop){\n  var el = this.els[0];\n  if (el) return el.style[prop];\n};\n\n/**\n * Find children matching the given `selector`.\n *\n * @param {String} selector\n * @return {List}\n * @api public\n */\n\nList.prototype.find = function(selector){\n  return dom(selector, this);\n};\n\n/**\n * Empty the dom list\n *\n * @return self\n * @api public\n */\n\nList.prototype.empty = function(){\n  var elem, el;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n\n  return this;\n}\n\n/**\n * Attribute accessors.\n */\n\nattrs.forEach(function(name){\n  List.prototype[name] = function(val){\n    if (0 == arguments.length) return this.attr(name);\n    return this.attr(name, val);\n  };\n});\n\n//@ sourceURL=segmentio-dom/index.js"
));
require.register("component-jquery/index.js", Function("exports, require, module",
"/*!\n * jQuery JavaScript Library v1.9.1\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-2-4\n */\n(function( window, undefined ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\"use strict\";\nvar\n\t// The deferred used on DOM ready\n\treadyList,\n\n\t// A central reference to the root jQuery(document)\n\trootjQuery,\n\n\t// Support: IE<9\n\t// For `typeof node.method` instead of `node.method !== undefined`\n\tcore_strundefined = typeof undefined,\n\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\tlocation = window.location,\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$,\n\n\t// [[Class]] -> type pairs\n\tclass2type = {},\n\n\t// List of deleted data cache ids, so we can reuse them\n\tcore_deletedIds = [],\n\n\tcore_version = \"1.9.1\",\n\n\t// Save a reference to some core methods\n\tcore_concat = core_deletedIds.concat,\n\tcore_push = core_deletedIds.push,\n\tcore_slice = core_deletedIds.slice,\n\tcore_indexOf = core_deletedIds.indexOf,\n\tcore_toString = class2type.toString,\n\tcore_hasOwn = class2type.hasOwnProperty,\n\tcore_trim = core_version.trim,\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\n\t},\n\n\t// Used for matching numbers\n\tcore_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n\n\t// Used for splitting on whitespace\n\tcore_rnotwhite = /\\S+/g,\n\n\t// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\t// Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\n\t// JSON RegExp\n\trvalidchars = /^[\\],:{}\\s]*$/,\n\trvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n\trvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\n\trvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t},\n\n\t// The ready event handler\n\tcompleted = function( event ) {\n\n\t\t// readyState === \"complete\" is good enough for us to call the dom ready in oldIE\n\t\tif ( document.addEventListener || event.type === \"load\" || document.readyState === \"complete\" ) {\n\t\t\tdetach();\n\t\t\tjQuery.ready();\n\t\t}\n\t},\n\t// Clean-up method for dom ready events\n\tdetach = function() {\n\t\tif ( document.addEventListener ) {\n\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\t\t\twindow.removeEventListener( \"load\", completed, false );\n\n\t\t} else {\n\t\t\tdocument.detachEvent( \"onreadystatechange\", completed );\n\t\t\twindow.detachEvent( \"onload\", completed );\n\t\t}\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: core_version,\n\n\tconstructor: jQuery,\n\tinit: function( selector, context, rootjQuery ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id !== match[2] ) {\n\t\t\t\t\t\t\treturn rootjQuery.find( selector );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn rootjQuery.ready( selector );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t},\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\t// The number of elements contained in the matched element set\n\tsize: function() {\n\t\treturn this.length;\n\t},\n\n\ttoArray: function() {\n\t\treturn core_slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num == null ?\n\n\t\t\t// Return a 'clean' array\n\t\t\tthis.toArray() :\n\n\t\t\t// Return just the object\n\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tready: function( fn ) {\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done( fn );\n\n\t\treturn this;\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( core_slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: core_push,\n\tsort: [].sort,\n\tsplice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar src, copyIsArray, copy, name, options, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length === i ) {\n\t\ttarget = this;\n\t\t--i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\tnoConflict: function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\n\t\treturn jQuery;\n\t},\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n\t\tif ( !document.body ) {\n\t\t\treturn setTimeout( jQuery.ready );\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.trigger ) {\n\t\t\tjQuery( document ).trigger(\"ready\").off(\"ready\");\n\t\t}\n\t},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray || function( obj ) {\n\t\treturn jQuery.type(obj) === \"array\";\n\t},\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj == obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\treturn !isNaN( parseFloat(obj) ) && isFinite( obj );\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn String( obj );\n\t\t}\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ core_toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Must be an Object.\n\t\t// Because of IE, we also have to check the presence of the constructor property.\n\t\t// Make sure that DOM nodes and window objects don't pass through, as well\n\t\tif ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t// Not own constructor property must be Object\n\t\t\tif ( obj.constructor &&\n\t\t\t\t!core_hasOwn.call(obj, \"constructor\") &&\n\t\t\t\t!core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\t// IE8,9 Will throw exceptions on certain host objects #9897\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\n\t\tvar key;\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || core_hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\t// data: string of html\n\t// context (optional): If specified, the fragment will be created in this context, defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tparseHTML: function( data, context, keepScripts ) {\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\tcontext = context || document;\n\n\t\tvar parsed = rsingleTag.exec( data ),\n\t\t\tscripts = !keepScripts && [];\n\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[1] ) ];\n\t\t}\n\n\t\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\t\tif ( scripts ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t},\n\n\tparseJSON: function( data ) {\n\t\t// Attempt to parse using the native JSON parser first\n\t\tif ( window.JSON && window.JSON.parse ) {\n\t\t\treturn window.JSON.parse( data );\n\t\t}\n\n\t\tif ( data === null ) {\n\t\t\treturn data;\n\t\t}\n\n\t\tif ( typeof data === \"string\" ) {\n\n\t\t\t// Make sure leading/trailing whitespace is removed (IE can't handle it)\n\t\t\tdata = jQuery.trim( data );\n\n\t\t\tif ( data ) {\n\t\t\t\t// Make sure the incoming data is actual JSON\n\t\t\t\t// Logic borrowed from http://json.org/json2.js\n\t\t\t\tif ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n\t\t\t\t\t.replace( rvalidtokens, \"]\" )\n\t\t\t\t\t.replace( rvalidbraces, \"\")) ) {\n\n\t\t\t\t\treturn ( new Function( \"return \" + data ) )();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tjQuery.error( \"Invalid JSON: \" + data );\n\t},\n\n\t// Cross-browser xml parsing\n\tparseXML: function( data ) {\n\t\tvar xml, tmp;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tif ( window.DOMParser ) { // Standard\n\t\t\t\ttmp = new DOMParser();\n\t\t\t\txml = tmp.parseFromString( data , \"text/xml\" );\n\t\t\t} else { // IE\n\t\t\t\txml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n\t\t\t\txml.async = \"false\";\n\t\t\t\txml.loadXML( data );\n\t\t\t}\n\t\t} catch( e ) {\n\t\t\txml = undefined;\n\t\t}\n\t\tif ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t},\n\n\tnoop: function() {},\n\n\t// Evaluates a script in a global context\n\t// Workarounds based on findings by Jim Driscoll\n\t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n\tglobalEval: function( data ) {\n\t\tif ( data && jQuery.trim( data ) ) {\n\t\t\t// We use execScript on Internet Explorer\n\t\t\t// We use an anonymous function so that context is window\n\t\t\t// rather than jQuery in Firefox\n\t\t\t( window.execScript || function( data ) {\n\t\t\t\twindow[ \"eval\" ].call( window, data );\n\t\t\t} )( data );\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Use native String.trim function wherever possible\n\ttrim: core_trim && !core_trim.call(\"\\uFEFF\\xA0\") ?\n\t\tfunction( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\tcore_trim.call( text );\n\t\t} :\n\n\t\t// Otherwise use our own trimming functionality\n\t\tfunction( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcore_push.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\tvar len;\n\n\t\tif ( arr ) {\n\t\t\tif ( core_indexOf ) {\n\t\t\t\treturn core_indexOf.call( arr, elem, i );\n\t\t\t}\n\n\t\t\tlen = arr.length;\n\t\t\ti = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t// Skip accessing in sparse arrays\n\t\t\t\tif ( i in arr && arr[ i ] === elem ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar l = second.length,\n\t\t\ti = first.length,\n\t\t\tj = 0;\n\n\t\tif ( typeof l === \"number\" ) {\n\t\t\tfor ( ; j < l; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\t} else {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, inv ) {\n\t\tvar retVal,\n\t\t\tret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length;\n\t\tinv = !!inv;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tretVal = !!callback( elems[ i ], i );\n\t\t\tif ( inv !== retVal ) {\n\t\t\t\tret.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn core_concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar args, proxy, tmp;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = core_slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\taccess: function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlength = elems.length,\n\t\t\tbulk = key == null;\n\n\t\t// Sets many values\n\t\tif ( jQuery.type( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t\t}\n\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\n\t\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\n\t\t\tif ( bulk ) {\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn chainable ?\n\t\t\telems :\n\n\t\t\t// Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call( elems ) :\n\t\t\t\tlength ? fn( elems[0], key ) : emptyGet;\n\t},\n\n\tnow: function() {\n\t\treturn ( new Date() ).getTime();\n\t}\n});\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t// Standards-based browsers support DOMContentLoaded\n\t\t} else if ( document.addEventListener ) {\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\n\t\t// If IE event model is used\n\t\t} else {\n\t\t\t// Ensure firing before onload, maybe late but safe also for iframes\n\t\t\tdocument.attachEvent( \"onreadystatechange\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.attachEvent( \"onload\", completed );\n\n\t\t\t// If IE and not a frame\n\t\t\t// continually check to see if the document is ready\n\t\t\tvar top = false;\n\n\t\t\ttry {\n\t\t\t\ttop = window.frameElement == null && document.documentElement;\n\t\t\t} catch(e) {}\n\n\t\t\tif ( top && top.doScroll ) {\n\t\t\t\t(function doScrollCheck() {\n\t\t\t\t\tif ( !jQuery.isReady ) {\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Use the trick by Diego Perini\n\t\t\t\t\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\t\t\t\t\t\ttop.doScroll(\"left\");\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\treturn setTimeout( doScrollCheck, 50 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// detach all dom ready events\n\t\t\t\t\t\tdetach();\n\n\t\t\t\t\t\t// and execute any waiting functions\n\t\t\t\t\t\tjQuery.ready();\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || type !== \"function\" &&\n\t\t( length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\n}\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\t\t// Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\targs = args || [];\n\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar action = tuple[ 0 ],\n\t\t\t\t\t\t\t\tfn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ action + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = core_slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\n\t\t\t\t\tif( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\njQuery.support = (function() {\n\n\tvar support, all, a,\n\t\tinput, select, fragment,\n\t\topt, eventName, isSupported, i,\n\t\tdiv = document.createElement(\"div\");\n\n\t// Setup\n\tdiv.setAttribute( \"className\", \"t\" );\n\tdiv.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\n\t// Support tests won't run in some limited or non-browser environments\n\tall = div.getElementsByTagName(\"*\");\n\ta = div.getElementsByTagName(\"a\")[ 0 ];\n\tif ( !all || !a || !all.length ) {\n\t\treturn {};\n\t}\n\n\t// First batch of tests\n\tselect = document.createElement(\"select\");\n\topt = select.appendChild( document.createElement(\"option\") );\n\tinput = div.getElementsByTagName(\"input\")[ 0 ];\n\n\ta.style.cssText = \"top:1px;float:left;opacity:.5\";\n\tsupport = {\n\t\t// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\n\t\tgetSetAttribute: div.className !== \"t\",\n\n\t\t// IE strips leading whitespace when .innerHTML is used\n\t\tleadingWhitespace: div.firstChild.nodeType === 3,\n\n\t\t// Make sure that tbody elements aren't automatically inserted\n\t\t// IE will insert them into empty tables\n\t\ttbody: !div.getElementsByTagName(\"tbody\").length,\n\n\t\t// Make sure that link elements get serialized correctly by innerHTML\n\t\t// This requires a wrapper element in IE\n\t\thtmlSerialize: !!div.getElementsByTagName(\"link\").length,\n\n\t\t// Get the style information from getAttribute\n\t\t// (IE uses .cssText instead)\n\t\tstyle: /top/.test( a.getAttribute(\"style\") ),\n\n\t\t// Make sure that URLs aren't manipulated\n\t\t// (IE normalizes it by default)\n\t\threfNormalized: a.getAttribute(\"href\") === \"/a\",\n\n\t\t// Make sure that element opacity exists\n\t\t// (IE uses filter instead)\n\t\t// Use a regex to work around a WebKit issue. See #5145\n\t\topacity: /^0.5/.test( a.style.opacity ),\n\n\t\t// Verify style float existence\n\t\t// (IE uses styleFloat instead of cssFloat)\n\t\tcssFloat: !!a.style.cssFloat,\n\n\t\t// Check the default checkbox/radio value (\"\" on WebKit; \"on\" elsewhere)\n\t\tcheckOn: !!input.value,\n\n\t\t// Make sure that a selected-by-default option has a working selected property.\n\t\t// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n\t\toptSelected: opt.selected,\n\n\t\t// Tests for enctype support on a form (#6743)\n\t\tenctype: !!document.createElement(\"form\").enctype,\n\n\t\t// Makes sure cloning an html5 element does not cause problems\n\t\t// Where outerHTML is undefined, this still works\n\t\thtml5Clone: document.createElement(\"nav\").cloneNode( true ).outerHTML !== \"<:nav></:nav>\",\n\n\t\t// jQuery.support.boxModel DEPRECATED in 1.8 since we don't support Quirks Mode\n\t\tboxModel: document.compatMode === \"CSS1Compat\",\n\n\t\t// Will be defined later\n\t\tdeleteExpando: true,\n\t\tnoCloneEvent: true,\n\t\tinlineBlockNeedsLayout: false,\n\t\tshrinkWrapBlocks: false,\n\t\treliableMarginRight: true,\n\t\tboxSizingReliable: true,\n\t\tpixelPosition: false\n\t};\n\n\t// Make sure checked status is properly cloned\n\tinput.checked = true;\n\tsupport.noCloneChecked = input.cloneNode( true ).checked;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<9\n\ttry {\n\t\tdelete div.test;\n\t} catch( e ) {\n\t\tsupport.deleteExpando = false;\n\t}\n\n\t// Check if we can trust getAttribute(\"value\")\n\tinput = document.createElement(\"input\");\n\tinput.setAttribute( \"value\", \"\" );\n\tsupport.input = input.getAttribute( \"value\" ) === \"\";\n\n\t// Check if an input maintains its value after becoming a radio\n\tinput.value = \"t\";\n\tinput.setAttribute( \"type\", \"radio\" );\n\tsupport.radioValue = input.value === \"t\";\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\tinput.setAttribute( \"checked\", \"t\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tfragment = document.createDocumentFragment();\n\tfragment.appendChild( input );\n\n\t// Check if a disconnected checkbox will retain its checked\n\t// value of true after appended to the DOM (IE6/7)\n\tsupport.appendChecked = input.checked;\n\n\t// WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<9\n\t// Opera does not clone events (and typeof div.attachEvent === undefined).\n\t// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()\n\tif ( div.attachEvent ) {\n\t\tdiv.attachEvent( \"onclick\", function() {\n\t\t\tsupport.noCloneEvent = false;\n\t\t});\n\n\t\tdiv.cloneNode( true ).click();\n\t}\n\n\t// Support: IE<9 (lack submit/change bubble), Firefox 17+ (lack focusin event)\n\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP), test/csp.php\n\tfor ( i in { submit: true, change: true, focusin: true }) {\n\t\tdiv.setAttribute( eventName = \"on\" + i, \"t\" );\n\n\t\tsupport[ i + \"Bubbles\" ] = eventName in window || div.attributes[ eventName ].expando === false;\n\t}\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\t// Run tests that need a body at doc ready\n\tjQuery(function() {\n\t\tvar container, marginDiv, tds,\n\t\t\tdivReset = \"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",\n\t\t\tbody = document.getElementsByTagName(\"body\")[0];\n\n\t\tif ( !body ) {\n\t\t\t// Return for frameset docs that don't have a body\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer = document.createElement(\"div\");\n\t\tcontainer.style.cssText = \"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\";\n\n\t\tbody.appendChild( container ).appendChild( div );\n\n\t\t// Support: IE8\n\t\t// Check if table cells still have offsetWidth/Height when they are set\n\t\t// to display:none and there are still other visible table cells in a\n\t\t// table row; if so, offsetWidth/Height are not reliable for use when\n\t\t// determining if an element has been hidden directly using\n\t\t// display:none (it is still safe to use offsets if a parent element is\n\t\t// hidden; don safety goggles and see bug #4512 for more information).\n\t\tdiv.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\n\t\ttds = div.getElementsByTagName(\"td\");\n\t\ttds[ 0 ].style.cssText = \"padding:0;margin:0;border:0;display:none\";\n\t\tisSupported = ( tds[ 0 ].offsetHeight === 0 );\n\n\t\ttds[ 0 ].style.display = \"\";\n\t\ttds[ 1 ].style.display = \"none\";\n\n\t\t// Support: IE8\n\t\t// Check if empty table cells still have offsetWidth/Height\n\t\tsupport.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );\n\n\t\t// Check box-sizing and margin behavior\n\t\tdiv.innerHTML = \"\";\n\t\tdiv.style.cssText = \"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\";\n\t\tsupport.boxSizing = ( div.offsetWidth === 4 );\n\t\tsupport.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );\n\n\t\t// Use window.getComputedStyle because jsdom on node.js will break without it.\n\t\tif ( window.getComputedStyle ) {\n\t\t\tsupport.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\n\t\t\tsupport.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\n\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// Fails in WebKit before Feb 2011 nightlies\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\tmarginDiv = div.appendChild( document.createElement(\"div\") );\n\t\t\tmarginDiv.style.cssText = div.style.cssText = divReset;\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\n\t\t\tsupport.reliableMarginRight =\n\t\t\t\t!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\n\t\t}\n\n\t\tif ( typeof div.style.zoom !== core_strundefined ) {\n\t\t\t// Support: IE<8\n\t\t\t// Check if natively block-level elements act like inline-block\n\t\t\t// elements when setting their display to 'inline' and giving\n\t\t\t// them layout\n\t\t\tdiv.innerHTML = \"\";\n\t\t\tdiv.style.cssText = divReset + \"width:1px;padding:1px;display:inline;zoom:1\";\n\t\t\tsupport.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );\n\n\t\t\t// Support: IE6\n\t\t\t// Check if elements with layout shrink-wrap their children\n\t\t\tdiv.style.display = \"block\";\n\t\t\tdiv.innerHTML = \"<div></div>\";\n\t\t\tdiv.firstChild.style.width = \"5px\";\n\t\t\tsupport.shrinkWrapBlocks = ( div.offsetWidth !== 3 );\n\n\t\t\tif ( support.inlineBlockNeedsLayout ) {\n\t\t\t\t// Prevent IE 6 from affecting layout for positioned elements #11048\n\t\t\t\t// Prevent IE from shrinking the body in IE 7 mode #12869\n\t\t\t\t// Support: IE<8\n\t\t\t\tbody.style.zoom = 1;\n\t\t\t}\n\t\t}\n\n\t\tbody.removeChild( container );\n\n\t\t// Null elements to avoid leaks in IE\n\t\tcontainer = div = tds = marginDiv = null;\n\t});\n\n\t// Null elements to avoid leaks in IE\n\tall = select = fragment = opt = a = input = null;\n\n\treturn support;\n})();\n\nvar rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction internalData( elem, name, data, pvt /* Internal Use Only */ ){\n\tif ( !jQuery.acceptData( elem ) ) {\n\t\treturn;\n\t}\n\n\tvar thisCache, ret,\n\t\tinternalKey = jQuery.expando,\n\t\tgetByName = typeof name === \"string\",\n\n\t\t// We have to handle DOM nodes and JS objects differently because IE6-7\n\t\t// can't GC object references properly across the DOM-JS boundary\n\t\tisNode = elem.nodeType,\n\n\t\t// Only DOM nodes need the global jQuery cache; JS object data is\n\t\t// attached directly to the object so GC can occur automatically\n\t\tcache = isNode ? jQuery.cache : elem,\n\n\t\t// Only defining an ID for JS objects if its cache already exists allows\n\t\t// the code to shortcut on the same path as a DOM node with no cache\n\t\tid = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\n\n\t// Avoid doing any more work than we need to when trying to get data on an\n\t// object that has no data at all\n\tif ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {\n\t\treturn;\n\t}\n\n\tif ( !id ) {\n\t\t// Only DOM nodes need a new unique ID for each element since their data\n\t\t// ends up in the global cache\n\t\tif ( isNode ) {\n\t\t\telem[ internalKey ] = id = core_deletedIds.pop() || jQuery.guid++;\n\t\t} else {\n\t\t\tid = internalKey;\n\t\t}\n\t}\n\n\tif ( !cache[ id ] ) {\n\t\tcache[ id ] = {};\n\n\t\t// Avoids exposing jQuery metadata on plain JS objects when the object\n\t\t// is serialized using JSON.stringify\n\t\tif ( !isNode ) {\n\t\t\tcache[ id ].toJSON = jQuery.noop;\n\t\t}\n\t}\n\n\t// An object can be passed to jQuery.data instead of a key/value pair; this gets\n\t// shallow copied over onto the existing cache\n\tif ( typeof name === \"object\" || typeof name === \"function\" ) {\n\t\tif ( pvt ) {\n\t\t\tcache[ id ] = jQuery.extend( cache[ id ], name );\n\t\t} else {\n\t\t\tcache[ id ].data = jQuery.extend( cache[ id ].data, name );\n\t\t}\n\t}\n\n\tthisCache = cache[ id ];\n\n\t// jQuery data() is stored in a separate object inside the object's internal data\n\t// cache in order to avoid key collisions between internal data and user-defined\n\t// data.\n\tif ( !pvt ) {\n\t\tif ( !thisCache.data ) {\n\t\t\tthisCache.data = {};\n\t\t}\n\n\t\tthisCache = thisCache.data;\n\t}\n\n\tif ( data !== undefined ) {\n\t\tthisCache[ jQuery.camelCase( name ) ] = data;\n\t}\n\n\t// Check for both converted-to-camel and non-converted data property names\n\t// If a data property was specified\n\tif ( getByName ) {\n\n\t\t// First Try to find as-is property data\n\t\tret = thisCache[ name ];\n\n\t\t// Test for null|undefined property data\n\t\tif ( ret == null ) {\n\n\t\t\t// Try to find the camelCased property\n\t\t\tret = thisCache[ jQuery.camelCase( name ) ];\n\t\t}\n\t} else {\n\t\tret = thisCache;\n\t}\n\n\treturn ret;\n}\n\nfunction internalRemoveData( elem, name, pvt ) {\n\tif ( !jQuery.acceptData( elem ) ) {\n\t\treturn;\n\t}\n\n\tvar i, l, thisCache,\n\t\tisNode = elem.nodeType,\n\n\t\t// See jQuery.data for more information\n\t\tcache = isNode ? jQuery.cache : elem,\n\t\tid = isNode ? elem[ jQuery.expando ] : jQuery.expando;\n\n\t// If there is already no cache entry for this object, there is no\n\t// purpose in continuing\n\tif ( !cache[ id ] ) {\n\t\treturn;\n\t}\n\n\tif ( name ) {\n\n\t\tthisCache = pvt ? cache[ id ] : cache[ id ].data;\n\n\t\tif ( thisCache ) {\n\n\t\t\t// Support array or space separated string names for data keys\n\t\t\tif ( !jQuery.isArray( name ) ) {\n\n\t\t\t\t// try the string as a key before any manipulation\n\t\t\t\tif ( name in thisCache ) {\n\t\t\t\t\tname = [ name ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// split the camel cased version by spaces unless a key with the spaces exists\n\t\t\t\t\tname = jQuery.camelCase( name );\n\t\t\t\t\tif ( name in thisCache ) {\n\t\t\t\t\t\tname = [ name ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = name.split(\" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = name.concat( jQuery.map( name, jQuery.camelCase ) );\n\t\t\t}\n\n\t\t\tfor ( i = 0, l = name.length; i < l; i++ ) {\n\t\t\t\tdelete thisCache[ name[i] ];\n\t\t\t}\n\n\t\t\t// If there is no data left in the cache, we want to continue\n\t\t\t// and let the cache object itself get destroyed\n\t\t\tif ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t// See jQuery.data for more information\n\tif ( !pvt ) {\n\t\tdelete cache[ id ].data;\n\n\t\t// Don't destroy the parent cache unless the internal data object\n\t\t// had been the only thing left in it\n\t\tif ( !isEmptyDataObject( cache[ id ] ) ) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Destroy the cache\n\tif ( isNode ) {\n\t\tjQuery.cleanData( [ elem ], true );\n\n\t// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)\n\t} else if ( jQuery.support.deleteExpando || cache != cache.window ) {\n\t\tdelete cache[ id ];\n\n\t// When all else fails, null\n\t} else {\n\t\tcache[ id ] = null;\n\t}\n}\n\njQuery.extend({\n\tcache: {},\n\n\t// Unique for each copy of jQuery on the page\n\t// Non-digits removed to match rinlinejQuery\n\texpando: \"jQuery\" + ( core_version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// The following elements throw uncatchable exceptions if you\n\t// attempt to add expando properties to them.\n\tnoData: {\n\t\t\"embed\": true,\n\t\t// Ban all objects except for Flash (which handle expandos)\n\t\t\"object\": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",\n\t\t\"applet\": true\n\t},\n\n\thasData: function( elem ) {\n\t\telem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\n\t\treturn !!elem && !isEmptyDataObject( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn internalData( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\treturn internalRemoveData( elem, name );\n\t},\n\n\t// For internal use only.\n\t_data: function( elem, name, data ) {\n\t\treturn internalData( elem, name, data, true );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\treturn internalRemoveData( elem, name, true );\n\t},\n\n\t// A method for determining if a DOM node can handle the data expando\n\tacceptData: function( elem ) {\n\t\t// Do not set data on non-element because it will not be cleared (#8335).\n\t\tif ( elem.nodeType && elem.nodeType !== 1 && elem.nodeType !== 9 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];\n\n\t\t// nodes accept data unless otherwise specified; rejection can be conditional\n\t\treturn !noData || noData !== true && elem.getAttribute(\"classid\") === noData;\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar attrs, name,\n\t\t\telem = this[0],\n\t\t\ti = 0,\n\t\t\tdata = null;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = jQuery.data( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !jQuery._data( elem, \"parsedAttrs\" ) ) {\n\t\t\t\t\tattrs = elem.attributes;\n\t\t\t\t\tfor ( ; i < attrs.length; i++ ) {\n\t\t\t\t\t\tname = attrs[i].name;\n\n\t\t\t\t\t\tif ( !name.indexOf( \"data-\" ) ) {\n\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\n\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tjQuery._data( elem, \"parsedAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tjQuery.data( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn jQuery.access( this, function( value ) {\n\n\t\t\tif ( value === undefined ) {\n\t\t\t\t// Try to fetch any internally stored data first\n\t\t\t\treturn elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : null;\n\t\t\t}\n\n\t\t\tthis.each(function() {\n\t\t\t\tjQuery.data( this, key, value );\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeData( this, key );\n\t\t});\n\t}\n});\n\nfunction dataAttr( elem, key, data ) {\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\n\t\tvar name = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tjQuery.data( elem, key, data );\n\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\n\treturn data;\n}\n\n// checks a cache object for emptiness\nfunction isEmptyDataObject( obj ) {\n\tvar name;\n\tfor ( name in obj ) {\n\n\t\t// if the public data object is empty, the private is still empty\n\t\tif ( name === \"data\" && jQuery.isEmptyObject( obj[name] ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( name !== \"toJSON\" ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = jQuery._data( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray(data) ) {\n\t\t\t\t\tqueue = jQuery._data( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\thooks.cur = fn;\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn jQuery._data( elem, key ) || jQuery._data( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tjQuery._removeData( elem, type + \"queue\" );\n\t\t\t\tjQuery._removeData( elem, key );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tdelay: function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t};\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile( i-- ) {\n\t\t\ttmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar nodeHook, boolHook,\n\trclass = /[\\t\\r\\n]/g,\n\trreturn = /\\r/g,\n\trfocusable = /^(?:input|select|textarea|button|object)$/i,\n\trclickable = /^(?:a|area)$/i,\n\trboolean = /^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,\n\truseDefault = /^(?:checked|selected)$/i,\n\tgetSetAttribute = jQuery.support.getSetAttribute,\n\tgetSetInput = jQuery.support.input;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t},\n\n\tprop: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\tname = jQuery.propFix[ name ] || name;\n\t\treturn this.each(function() {\n\t\t\t// try/catch handles cases where IE balks (such as removing a property on window)\n\t\t\ttry {\n\t\t\t\tthis[ name ] = undefined;\n\t\t\t\tdelete this[ name ];\n\t\t\t} catch( e ) {}\n\t\t});\n\t},\n\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = jQuery.trim( cur );\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisBool = typeof stateVal === \"boolean\";\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tstate = stateVal,\n\t\t\t\t\tclassNames = value.match( core_rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tstate = isBool ? state : !self.hasClass( className );\n\t\t\t\t\tself[ state ? \"addClass\" : \"removeClass\" ]( className );\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === core_strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tjQuery._data( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : jQuery._data( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tval: function( value ) {\n\t\tvar ret, hooks, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val,\n\t\t\t\tself = jQuery(this);\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, self.val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map(val, function ( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// attributes.value is undefined in Blackberry 4.7 but\n\t\t\t\t// uses .value. See #6932\n\t\t\t\tvar val = elem.attributes.value;\n\t\t\t\treturn !val || val.specified ? elem.value : elem.text;\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// oldIE doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar values = jQuery.makeArray( value );\n\n\t\t\t\tjQuery(elem).find(\"option\").each(function() {\n\t\t\t\t\tthis.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;\n\t\t\t\t});\n\n\t\t\t\tif ( !values.length ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t},\n\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, notxml, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === core_strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( notxml ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && notxml && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && notxml && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\n\t\t\t// In IE9+, Flash objects don't have .getAttribute (#12945)\n\t\t\t// Support: IE9+\n\t\t\tif ( typeof elem.getAttribute !== core_strundefined ) {\n\t\t\t\tret =  elem.getAttribute( name );\n\t\t\t}\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( core_rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( rboolean.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false for boolean attributes\n\t\t\t\t\t// Also clear defaultChecked/defaultSelected (if appropriate) for IE<8\n\t\t\t\t\tif ( !getSetAttribute && ruseDefault.test( name ) ) {\n\t\t\t\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] =\n\t\t\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t\t}\n\n\t\t\t\t// See #9699 for explanation of this approach (setting first, then removal)\n\t\t\t\t} else {\n\t\t\t\t\tjQuery.attr( elem, name, \"\" );\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( getSetAttribute ? name : propName );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\ttabindex: \"tabIndex\",\n\t\treadonly: \"readOnly\",\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\tmaxlength: \"maxLength\",\n\t\tcellspacing: \"cellSpacing\",\n\t\tcellpadding: \"cellPadding\",\n\t\trowspan: \"rowSpan\",\n\t\tcolspan: \"colSpan\",\n\t\tusemap: \"useMap\",\n\t\tframeborder: \"frameBorder\",\n\t\tcontenteditable: \"contentEditable\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\treturn ( elem[ name ] = value );\n\t\t\t}\n\n\t\t} else {\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\treturn elem[ name ];\n\t\t\t}\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\tvar attributeNode = elem.getAttributeNode(\"tabindex\");\n\n\t\t\t\treturn attributeNode && attributeNode.specified ?\n\t\t\t\t\tparseInt( attributeNode.value, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t0 :\n\t\t\t\t\t\tundefined;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hook for boolean attributes\nboolHook = {\n\tget: function( elem, name ) {\n\t\tvar\n\t\t\t// Use .prop to determine if this attribute is understood as boolean\n\t\t\tprop = jQuery.prop( elem, name ),\n\n\t\t\t// Fetch it accordingly\n\t\t\tattr = typeof prop === \"boolean\" && elem.getAttribute( name ),\n\t\t\tdetail = typeof prop === \"boolean\" ?\n\n\t\t\t\tgetSetInput && getSetAttribute ?\n\t\t\t\t\tattr != null :\n\t\t\t\t\t// oldIE fabricates an empty string for missing boolean attributes\n\t\t\t\t\t// and conflates checked/selected into attroperties\n\t\t\t\t\truseDefault.test( name ) ?\n\t\t\t\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] :\n\t\t\t\t\t\t!!attr :\n\n\t\t\t\t// fetch an attribute node for properties not recognized as boolean\n\t\t\t\telem.getAttributeNode( name );\n\n\t\treturn detail && detail.value !== false ?\n\t\t\tname.toLowerCase() :\n\t\t\tundefined;\n\t},\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n\t\t\t// IE<8 needs the *property* name\n\t\t\telem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );\n\n\t\t// Use defaultChecked and defaultSelected for oldIE\n\t\t} else {\n\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] = elem[ name ] = true;\n\t\t}\n\n\t\treturn name;\n\t}\n};\n\n// fix oldIE value attroperty\nif ( !getSetInput || !getSetAttribute ) {\n\tjQuery.attrHooks.value = {\n\t\tget: function( elem, name ) {\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\treturn jQuery.nodeName( elem, \"input\" ) ?\n\n\t\t\t\t// Ignore the value *property* by using defaultValue\n\t\t\t\telem.defaultValue :\n\n\t\t\t\tret && ret.specified ? ret.value : undefined;\n\t\t},\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( jQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t// Does not return so that setAttribute is also used\n\t\t\t\telem.defaultValue = value;\n\t\t\t} else {\n\t\t\t\t// Use nodeHook if defined (#1954); otherwise setAttribute is fine\n\t\t\t\treturn nodeHook && nodeHook.set( elem, value, name );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// IE6/7 do not support getting/setting some attributes with get/setAttribute\nif ( !getSetAttribute ) {\n\n\t// Use this for any attribute in IE6/7\n\t// This fixes almost every IE6/7 issue\n\tnodeHook = jQuery.valHooks.button = {\n\t\tget: function( elem, name ) {\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\treturn ret && ( name === \"id\" || name === \"name\" || name === \"coords\" ? ret.value !== \"\" : ret.specified ) ?\n\t\t\t\tret.value :\n\t\t\t\tundefined;\n\t\t},\n\t\tset: function( elem, value, name ) {\n\t\t\t// Set the existing or create a new attribute node\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\tif ( !ret ) {\n\t\t\t\telem.setAttributeNode(\n\t\t\t\t\t(ret = elem.ownerDocument.createAttribute( name ))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tret.value = value += \"\";\n\n\t\t\t// Break association with cloned elements by also using setAttribute (#9646)\n\t\t\treturn name === \"value\" || value === elem.getAttribute( name ) ?\n\t\t\t\tvalue :\n\t\t\t\tundefined;\n\t\t}\n\t};\n\n\t// Set contenteditable to false on removals(#10429)\n\t// Setting to empty string throws an error as an invalid value\n\tjQuery.attrHooks.contenteditable = {\n\t\tget: nodeHook.get,\n\t\tset: function( elem, value, name ) {\n\t\t\tnodeHook.set( elem, value === \"\" ? false : value, name );\n\t\t}\n\t};\n\n\t// Set width and height to auto instead of 0 on empty string( Bug #8150 )\n\t// This is for removals\n\tjQuery.each([ \"width\", \"height\" ], function( i, name ) {\n\t\tjQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\telem.setAttribute( name, \"auto\" );\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n\n// Some attributes require a special call on IE\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !jQuery.support.hrefNormalized ) {\n\tjQuery.each([ \"href\", \"src\", \"width\", \"height\" ], function( i, name ) {\n\t\tjQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar ret = elem.getAttribute( name, 2 );\n\t\t\t\treturn ret == null ? undefined : ret;\n\t\t\t}\n\t\t});\n\t});\n\n\t// href/src property should get the full normalized URL (#10299/#12915)\n\tjQuery.each([ \"href\", \"src\" ], function( i, name ) {\n\t\tjQuery.propHooks[ name ] = {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.getAttribute( name, 4 );\n\t\t\t}\n\t\t};\n\t});\n}\n\nif ( !jQuery.support.style ) {\n\tjQuery.attrHooks.style = {\n\t\tget: function( elem ) {\n\t\t\t// Return undefined in the case of empty string\n\t\t\t// Note: IE uppercases css property names, but if we were to .toLowerCase()\n\t\t\t// .cssText, that would destroy case senstitivity in URL's, like in \"background\"\n\t\t\treturn elem.style.cssText || undefined;\n\t\t},\n\t\tset: function( elem, value ) {\n\t\t\treturn ( elem.style.cssText = value + \"\" );\n\t\t}\n\t};\n}\n\n// Safari mis-reports the default selected property of an option\n// Accessing the parent's selectedIndex property fixes it\nif ( !jQuery.support.optSelected ) {\n\tjQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\t// Make sure that it also works with optgroups, see #5701\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t});\n}\n\n// IE6/7 call enctype encoding\nif ( !jQuery.support.enctype ) {\n\tjQuery.propFix.enctype = \"encoding\";\n}\n\n// Radios and checkboxes getter/setter\nif ( !jQuery.support.checkOn ) {\n\tjQuery.each([ \"radio\", \"checkbox\" ], function() {\n\t\tjQuery.valHooks[ this ] = {\n\t\t\tget: function( elem ) {\n\t\t\t\t// Handle the case where in Webkit \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t\t}\n\t\t};\n\t});\n}\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t});\n});\nvar rformElems = /^(?:input|select|textarea)$/i,\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\t\tvar tmp, events, t, handleObjIn,\n\t\t\tspecial, eventHandle, handleObj,\n\t\t\thandlers, type, namespaces, origType,\n\t\t\telemData = jQuery._data( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n\t\t\t\t\tundefined;\n\t\t\t};\n\t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n\t\t\teventHandle.elem = elem;\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\t// jQuery(...).bind(\"mouseover mouseout\", fn);\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener/attachEvent if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\t// Bind the global event handler to the element\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\n\t\t\t\t\t} else if ( elem.attachEvent ) {\n\t\t\t\t\t\telem.attachEvent( \"on\" + type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\t\tvar j, handleObj, tmp,\n\t\t\torigCount, t, events,\n\t\t\tspecial, handlers, type,\n\t\t\tnamespaces, origType,\n\t\t\telemData = jQuery.hasData( elem ) && jQuery._data( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\n\t\t\t// removeData also checks for emptiness and clears the expando if empty\n\t\t\t// so use it instead of delete\n\t\t\tjQuery._removeData( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\t\tvar handle, ontype, cur,\n\t\t\tbubbleType, special, tmp, i,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = core_hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = core_hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\tevent.isTrigger = true;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( jQuery._data( cur, \"events\" ) || {} )[ event.type ] && jQuery._data( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&\n\t\t\t\t!(type === \"click\" && jQuery.nodeName( elem, \"a\" )) && jQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Can't use an .isFunction() check here because IE6/7 fails that test.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\ttry {\n\t\t\t\t\t\telem[ type ]();\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t// IE<9 dies on focus/blur to hidden element (#1486,#12518)\n\t\t\t\t\t\t// only reproducible on winXP IE8 native, not IE9 in IE8 mode\n\t\t\t\t\t}\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, ret, handleObj, matched, j,\n\t\t\thandlerQueue = [],\n\t\t\targs = core_slice.call( arguments ),\n\t\t\thandlers = ( jQuery._data( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar sel, handleObj, matches, i,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur != this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== \"click\") ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Fix target property (#1925)\n\t\tif ( !event.target ) {\n\t\t\tevent.target = originalEvent.srcElement || document;\n\t\t}\n\n\t\t// Support: Chrome 23+, Safari?\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)\n\t\tevent.metaKey = !!event.metaKey;\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar body, eventDoc, doc,\n\t\t\t\tbutton = original.button,\n\t\t\t\tfromElement = original.fromElement;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add relatedTarget, if necessary\n\t\t\tif ( !event.relatedTarget && fromElement ) {\n\t\t\t\tevent.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( jQuery.nodeName( this, \"input\" ) && this.type === \"checkbox\" && this.click ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== document.activeElement && this.focus ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t\t// If we error on focus to hidden element (#1486, #12518),\n\t\t\t\t\t\t// let .trigger() run the handlers\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === document.activeElement && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Even when returnValue equals to undefined Firefox will still show alert\n\t\t\t\tif ( event.result !== undefined ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{ type: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = document.removeEventListener ?\n\tfunction( elem, type, handle ) {\n\t\tif ( elem.removeEventListener ) {\n\t\t\telem.removeEventListener( type, handle, false );\n\t\t}\n\t} :\n\tfunction( elem, type, handle ) {\n\t\tvar name = \"on\" + type;\n\n\t\tif ( elem.detachEvent ) {\n\n\t\t\t// #8545, #7054, preventing memory leaks for custom events in IE6-8\n\t\t\t// detachEvent needed property on element, by name of that event, to properly expose it to GC\n\t\t\tif ( typeof elem[ name ] === core_strundefined ) {\n\t\t\t\telem[ name ] = null;\n\t\t\t}\n\n\t\t\telem.detachEvent( name, handle );\n\t\t}\n\t};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||\n\t\t\tsrc.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\t\tif ( !e ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If preventDefault exists, run it on the original event\n\t\tif ( e.preventDefault ) {\n\t\t\te.preventDefault();\n\n\t\t// Support: IE\n\t\t// Otherwise set the returnValue property of the original event to false\n\t\t} else {\n\t\t\te.returnValue = false;\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\t\tif ( !e ) {\n\t\t\treturn;\n\t\t}\n\t\t// If stopPropagation exists, run it on the original event\n\t\tif ( e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\n\t\t// Support: IE\n\t\t// Set the cancelBubble property of the original event to true\n\t\te.cancelBubble = true;\n\t},\n\tstopImmediatePropagation: function() {\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// IE submit delegation\nif ( !jQuery.support.submitBubbles ) {\n\n\tjQuery.event.special.submit = {\n\t\tsetup: function() {\n\t\t\t// Only need this for delegated form submit events\n\t\t\tif ( jQuery.nodeName( this, \"form\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Lazy-add a submit handler when a descendant form may potentially be submitted\n\t\t\tjQuery.event.add( this, \"click._submit keypress._submit\", function( e ) {\n\t\t\t\t// Node name check avoids a VML-related crash in IE (#9807)\n\t\t\t\tvar elem = e.target,\n\t\t\t\t\tform = jQuery.nodeName( elem, \"input\" ) || jQuery.nodeName( elem, \"button\" ) ? elem.form : undefined;\n\t\t\t\tif ( form && !jQuery._data( form, \"submitBubbles\" ) ) {\n\t\t\t\t\tjQuery.event.add( form, \"submit._submit\", function( event ) {\n\t\t\t\t\t\tevent._submit_bubble = true;\n\t\t\t\t\t});\n\t\t\t\t\tjQuery._data( form, \"submitBubbles\", true );\n\t\t\t\t}\n\t\t\t});\n\t\t\t// return undefined since we don't need an event listener\n\t\t},\n\n\t\tpostDispatch: function( event ) {\n\t\t\t// If form was submitted by the user, bubble the event up the tree\n\t\t\tif ( event._submit_bubble ) {\n\t\t\t\tdelete event._submit_bubble;\n\t\t\t\tif ( this.parentNode && !event.isTrigger ) {\n\t\t\t\t\tjQuery.event.simulate( \"submit\", this.parentNode, event, true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tteardown: function() {\n\t\t\t// Only need this for delegated form submit events\n\t\t\tif ( jQuery.nodeName( this, \"form\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Remove delegated handlers; cleanData eventually reaps submit handlers attached above\n\t\t\tjQuery.event.remove( this, \"._submit\" );\n\t\t}\n\t};\n}\n\n// IE change delegation and checkbox/radio fix\nif ( !jQuery.support.changeBubbles ) {\n\n\tjQuery.event.special.change = {\n\n\t\tsetup: function() {\n\n\t\t\tif ( rformElems.test( this.nodeName ) ) {\n\t\t\t\t// IE doesn't fire change on a check/radio until blur; trigger it on click\n\t\t\t\t// after a propertychange. Eat the blur-change in special.change.handle.\n\t\t\t\t// This still fires onchange a second time for check/radio after blur.\n\t\t\t\tif ( this.type === \"checkbox\" || this.type === \"radio\" ) {\n\t\t\t\t\tjQuery.event.add( this, \"propertychange._change\", function( event ) {\n\t\t\t\t\t\tif ( event.originalEvent.propertyName === \"checked\" ) {\n\t\t\t\t\t\t\tthis._just_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tjQuery.event.add( this, \"click._change\", function( event ) {\n\t\t\t\t\t\tif ( this._just_changed && !event.isTrigger ) {\n\t\t\t\t\t\t\tthis._just_changed = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Allow triggered, simulated change events (#11500)\n\t\t\t\t\t\tjQuery.event.simulate( \"change\", this, event, true );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// Delegated event; lazy-add a change handler on descendant inputs\n\t\t\tjQuery.event.add( this, \"beforeactivate._change\", function( e ) {\n\t\t\t\tvar elem = e.target;\n\n\t\t\t\tif ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, \"changeBubbles\" ) ) {\n\t\t\t\t\tjQuery.event.add( elem, \"change._change\", function( event ) {\n\t\t\t\t\t\tif ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\n\t\t\t\t\t\t\tjQuery.event.simulate( \"change\", this.parentNode, event, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tjQuery._data( elem, \"changeBubbles\", true );\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\thandle: function( event ) {\n\t\t\tvar elem = event.target;\n\n\t\t\t// Swallow native change events from checkbox/radio, we already triggered them above\n\t\t\tif ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\") ) {\n\t\t\t\treturn event.handleObj.handler.apply( this, arguments );\n\t\t\t}\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tjQuery.event.remove( this, \"._change\" );\n\n\t\t\treturn !rformElems.test( this.nodeName );\n\t\t}\n\t};\n}\n\n// Create \"bubbling\" focus and blur events\nif ( !jQuery.support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler while someone wants focusin/focusout\n\t\tvar attaches = 0,\n\t\t\thandler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tif ( attaches++ === 0 ) {\n\t\t\t\t\tdocument.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tif ( --attaches === 0 ) {\n\t\t\t\t\tdocument.removeEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar type, origFn;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n/*!\n * Sizzle CSS Selector Engine\n * Copyright 2012 jQuery Foundation and other contributors\n * Released under the MIT license\n * http://sizzlejs.com/\n */\n(function( window, undefined ) {\n\nvar i,\n\tcachedruns,\n\tExpr,\n\tgetText,\n\tisXML,\n\tcompile,\n\thasDuplicate,\n\toutermostContext,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsXML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\tsortOrder,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + -(new Date()),\n\tpreferredDoc = window.document,\n\tsupport = {},\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\n\t// General-purpose constants\n\tstrundefined = typeof undefined,\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Array methods\n\tarr = [],\n\tpop = arr.pop,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf if we can't use a native one\n\tindexOf = arr.indexOf || function( elem ) {\n\t\tvar i = 0,\n\t\t\tlen = this.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( this[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\n\toperators = \"([*^$|!~]?=)\",\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\n\t\t\"*(?:\" + operators + whitespace + \"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\n\n\t// Prefer arguments quoted,\n\t//   then not containing pseudos/brackets,\n\t//   then attribute selectors/non-parenthetical expressions,\n\t//   then anything else\n\t// These preferences are here to reduce the number of selectors\n\t//   needing tokenize in the PSEUDO preFilter\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes.replace( 3, 8 ) + \")*)|.*)\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\" + whitespace + \"*\" ),\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"NAME\": new RegExp( \"^\\\\[name=['\\\"]?(\" + characterEncoding + \")['\\\"]?\\\\]\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trsibling = /[\\x20\\t\\r\\n\\f]*[+~]/,\n\n\trnative = /^[^{]+\\{\\s*\\[native code/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trescape = /'|\\\\/g,\n\trattributeQuotes = /\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = /\\\\([\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|.)/g,\n\tfunescape = function( _, escaped ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\treturn high !== high ?\n\t\t\tescaped :\n\t\t\t// BMP codepoint\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t};\n\n// Use a stripped-down slice if we can't use a native one\ntry {\n\tslice.call( preferredDoc.documentElement.childNodes, 0 )[0].nodeType;\n} catch ( e ) {\n\tslice = function( i ) {\n\t\tvar elem,\n\t\t\tresults = [];\n\t\twhile ( (elem = this[i++]) ) {\n\t\t\tresults.push( elem );\n\t\t}\n\t\treturn results;\n\t};\n}\n\n/**\n * For feature detection\n * @param {Function} fn The function to test for native support\n */\nfunction isNative( fn ) {\n\treturn rnative.test( fn + \"\" );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar cache,\n\t\tkeys = [];\n\n\treturn (cache = function( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key += \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key ] = value);\n\t});\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\n\tif ( !documentIsXML && !seed ) {\n\n\t\t// Shortcuts\n\t\tif ( (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getByClassName && context.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, slice.call(context.getElementsByClassName( m ), 0) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && !rbuggyQSA.test(selector) ) {\n\t\t\told = true;\n\t\t\tnid = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType === 9 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && context.parentNode || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results, slice.call( newContext.querySelectorAll(\n\t\t\t\t\t\tnewSelector\n\t\t\t\t\t), 0 ) );\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Detect xml\n * @param {Element|Object} elem An element or a document\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar doc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\n\t// Support tests\n\tdocumentIsXML = isXML( doc );\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.tagNameNoComments = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Check if attributes should be retrieved by attribute nodes\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.innerHTML = \"<select></select>\";\n\t\tvar type = typeof div.lastChild.getAttribute(\"multiple\");\n\t\t// IE8 returns a string for some attributes even when not present\n\t\treturn type !== \"boolean\" && type !== \"string\";\n\t});\n\n\t// Check if getElementsByClassName can be trusted\n\tsupport.getByClassName = assert(function( div ) {\n\t\t// Opera can't find a second classname (in 9.6)\n\t\tdiv.innerHTML = \"<div class='hidden e'></div><div class='hidden'></div>\";\n\t\tif ( !div.getElementsByClassName || !div.getElementsByClassName(\"e\").length ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Safari 3.2 caches class attributes and doesn't catch changes\n\t\tdiv.lastChild.className = \"e\";\n\t\treturn div.getElementsByClassName(\"e\").length === 2;\n\t});\n\n\t// Check if getElementById returns elements by name\n\t// Check if getElementsByName privileges form controls or returns elements by ID\n\tsupport.getByName = assert(function( div ) {\n\t\t// Inject content\n\t\tdiv.id = expando + 0;\n\t\tdiv.innerHTML = \"<a name='\" + expando + \"'></a><div name='\" + expando + \"'></div>\";\n\t\tdocElem.insertBefore( div, docElem.firstChild );\n\n\t\t// Test\n\t\tvar pass = doc.getElementsByName &&\n\t\t\t// buggy browsers will return fewer than the correct 2\n\t\t\tdoc.getElementsByName( expando ).length === 2 +\n\t\t\t// buggy browsers will return more than the correct 0\n\t\t\tdoc.getElementsByName( expando + 0 ).length;\n\t\tsupport.getIdNotName = !doc.getElementById( expando );\n\n\t\t// Cleanup\n\t\tdocElem.removeChild( div );\n\n\t\treturn pass;\n\t});\n\n\t// IE6/7 return modified attributes\n\tExpr.attrHandle = assert(function( div ) {\n\t\tdiv.innerHTML = \"<a href='#'></a>\";\n\t\treturn div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&\n\t\t\tdiv.firstChild.getAttribute(\"href\") === \"#\";\n\t}) ?\n\t\t{} :\n\t\t{\n\t\t\t\"href\": function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"href\", 2 );\n\t\t\t},\n\t\t\t\"type\": function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"type\");\n\t\t\t}\n\t\t};\n\n\t// ID find and filter\n\tif ( support.getIdNotName ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && !documentIsXML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [m] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && !documentIsXML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\n\t\t\t\treturn m ?\n\t\t\t\t\tm.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode(\"id\").value === id ?\n\t\t\t\t\t\t[m] :\n\t\t\t\t\t\tundefined :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.tagNameNoComments ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\t\t\t}\n\t\t} :\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Name\n\tExpr.find[\"NAME\"] = support.getByName && function( tag, context ) {\n\t\tif ( typeof context.getElementsByName !== strundefined ) {\n\t\t\treturn context.getElementsByName( name );\n\t\t}\n\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== strundefined && !documentIsXML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21),\n\t// no need to also add to buggyMatches since matches checks buggyQSA\n\t// A support test would require too much code (would include document ready)\n\trbuggyQSA = [ \":focus\" ];\n\n\tif ( (support.qsa = isNative(doc.querySelectorAll)) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explictly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdiv.innerHTML = \"<select><option selected=''></option></select>\";\n\n\t\t\t// IE8 - Some boolean attributes are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\n\t\t\t// Opera 10-12/IE8 - ^= $= *= and empty values\n\t\t\t// Should not select anything\n\t\t\tdiv.innerHTML = \"<input type='hidden' i=''/>\";\n\t\t\tif ( div.querySelectorAll(\"[i^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:\\\"\\\"|'')\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = isNative( (matches = docElem.matchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = new RegExp( rbuggyMatches.join(\"|\") );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = isNative(docElem.contains) || docElem.compareDocumentPosition ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t// Document order sorting\n\tsortOrder = docElem.compareDocumentPosition ?\n\tfunction( a, b ) {\n\t\tvar compare;\n\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( (compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b )) ) {\n\t\t\tif ( compare & 1 || a.parentNode && a.parentNode.nodeType === 11 ) {\n\t\t\t\tif ( a === doc || contains( preferredDoc, a ) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === doc || contains( preferredDoc, b ) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t}\n\n\t\treturn a.compareDocumentPosition ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\t} else if ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\t// Always assume the presence of duplicates if sort doesn't\n\t// pass them to our comparison function (as in Google Chrome).\n\thasDuplicate = false;\n\t[0, 0].sort( sortOrder );\n\tsupport.detectDuplicates = hasDuplicate;\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\t// rbuggyQSA always contains :focus, so no need for an existence check\n\tif ( support.matchesSelector && !documentIsXML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && !rbuggyQSA.test(expr) ) {\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch(e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [elem] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\tvar val;\n\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tif ( !documentIsXML ) {\n\t\tname = name.toLowerCase();\n\t}\n\tif ( (val = Expr.attrHandle[ name ]) ) {\n\t\treturn val( elem );\n\t}\n\tif ( documentIsXML || support.attributes ) {\n\t\treturn elem.getAttribute( name );\n\t}\n\treturn ( (val = elem.getAttributeNode( name )) || elem.getAttribute( name ) ) && elem[ name ] === true ?\n\t\tname :\n\t\tval && val.specified ? val.value : null;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n// Document sorting and removing duplicates\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\ti = 1,\n\t\tj = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\tfor ( ; (elem = results[i]); i++ ) {\n\t\t\tif ( elem === results[ i - 1 ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\treturn results;\n};\n\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && ( ~b.sourceIndex || MAX_NEGATIVE ) - ( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n// Returns a function to use in pseudos for input types\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n// Returns a function to use in pseudos for buttons\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n// Returns a function to use in pseudos for positionals\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\tfor ( ; (node = elem[i]); i++ ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (see #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[5] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[4] ) {\n\t\t\t\tmatch[2] = match[4];\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeName ) {\n\t\t\tif ( nodeName === \"*\" ) {\n\t\t\t\treturn function() { return true; };\n\t\t\t}\n\n\t\t\tnodeName = nodeName.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\")) || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifider\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsXML ?\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\") :\n\t\t\t\t\t\telem.lang) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\n\t\t\t//   not comment, processing instructions, or others\n\t\t\t// Thanks to Diego Perini for the nodeName shortcut\n\t\t\t//   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeName > \"@\" || elem.nodeType === 3 || elem.nodeType === 4 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\t// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n\t\t\t// use getAttribute instead to test this case\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === elem.type );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\nfunction tokenize( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( tokens = [] );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n}\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar data, cache, outerCache,\n\t\t\t\tdirkey = dirruns + \" \" + doneName;\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {\n\t\t\t\t\t\t\tif ( (data = cache[1]) === true || data === cachedruns ) {\n\t\t\t\t\t\t\t\treturn data === true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcache = outerCache[ dir ] = [ dirkey ];\n\t\t\t\t\t\t\tcache[1] = matcher( elem, context, xml ) || cachedruns;\n\t\t\t\t\t\t\tif ( cache[1] === true ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector( tokens.slice( 0, i - 1 ) ).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t// A counter to specify which element is currently being matched\n\tvar matcherCachedRuns = 0,\n\t\tbySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, expandContext ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tsetMatched = [],\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\toutermost = expandContext != null,\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t\tcachedruns = matcherCachedRuns;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\tcachedruns = ++matcherCachedRuns;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !group ) {\n\t\t\tgroup = tokenize( selector );\n\t\t}\n\t\ti = group.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( group[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t}\n\treturn cached;\n};\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction select( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tmatch = tokenize( selector );\n\n\tif ( !seed ) {\n\t\t// Try to minimize operations if there is only one group\n\t\tif ( match.length === 1 ) {\n\n\t\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tcontext.nodeType === 9 && !documentIsXML &&\n\t\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\t\tcontext = Expr.find[\"ID\"]( token.matches[0].replace( runescape, funescape ), context )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && context.parentNode || context\n\t\t\t\t\t)) ) {\n\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, slice.call( seed, 0 ) );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\tcompile( selector, match )(\n\t\tseed,\n\t\tcontext,\n\t\tdocumentIsXML,\n\t\tresults,\n\t\trsibling.test( selector )\n\t);\n\treturn results;\n}\n\n// Deprecated\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nExpr.filters = setFilters.prototype = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\n// Initialize with the default document\nsetDocument();\n\n// Override sizzle attribute retrieval\nSizzle.attr = jQuery.attr;\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n})( window );\nvar runtil = /Until$/,\n\trparentsprev = /^(?:parents|prev(?:Until|All))/,\n\tisSimple = /^.[^:#\\[\\.,]*$/,\n\trneedsContext = jQuery.expr.match.needsContext,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i, ret, self,\n\t\t\tlen = this.length;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\tself = this;\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tret = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, this[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = ( this.selector ? this.selector + \" \" : \"\" ) + selector;\n\t\treturn ret;\n\t},\n\n\thas: function( target ) {\n\t\tvar i,\n\t\t\ttargets = jQuery( target, this ),\n\t\t\tlen = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector, false) );\n\t},\n\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector, true) );\n\t},\n\n\tis: function( selector ) {\n\t\treturn !!selector && (\n\t\t\ttypeof selector === \"string\" ?\n\t\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\t\trneedsContext.test( selector ) ?\n\t\t\t\t\tjQuery( selector, this.context ).index( this[0] ) >= 0 :\n\t\t\t\t\tjQuery.filter( selector, this ).length > 0 :\n\t\t\t\tthis.filter( selector ).length > 0 );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tret = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tcur = this[i];\n\n\t\t\twhile ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {\n\t\t\t\tif ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {\n\t\t\t\t\tret.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( ret.length > 1 ? jQuery.unique( ret ) : ret );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn jQuery.inArray( this[0], jQuery( elem ) );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn jQuery.inArray(\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[0] : elem, this );\n\t},\n\n\tadd: function( selector, context ) {\n\t\tvar set = typeof selector === \"string\" ?\n\t\t\t\tjQuery( selector, context ) :\n\t\t\t\tjQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\n\t\t\tall = jQuery.merge( this.get(), set );\n\n\t\treturn this.pushStack( jQuery.unique(all) );\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\nfunction sibling( cur, dir ) {\n\tdo {\n\t\tcur = cur[ dir ];\n\t} while ( cur && cur.nodeType !== 1 );\n\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn jQuery.nodeName( elem, \"iframe\" ) ?\n\t\t\telem.contentDocument || elem.contentWindow.document :\n\t\t\tjQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar ret = jQuery.map( this, fn, until );\n\n\t\tif ( !runtil.test( name ) ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tret = jQuery.filter( selector, ret );\n\t\t}\n\n\t\tret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;\n\n\t\tif ( this.length > 1 && rparentsprev.test( name ) ) {\n\t\t\tret = ret.reverse();\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\njQuery.extend({\n\tfilter: function( expr, elems, not ) {\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\n\t\treturn elems.length === 1 ?\n\t\t\tjQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :\n\t\t\tjQuery.find.matches(expr, elems);\n\t},\n\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\tcur = elem[ dir ];\n\n\t\twhile ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {\n\t\t\tif ( cur.nodeType === 1 ) {\n\t\t\t\tmatched.push( cur );\n\t\t\t}\n\t\t\tcur = cur[dir];\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar r = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tr.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n});\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, keep ) {\n\n\t// Can't pass null or undefined to indexOf in Firefox 4\n\t// Set to 0 to skip string check\n\tqualifier = qualifier || 0;\n\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep(elements, function( elem, i ) {\n\t\t\tvar retVal = !!qualifier.call( elem, i, elem );\n\t\t\treturn retVal === keep;\n\t\t});\n\n\t} else if ( qualifier.nodeType ) {\n\t\treturn jQuery.grep(elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) === keep;\n\t\t});\n\n\t} else if ( typeof qualifier === \"string\" ) {\n\t\tvar filtered = jQuery.grep(elements, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t});\n\n\t\tif ( isSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter(qualifier, filtered, !keep);\n\t\t} else {\n\t\t\tqualifier = jQuery.filter( qualifier, filtered );\n\t\t}\n\t}\n\n\treturn jQuery.grep(elements, function( elem ) {\n\t\treturn ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;\n\t});\n}\nfunction createSafeFragment( document ) {\n\tvar list = nodeNames.split( \"|\" ),\n\t\tsafeFrag = document.createDocumentFragment();\n\n\tif ( safeFrag.createElement ) {\n\t\twhile ( list.length ) {\n\t\t\tsafeFrag.createElement(\n\t\t\t\tlist.pop()\n\t\t\t);\n\t\t}\n\t}\n\treturn safeFrag;\n}\n\nvar nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\n\t\t\"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\n\trinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\n\trnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n\trleadingWhitespace = /^\\s+/,\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trtbody = /<tbody/i,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\tmanipulation_rcheckableType = /^(?:checkbox|radio)$/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\t\tlegend: [ 1, \"<fieldset>\", \"</fieldset>\" ],\n\t\tarea: [ 1, \"<map>\", \"</map>\" ],\n\t\tparam: [ 1, \"<object>\", \"</object>\" ],\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\tcol: [ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\n\t\t// unless wrapped in a div with non-breaking characters in front of it.\n\t\t_default: jQuery.support.htmlSerialize ? [ 0, \"\", \"\" ] : [ 1, \"X<div>\", \"</div>\"  ]\n\t},\n\tsafeFragment = createSafeFragment( document ),\n\tfragmentDiv = safeFragment.appendChild( document.createElement(\"div\") );\n\nwrapMap.optgroup = wrapMap.option;\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );\n\t\t}, null, value, arguments.length );\n\t},\n\n\twrapAll: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function(i) {\n\t\t\t\tjQuery(this).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[0] ) {\n\t\t\t// The elements to wrap the target around\n\t\t\tvar wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\n\n\t\t\tif ( this[0].parentNode ) {\n\t\t\t\twrap.insertBefore( this[0] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\n\t\t\t\t\telem = elem.firstChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function(i) {\n\t\t\t\tjQuery(this).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function(i) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip(arguments, true, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tthis.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip(arguments, true, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tthis.insertBefore( elem, this.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, false, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, false, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\t// keepData is for internal use only--do not document\n\tremove: function( selector, keepData ) {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( !selector || jQuery.filter( selector, [ elem ] ).length > 0 ) {\n\t\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t\t}\n\n\t\t\t\tif ( elem.parentNode ) {\n\t\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t}\n\n\t\t\t// Remove any remaining nodes\n\t\t\twhile ( elem.firstChild ) {\n\t\t\t\telem.removeChild( elem.firstChild );\n\t\t\t}\n\n\t\t\t// If this is a select, ensure that it displays empty (#12336)\n\t\t\t// Support: IE<9\n\t\t\tif ( elem.options && jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\telem.options.length = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function () {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar elem = this[0] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined ) {\n\t\t\t\treturn elem.nodeType === 1 ?\n\t\t\t\t\telem.innerHTML.replace( rinlinejQuery, \"\" ) :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&\n\t\t\t\t( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [\"\", \"\"] )[1].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (; i < l; i++ ) {\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\telem = this[i] || {};\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch(e) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function( value ) {\n\t\tvar isFunc = jQuery.isFunction( value );\n\n\t\t// Make sure that the elements are removed from the DOM before they are inserted\n\t\t// this can help fix replacing a parent with child elements\n\t\tif ( !isFunc && typeof value !== \"string\" ) {\n\t\t\tvalue = jQuery( value ).not( this ).detach();\n\t\t}\n\n\t\treturn this.domManip( [ value ], true, function( elem ) {\n\t\t\tvar next = this.nextSibling,\n\t\t\t\tparent = this.parentNode;\n\n\t\t\tif ( parent ) {\n\t\t\t\tjQuery( this ).remove();\n\t\t\t\tparent.insertBefore( elem, next );\n\t\t\t}\n\t\t});\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, table, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = core_concat.apply( [], args );\n\n\t\tvar first, node, hasScripts,\n\t\t\tscripts, doc, fragment,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[0],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction || !( l <= 1 || typeof value !== \"string\" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[0] = value.call( this, index, table ? self.html() : undefined );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, table, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\ttable = table && jQuery.nodeName( first, \"tr\" );\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call(\n\t\t\t\t\t\ttable && jQuery.nodeName( this[i], \"table\" ) ?\n\t\t\t\t\t\t\tfindOrAppend( this[i], \"tbody\" ) :\n\t\t\t\t\t\t\tthis[i],\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\ti\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!jQuery._data( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Hope ajax is available...\n\t\t\t\t\t\t\t\tjQuery.ajax({\n\t\t\t\t\t\t\t\t\turl: node.src,\n\t\t\t\t\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\t\t\t\t\tdataType: \"script\",\n\t\t\t\t\t\t\t\t\tasync: false,\n\t\t\t\t\t\t\t\t\tglobal: false,\n\t\t\t\t\t\t\t\t\t\"throws\": true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( ( node.text || node.textContent || node.innerHTML || \"\" ).replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fix #11809: Avoid leaking memory\n\t\t\t\tfragment = first = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\nfunction findOrAppend( elem, tag ) {\n\treturn elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\tvar attr = elem.getAttributeNode(\"type\");\n\telem.type = ( attr && attr.specified ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\tif ( match ) {\n\t\telem.type = match[1];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar elem,\n\t\ti = 0;\n\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\tjQuery._data( elem, \"globalEval\", !refElements || jQuery._data( refElements[i], \"globalEval\" ) );\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\n\tif ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\n\t\treturn;\n\t}\n\n\tvar type, i, l,\n\t\toldData = jQuery._data( src ),\n\t\tcurData = jQuery._data( dest, oldData ),\n\t\tevents = oldData.events;\n\n\tif ( events ) {\n\t\tdelete curData.handle;\n\t\tcurData.events = {};\n\n\t\tfor ( type in events ) {\n\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// make the cloned public data object a copy from the original\n\tif ( curData.data ) {\n\t\tcurData.data = jQuery.extend( {}, curData.data );\n\t}\n}\n\nfunction fixCloneNodeIssues( src, dest ) {\n\tvar nodeName, e, data;\n\n\t// We do not need to do anything for non-Elements\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\tnodeName = dest.nodeName.toLowerCase();\n\n\t// IE6-8 copies events bound via attachEvent when using cloneNode.\n\tif ( !jQuery.support.noCloneEvent && dest[ jQuery.expando ] ) {\n\t\tdata = jQuery._data( dest );\n\n\t\tfor ( e in data.events ) {\n\t\t\tjQuery.removeEvent( dest, e, data.handle );\n\t\t}\n\n\t\t// Event data gets referenced instead of copied if the expando gets copied too\n\t\tdest.removeAttribute( jQuery.expando );\n\t}\n\n\t// IE blanks contents when cloning scripts, and tries to evaluate newly-set text\n\tif ( nodeName === \"script\" && dest.text !== src.text ) {\n\t\tdisableScript( dest ).text = src.text;\n\t\trestoreScript( dest );\n\n\t// IE6-10 improperly clones children of object elements using classid.\n\t// IE10 throws NoModificationAllowedError if parent is null, #12132.\n\t} else if ( nodeName === \"object\" ) {\n\t\tif ( dest.parentNode ) {\n\t\t\tdest.outerHTML = src.outerHTML;\n\t\t}\n\n\t\t// This path appears unavoidable for IE9. When cloning an object\n\t\t// element in IE9, the outerHTML strategy above is not sufficient.\n\t\t// If the src has innerHTML and the destination does not,\n\t\t// copy the src.innerHTML into the dest.innerHTML. #10324\n\t\tif ( jQuery.support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {\n\t\t\tdest.innerHTML = src.innerHTML;\n\t\t}\n\n\t} else if ( nodeName === \"input\" && manipulation_rcheckableType.test( src.type ) ) {\n\t\t// IE6-8 fails to persist the checked state of a cloned checkbox\n\t\t// or radio button. Worse, IE6-7 fail to give the cloned element\n\t\t// a checked appearance if the defaultChecked value isn't also set\n\n\t\tdest.defaultChecked = dest.checked = src.checked;\n\n\t\t// IE6-7 get confused and end up setting the value of a cloned\n\t\t// checkbox/radio button to an empty string instead of \"on\"\n\t\tif ( dest.value !== src.value ) {\n\t\t\tdest.value = src.value;\n\t\t}\n\n\t// IE6-8 fails to return the selected option to the default selected\n\t// state when cloning options\n\t} else if ( nodeName === \"option\" ) {\n\t\tdest.defaultSelected = dest.selected = src.defaultSelected;\n\n\t// IE6-8 fails to set the defaultValue to the correct value when\n\t// cloning other types of input fields\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\ti = 0,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone(true);\n\t\t\tjQuery( insert[i] )[ original ]( elems );\n\n\t\t\t// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()\n\t\t\tcore_push.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\nfunction getAll( context, tag ) {\n\tvar elems, elem,\n\t\ti = 0,\n\t\tfound = typeof context.getElementsByTagName !== core_strundefined ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== core_strundefined ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\tundefined;\n\n\tif ( !found ) {\n\t\tfor ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !tag || jQuery.nodeName( elem, tag ) ) {\n\t\t\t\tfound.push( elem );\n\t\t\t} else {\n\t\t\t\tjQuery.merge( found, getAll( elem, tag ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], found ) :\n\t\tfound;\n}\n\n// Used in buildFragment, fixes the defaultChecked property\nfunction fixDefaultChecked( elem ) {\n\tif ( manipulation_rcheckableType.test( elem.type ) ) {\n\t\telem.defaultChecked = elem.checked;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar destElements, node, clone, i, srcElements,\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\tif ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( \"<\" + elem.nodeName + \">\" ) ) {\n\t\t\tclone = elem.cloneNode( true );\n\n\t\t// IE<=8 does not properly clone detached, unknown element nodes\n\t\t} else {\n\t\t\tfragmentDiv.innerHTML = elem.outerHTML;\n\t\t\tfragmentDiv.removeChild( clone = fragmentDiv.firstChild );\n\t\t}\n\n\t\tif ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&\n\t\t\t\t(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\t// Fix all IE cloning issues\n\t\t\tfor ( i = 0; (node = srcElements[i]) != null; ++i ) {\n\t\t\t\t// Ensure that the destination node is not null; Fixes #9587\n\t\t\t\tif ( destElements[i] ) {\n\t\t\t\t\tfixCloneNodeIssues( node, destElements[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0; (node = srcElements[i]) != null; i++ ) {\n\t\t\t\t\tcloneCopyEvent( node, destElements[i] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\tdestElements = srcElements = node = null;\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar j, elem, contains,\n\t\t\ttmp, tag, tbody, wrap,\n\t\t\tl = elems.length,\n\n\t\t\t// Ensure a safe fragment\n\t\t\tsafe = createSafeFragment( context ),\n\n\t\t\tnodes = [],\n\t\t\ti = 0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || safe.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [\"\", \"\"] )[1].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\n\t\t\t\t\ttmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[2];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[0];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Manually add leading whitespace removed by IE\n\t\t\t\t\tif ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\n\t\t\t\t\t\tnodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\t\t\tif ( !jQuery.support.tbody ) {\n\n\t\t\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\t\t\telem = tag === \"table\" && !rtbody.test( elem ) ?\n\t\t\t\t\t\t\ttmp.firstChild :\n\n\t\t\t\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\t\t\t\twrap[1] === \"<table>\" && !rtbody.test( elem ) ?\n\t\t\t\t\t\t\t\ttmp :\n\t\t\t\t\t\t\t\t0;\n\n\t\t\t\t\t\tj = elem && elem.childNodes.length;\n\t\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\t\tif ( jQuery.nodeName( (tbody = elem.childNodes[j]), \"tbody\" ) && !tbody.childNodes.length ) {\n\t\t\t\t\t\t\t\telem.removeChild( tbody );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Fix #12392 for WebKit and IE > 9\n\t\t\t\t\ttmp.textContent = \"\";\n\n\t\t\t\t\t// Fix #12392 for oldIE\n\t\t\t\t\twhile ( tmp.firstChild ) {\n\t\t\t\t\t\ttmp.removeChild( tmp.firstChild );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remember the top-level container for proper cleanup\n\t\t\t\t\ttmp = safe.lastChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Fix #11356: Clear elements from fragment\n\t\tif ( tmp ) {\n\t\t\tsafe.removeChild( tmp );\n\t\t}\n\n\t\t// Reset defaultChecked for any radios and checkboxes\n\t\t// about to be appended to the DOM in IE 6/7 (#8060)\n\t\tif ( !jQuery.support.appendChecked ) {\n\t\t\tjQuery.grep( getAll( nodes, \"input\" ), fixDefaultChecked );\n\t\t}\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( safe.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttmp = null;\n\n\t\treturn safe;\n\t},\n\n\tcleanData: function( elems, /* internal */ acceptData ) {\n\t\tvar elem, type, id, data,\n\t\t\ti = 0,\n\t\t\tinternalKey = jQuery.expando,\n\t\t\tcache = jQuery.cache,\n\t\t\tdeleteExpando = jQuery.support.deleteExpando,\n\t\t\tspecial = jQuery.event.special;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\n\t\t\tif ( acceptData || jQuery.acceptData( elem ) ) {\n\n\t\t\t\tid = elem[ internalKey ];\n\t\t\t\tdata = id && cache[ id ];\n\n\t\t\t\tif ( data ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove cache only if it was not already removed by jQuery.event.remove\n\t\t\t\t\tif ( cache[ id ] ) {\n\n\t\t\t\t\t\tdelete cache[ id ];\n\n\t\t\t\t\t\t// IE does not allow us to delete expando properties from nodes,\n\t\t\t\t\t\t// nor does it have a removeAttribute function on Document nodes;\n\t\t\t\t\t\t// we must handle all of these cases\n\t\t\t\t\t\tif ( deleteExpando ) {\n\t\t\t\t\t\t\tdelete elem[ internalKey ];\n\n\t\t\t\t\t\t} else if ( typeof elem.removeAttribute !== core_strundefined ) {\n\t\t\t\t\t\t\telem.removeAttribute( internalKey );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telem[ internalKey ] = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcore_deletedIds.push( id );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\nvar iframe, getStyles, curCSS,\n\tralpha = /alpha\\([^)]*\\)/i,\n\tropacity = /opacity\\s*=\\s*([^)]*)/,\n\trposition = /^(top|right|bottom|left)$/,\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trmargin = /^margin/,\n\trnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\n\trnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + core_pnum + \")\", \"i\" ),\n\telemdisplay = { BODY: \"block\" },\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: 0,\n\t\tfontWeight: 400\n\t},\n\n\tcssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name.charAt(0).toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction isHidden( elem, el ) {\n\t// isHidden might be called from jQuery#filter function;\n\t// in that case, element will be second argument\n\telem = el || elem;\n\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = jQuery._data( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = jQuery._data( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\n\t\t\tif ( !values[ index ] ) {\n\t\t\t\thidden = isHidden( elem );\n\n\t\t\t\tif ( display && display !== \"none\" || !hidden ) {\n\t\t\t\t\tjQuery._data( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn jQuery.access( this, function( elem, name, value ) {\n\t\t\tvar len, styles,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tvar bool = typeof state === \"boolean\";\n\n\t\treturn this.each(function() {\n\t\t\tif ( bool ? state : isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Exclude the following css properties to add px\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that NaN and null values aren't set. See: #7116\n\t\t\tif ( value == null || type === \"number\" && isNaN( value ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !jQuery.support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\n\t\t\t\t// Wrapped to prevent IE from throwing errors when 'invalid' values are provided\n\t\t\t\t// Fixes bug #5509\n\t\t\t\ttry {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t} catch(e) {}\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar num, val, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t},\n\n\t// A method for quickly swapping in/out CSS properties to get correct calculations\n\tswap: function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\n\t\tret = callback.apply( elem, args || [] );\n\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\n\t\treturn ret;\n\t}\n});\n\n// NOTE: we've included the \"window\" in window.getComputedStyle\n// because jsdom on node.js will break without it.\nif ( window.getComputedStyle ) {\n\tgetStyles = function( elem ) {\n\t\treturn window.getComputedStyle( elem, null );\n\t};\n\n\tcurCSS = function( elem, name, _computed ) {\n\t\tvar width, minWidth, maxWidth,\n\t\t\tcomputed = _computed || getStyles( elem ),\n\n\t\t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\t\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,\n\t\t\tstyle = elem.style;\n\n\t\tif ( computed ) {\n\n\t\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\tret = jQuery.style( elem, name );\n\t\t\t}\n\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Chrome < 17 and Safari 5.0 uses \"computed value\" instead of \"used value\" for margin-right\n\t\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t};\n} else if ( document.documentElement.currentStyle ) {\n\tgetStyles = function( elem ) {\n\t\treturn elem.currentStyle;\n\t};\n\n\tcurCSS = function( elem, name, _computed ) {\n\t\tvar left, rs, rsLeft,\n\t\t\tcomputed = _computed || getStyles( elem ),\n\t\t\tret = computed ? computed[ name ] : undefined,\n\t\t\tstyle = elem.style;\n\n\t\t// Avoid setting ret to empty string here\n\t\t// so we don't default to auto\n\t\tif ( ret == null && style && style[ name ] ) {\n\t\t\tret = style[ name ];\n\t\t}\n\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t\t// If we're not dealing with a regular pixel number\n\t\t// but a number that has a weird ending, we need to convert it to pixels\n\t\t// but not position css attributes, as those are proportional to the parent element instead\n\t\t// and we can't measure the parent instead because it might trigger a \"stacking dolls\" problem\n\t\tif ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\tleft = style.left;\n\t\t\trs = elem.runtimeStyle;\n\t\t\trsLeft = rs && rs.left;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tif ( rsLeft ) {\n\t\t\t\trs.left = elem.currentStyle.left;\n\t\t\t}\n\t\t\tstyle.left = name === \"fontSize\" ? \"1em\" : ret;\n\t\t\tret = style.pixelLeft + \"px\";\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.left = left;\n\t\t\tif ( rsLeft ) {\n\t\t\t\trs.left = rsLeft;\n\t\t\t}\n\t\t}\n\n\t\treturn ret === \"\" ? \"auto\" : ret;\n\t};\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\n// Try to determine the default display value of an element\nfunction css_defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe ||\n\t\t\t\tjQuery(\"<iframe frameborder='0' width='0' height='0'/>\")\n\t\t\t\t.css( \"cssText\", \"display:block !important\" )\n\t\t\t).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;\n\t\t\tdoc.write(\"<!doctype html><html><body>\");\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\n// Called ONLY from within css_defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\t\tdisplay = jQuery.css( elem[0], \"display\" );\n\telem.remove();\n\treturn display;\n}\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, \"display\" ) ) ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\nif ( !jQuery.support.opacity ) {\n\tjQuery.cssHooks.opacity = {\n\t\tget: function( elem, computed ) {\n\t\t\t// IE uses filters for opacity\n\t\t\treturn ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\" ) ?\n\t\t\t\t( 0.01 * parseFloat( RegExp.$1 ) ) + \"\" :\n\t\t\t\tcomputed ? \"1\" : \"\";\n\t\t},\n\n\t\tset: function( elem, value ) {\n\t\t\tvar style = elem.style,\n\t\t\t\tcurrentStyle = elem.currentStyle,\n\t\t\t\topacity = jQuery.isNumeric( value ) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n\t\t\t\tfilter = currentStyle && currentStyle.filter || style.filter || \"\";\n\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\tstyle.zoom = 1;\n\n\t\t\t// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\n\t\t\t// if value === \"\", then remove inline opacity #12685\n\t\t\tif ( ( value >= 1 || value === \"\" ) &&\n\t\t\t\t\tjQuery.trim( filter.replace( ralpha, \"\" ) ) === \"\" &&\n\t\t\t\t\tstyle.removeAttribute ) {\n\n\t\t\t\t// Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\n\t\t\t\t// if \"filter:\" is present at all, clearType is disabled, we want to avoid this\n\t\t\t\t// style.removeAttribute is IE Only, but so apparently is this code path...\n\t\t\t\tstyle.removeAttribute( \"filter\" );\n\n\t\t\t\t// if there is no filter style applied in a css rule or unset inline opacity, we are done\n\t\t\t\tif ( value === \"\" || currentStyle && !currentStyle.filter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise, set new filter values\n\t\t\tstyle.filter = ralpha.test( filter ) ?\n\t\t\t\tfilter.replace( ralpha, opacity ) :\n\t\t\t\tfilter + \" \" + opacity;\n\t\t}\n\t};\n}\n\n// These hooks cannot be added until DOM ready because the support test\n// for it is not run until after DOM ready\njQuery(function() {\n\tif ( !jQuery.support.reliableMarginRight ) {\n\t\tjQuery.cssHooks.marginRight = {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// getComputedStyle returns percent when specified for top/left/bottom/right\n\t// rather than make the css module depend on the offset module, we just check for it here\n\tif ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\n\t\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\t\tjQuery.cssHooks[ prop ] = {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\t\tcomputed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n});\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.hidden = function( elem ) {\n\t\t// Support: Opera <= 12.12\n\t\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||\n\t\t\t(!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, \"display\" )) === \"none\");\n\t};\n\n\tjQuery.expr.filters.visible = function( elem ) {\n\t\treturn !jQuery.expr.filters.hidden( elem );\n\t};\n}\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\tvar type = this.type;\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !manipulation_rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ){\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ){\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n//Serialize an array of form elements or a set of\n//key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.hover = function( fnOver, fnOut ) {\n\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n};\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\tajax_nonce = jQuery.now(),\n\n\tajax_rquery = /\\?/,\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t// Keep a copy of the old load method\n\t_load = jQuery.fn.load,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar deep, key,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, response, type,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = url.slice( off, url.length );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ){\n\tjQuery.fn[ type ] = function( fn ){\n\t\treturn this.on( type, fn );\n\t};\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": window.String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar // Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers as string\n\t\t\tresponseHeadersString,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\ttransport,\n\t\t\t// Response headers\n\t\t\tresponseHeaders,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" ).replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( core_rnotwhite ) || [\"\"];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? 80 : 443 ) ) !=\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? 80 : 443 ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\tfireGlobals = s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + ajax_nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ajax_nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( status >= 200 && status < 300 || status === 304 ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 ) {\n\t\t\t\t\tisSuccess = true;\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tisSuccess = true;\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tisSuccess = ajaxConvert( s, response );\n\t\t\t\t\tstatusText = isSuccess.state;\n\t\t\t\t\tsuccess = isSuccess.data;\n\t\t\t\t\terror = isSuccess.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t}\n});\n\n/* Handles responses to an ajax request:\n * - sets all responseXXX fields accordingly\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\tvar firstDataType, ct, finalDataType, type,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes,\n\t\tresponseFields = s.responseFields;\n\n\t// Fill responseXXX fields\n\tfor ( type in responseFields ) {\n\t\tif ( type in responses ) {\n\t\t\tjqXHR[ responseFields[type] ] = responses[ type ];\n\t\t}\n\t}\n\n\t// Remove auto dataType and get content-type in the process\n\twhile( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n// Chain conversions given the request and the original response\nfunction ajaxConvert( s, response ) {\n\tvar conv2, current, conv, tmp,\n\t\tconverters = {},\n\t\ti = 0,\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice(),\n\t\tprev = dataTypes[ 0 ];\n\n\t// Apply the dataFilter if provided\n\tif ( s.dataFilter ) {\n\t\tresponse = s.dataFilter( response, s.dataType );\n\t}\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\t// Convert to each sequential dataType, tolerating list modification\n\tfor ( ; (current = dataTypes[++i]); ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\tif ( current !== \"*\" ) {\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\tif ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split(\" \");\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.splice( i--, 0, current );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[\"throws\"] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update prev for next iteration\n\t\t\tprev = current;\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and global\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t\ts.global = false;\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function(s) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\n\t\tvar script,\n\t\t\thead = document.head || jQuery(\"head\")[0] || document.documentElement;\n\n\t\treturn {\n\n\t\t\tsend: function( _, callback ) {\n\n\t\t\t\tscript = document.createElement(\"script\");\n\n\t\t\t\tscript.async = true;\n\n\t\t\t\tif ( s.scriptCharset ) {\n\t\t\t\t\tscript.charset = s.scriptCharset;\n\t\t\t\t}\n\n\t\t\t\tscript.src = s.url;\n\n\t\t\t\t// Attach handlers for all browsers\n\t\t\t\tscript.onload = script.onreadystatechange = function( _, isAbort ) {\n\n\t\t\t\t\tif ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t\t\t// Handle memory leak in IE\n\t\t\t\t\t\tscript.onload = script.onreadystatechange = null;\n\n\t\t\t\t\t\t// Remove the script\n\t\t\t\t\t\tif ( script.parentNode ) {\n\t\t\t\t\t\t\tscript.parentNode.removeChild( script );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Dereference the script\n\t\t\t\t\t\tscript = null;\n\n\t\t\t\t\t\t// Callback if not abort\n\t\t\t\t\t\tif ( !isAbort ) {\n\t\t\t\t\t\t\tcallback( 200, \"success\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\thead.insertBefore( script, head.firstChild );\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( script ) {\n\t\t\t\t\tscript.onload( undefined, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( ajax_nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( ajax_rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\nvar xhrCallbacks, xhrSupported,\n\txhrId = 0,\n\t// #5280: Internet Explorer will keep connections alive if we don't abort on unload\n\txhrOnUnloadAbort = window.ActiveXObject && function() {\n\t\t// Abort all pending requests\n\t\tvar key;\n\t\tfor ( key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]( undefined, true );\n\t\t}\n\t};\n\n// Functions to create xhrs\nfunction createStandardXHR() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch( e ) {}\n}\n\nfunction createActiveXHR() {\n\ttry {\n\t\treturn new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n\t} catch( e ) {}\n}\n\n// Create the request object\n// (This is still attached to ajaxSettings for backward compatibility)\njQuery.ajaxSettings.xhr = window.ActiveXObject ?\n\t/* Microsoft failed to properly\n\t * implement the XMLHttpRequest in IE7 (can't request local files),\n\t * so we use the ActiveXObject when it is available\n\t * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\n\t * we need a fallback.\n\t */\n\tfunction() {\n\t\treturn !this.isLocal && createStandardXHR() || createActiveXHR();\n\t} :\n\t// For all other browsers, use the standard XMLHttpRequest object\n\tcreateStandardXHR;\n\n// Determine support properties\nxhrSupported = jQuery.ajaxSettings.xhr();\njQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nxhrSupported = jQuery.support.ajax = !!xhrSupported;\n\n// Create transport if the browser can provide an xhr\nif ( xhrSupported ) {\n\n\tjQuery.ajaxTransport(function( s ) {\n\t\t// Cross domain only allowed if supported through XMLHttpRequest\n\t\tif ( !s.crossDomain || jQuery.support.cors ) {\n\n\t\t\tvar callback;\n\n\t\t\treturn {\n\t\t\t\tsend: function( headers, complete ) {\n\n\t\t\t\t\t// Get a new xhr\n\t\t\t\t\tvar handle, i,\n\t\t\t\t\t\txhr = s.xhr();\n\n\t\t\t\t\t// Open the socket\n\t\t\t\t\t// Passing null username, generates a login popup on Opera (#2865)\n\t\t\t\t\tif ( s.username ) {\n\t\t\t\t\t\txhr.open( s.type, s.url, s.async, s.username, s.password );\n\t\t\t\t\t} else {\n\t\t\t\t\t\txhr.open( s.type, s.url, s.async );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Apply custom fields if provided\n\t\t\t\t\tif ( s.xhrFields ) {\n\t\t\t\t\t\tfor ( i in s.xhrFields ) {\n\t\t\t\t\t\t\txhr[ i ] = s.xhrFields[ i ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Override mime type if needed\n\t\t\t\t\tif ( s.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\t\txhr.overrideMimeType( s.mimeType );\n\t\t\t\t\t}\n\n\t\t\t\t\t// X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\t\tif ( !s.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Need an extra try/catch for cross domain requests in Firefox 3\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch( err ) {}\n\n\t\t\t\t\t// Do send the request\n\t\t\t\t\t// This may raise an exception which is actually\n\t\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\t\txhr.send( ( s.hasContent && s.data ) || null );\n\n\t\t\t\t\t// Listener\n\t\t\t\t\tcallback = function( _, isAbort ) {\n\t\t\t\t\t\tvar status, responseHeaders, statusText, responses;\n\n\t\t\t\t\t\t// Firefox throws exceptions when accessing properties\n\t\t\t\t\t\t// of an xhr when a network error occurred\n\t\t\t\t\t\t// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t// Was never called and is aborted or complete\n\t\t\t\t\t\t\tif ( callback && ( isAbort || xhr.readyState === 4 ) ) {\n\n\t\t\t\t\t\t\t\t// Only called once\n\t\t\t\t\t\t\t\tcallback = undefined;\n\n\t\t\t\t\t\t\t\t// Do not keep as active anymore\n\t\t\t\t\t\t\t\tif ( handle ) {\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = jQuery.noop;\n\t\t\t\t\t\t\t\t\tif ( xhrOnUnloadAbort ) {\n\t\t\t\t\t\t\t\t\t\tdelete xhrCallbacks[ handle ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// If it's an abort\n\t\t\t\t\t\t\t\tif ( isAbort ) {\n\t\t\t\t\t\t\t\t\t// Abort it manually if needed\n\t\t\t\t\t\t\t\t\tif ( xhr.readyState !== 4 ) {\n\t\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresponses = {};\n\t\t\t\t\t\t\t\t\tstatus = xhr.status;\n\t\t\t\t\t\t\t\t\tresponseHeaders = xhr.getAllResponseHeaders();\n\n\t\t\t\t\t\t\t\t\t// When requesting binary data, IE6-9 will throw an exception\n\t\t\t\t\t\t\t\t\t// on any attempt to access responseText (#11426)\n\t\t\t\t\t\t\t\t\tif ( typeof xhr.responseText === \"string\" ) {\n\t\t\t\t\t\t\t\t\t\tresponses.text = xhr.responseText;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Firefox throws an exception when accessing\n\t\t\t\t\t\t\t\t\t// statusText for faulty cross-domain requests\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tstatusText = xhr.statusText;\n\t\t\t\t\t\t\t\t\t} catch( e ) {\n\t\t\t\t\t\t\t\t\t\t// We normalize with Webkit giving an empty statusText\n\t\t\t\t\t\t\t\t\t\tstatusText = \"\";\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Filter status for non standard behaviors\n\n\t\t\t\t\t\t\t\t\t// If the request is local and we have data: assume a success\n\t\t\t\t\t\t\t\t\t// (success with no data won't get notified, that's the best we\n\t\t\t\t\t\t\t\t\t// can do given current implementations)\n\t\t\t\t\t\t\t\t\tif ( !status && s.isLocal && !s.crossDomain ) {\n\t\t\t\t\t\t\t\t\t\tstatus = responses.text ? 200 : 404;\n\t\t\t\t\t\t\t\t\t// IE - #1450: sometimes returns 1223 when it should be 204\n\t\t\t\t\t\t\t\t\t} else if ( status === 1223 ) {\n\t\t\t\t\t\t\t\t\t\tstatus = 204;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch( firefoxAccessException ) {\n\t\t\t\t\t\t\tif ( !isAbort ) {\n\t\t\t\t\t\t\t\tcomplete( -1, firefoxAccessException );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call complete if needed\n\t\t\t\t\t\tif ( responses ) {\n\t\t\t\t\t\t\tcomplete( status, statusText, responses, responseHeaders );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( !s.async ) {\n\t\t\t\t\t\t// if we're in sync mode we fire the callback\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t// (IE6 & IE7) if it's in cache and has been\n\t\t\t\t\t\t// retrieved directly we need to fire the callback\n\t\t\t\t\t\tsetTimeout( callback );\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandle = ++xhrId;\n\t\t\t\t\t\tif ( xhrOnUnloadAbort ) {\n\t\t\t\t\t\t\t// Create the active xhrs callbacks list if needed\n\t\t\t\t\t\t\t// and attach the unload handler\n\t\t\t\t\t\t\tif ( !xhrCallbacks ) {\n\t\t\t\t\t\t\t\txhrCallbacks = {};\n\t\t\t\t\t\t\t\tjQuery( window ).unload( xhrOnUnloadAbort );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Add to list of active xhrs callbacks\n\t\t\t\t\t\t\txhrCallbacks[ handle ] = callback;\n\t\t\t\t\t\t}\n\t\t\t\t\t\txhr.onreadystatechange = callback;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback( undefined, true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n}\nvar fxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [function( prop, value ) {\n\t\t\tvar end, unit,\n\t\t\t\ttween = this.createTween( prop, value ),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tstart = +target || 0,\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( parts ) {\n\t\t\t\tend = +parts[2];\n\t\t\t\tunit = parts[3] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\n\t\t\t\t// We need to compute starting value\n\t\t\t\tif ( unit !== \"px\" && start ) {\n\t\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\t\t// Prefer the current property, because this process will be trivial if it uses the same units\n\t\t\t\t\t// Fallback to end or a simple constant\n\t\t\t\t\tstart = jQuery.css( tween.elem, prop, true ) || end || 1;\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t\t// Adjust and apply\n\t\t\t\t\t\tstart = start / scale;\n\t\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t\t}\n\n\t\t\t\ttween.unit = unit;\n\t\t\t\ttween.start = start;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;\n\t\t\t}\n\t\t\treturn tween;\n\t\t}]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\nfunction createTweens( animation, props ) {\n\tjQuery.each( props, function( prop, value ) {\n\t\tvar collection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\t\tindex = 0,\n\t\t\tlength = collection.length;\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tif ( collection[ index ].call( animation, prop, value ) ) {\n\n\t\t\t\t// we're done with this property\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tcreateTweens( animation, props );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar value, name, index, easing, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/*jshint validthis:true */\n\tvar prop, index, length,\n\t\tvalue, dataShow, toggle,\n\t\ttween, hooks, oldfire,\n\t\tanim = this,\n\t\tstyle = elem.style,\n\t\torig = {},\n\t\thandled = [],\n\t\thidden = elem.nodeType && isHidden( elem );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE does not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tif ( jQuery.css( elem, \"display\" ) === \"inline\" &&\n\t\t\t\tjQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t// inline-level elements accept inline-block;\n\t\t\t// block-level elements need to be inline with layout\n\t\t\tif ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === \"inline\" ) {\n\t\t\t\tstyle.display = \"inline-block\";\n\n\t\t\t} else {\n\t\t\t\tstyle.zoom = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tif ( !jQuery.support.shrinkWrapBlocks ) {\n\t\t\tanim.always(function() {\n\t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t\t});\n\t\t}\n\t}\n\n\n\t// show/hide pass\n\tfor ( index in props ) {\n\t\tvalue = props[ index ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ index ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thandled.push( index );\n\t\t}\n\t}\n\n\tlength = handled.length;\n\tif ( length ) {\n\t\tdataShow = jQuery._data( elem, \"fxshow\" ) || jQuery._data( elem, \"fxshow\", {} );\n\t\tif ( \"hidden\" in dataShow ) {\n\t\t\thidden = dataShow.hidden;\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\t\t\tjQuery._removeData( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( index = 0 ; index < length ; index++ ) {\n\t\t\tprop = handled[ index ];\n\t\t\ttween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );\n\t\t\torig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Remove in 2.0 - this supports IE8's panic based approach\n// to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\t\t\t\tdoAnimation.finish = function() {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t};\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || jQuery._data( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = jQuery._data( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = jQuery._data( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.cur && hooks.cur.finish ) {\n\t\t\t\thooks.cur.finish.call( this );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\tattrs = { height: type },\n\t\ti = 0;\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth? 1 : 0;\n\tfor( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p*Math.PI ) / 2;\n\t}\n};\n\njQuery.timers = [];\njQuery.fx = Tween.prototype.init;\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ttimers = jQuery.timers,\n\t\ti = 0;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tif ( timer() && jQuery.timers.push( timer ) ) {\n\t\tjQuery.fx.start();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.animated = function( elem ) {\n\t\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t}).length;\n\t};\n}\njQuery.fn.offset = function( options ) {\n\tif ( arguments.length ) {\n\t\treturn options === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t}\n\n\tvar docElem, win,\n\t\tbox = { top: 0, left: 0 },\n\t\telem = this[ 0 ],\n\t\tdoc = elem && elem.ownerDocument;\n\n\tif ( !doc ) {\n\t\treturn;\n\t}\n\n\tdocElem = doc.documentElement;\n\n\t// Make sure it's not a disconnected DOM node\n\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\treturn box;\n\t}\n\n\t// If we don't have gBCR, just use 0,0 rather than error\n\t// BlackBerry 5, iOS 3 (original iPhone)\n\tif ( typeof elem.getBoundingClientRect !== core_strundefined ) {\n\t\tbox = elem.getBoundingClientRect();\n\t}\n\twin = getWindow( doc );\n\treturn {\n\t\ttop: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),\n\t\tleft: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )\n\t};\n};\n\njQuery.offset = {\n\n\tsetOffset: function( elem, options, i ) {\n\t\tvar position = jQuery.css( elem, \"position\" );\n\n\t\t// set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tvar curElem = jQuery( elem ),\n\t\t\tcurOffset = curElem.offset(),\n\t\t\tcurCSSTop = jQuery.css( elem, \"top\" ),\n\t\t\tcurCSSLeft = jQuery.css( elem, \"left\" ),\n\t\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\n\t\t\tprops = {}, curPosition = {}, curTop, curLeft;\n\n\t\t// need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\n\njQuery.fn.extend({\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\tparentOffset = { top: 0, left: 0 },\n\t\t\telem = this[ 0 ];\n\n\t\t// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// we assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top  += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\t// note: when an element has margin: auto the offsetLeft and marginLeft\n\t\t// are the same in Safari causing offset.left to incorrectly be 0\n\t\treturn {\n\t\t\ttop:  offset.top  - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true)\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || document.documentElement;\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\") === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\t\t\treturn offsetParent || document.documentElement;\n\t\t});\n\t}\n});\n\n\n// Create scrollLeft and scrollTop methods\njQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\n\tvar top = /Y/.test( prop );\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn jQuery.access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? (prop in win) ? win[ prop ] :\n\t\t\t\t\twin.document.documentElement[ method ] :\n\t\t\t\t\telem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : jQuery( win ).scrollLeft(),\n\t\t\t\t\ttop ? val : jQuery( win ).scrollTop()\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ?\n\t\telem :\n\t\telem.nodeType === 9 ?\n\t\t\telem.defaultView || elem.parentWindow :\n\t\t\tfalse;\n}\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\n\t\t\t\t\t// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n// Limit scope pollution from any deprecated API\n// (function() {\n\n// })();\n\n// Expose for component\nmodule.exports = jQuery;\n\n// Expose jQuery to the global object\n//window.jQuery = window.$ = jQuery;\n\n// Expose jQuery as an AMD module, but only for AMD loaders that\n// understand the issues with loading multiple versions of jQuery\n// in a page that all might call define(). The loader will indicate\n// they have special allowances for multiple jQuery versions by\n// specifying define.amd.jQuery = true. Register as a named module,\n// since jQuery can be concatenated with other files that may use define,\n// but not use a proper concatenation script that understands anonymous\n// AMD modules. A named AMD is safest and most robust way to register.\n// Lowercase jquery is used because AMD module names are derived from\n// file names, and jQuery is normally delivered in a lowercase file name.\n// Do this after creating the global so that if an AMD module wants to call\n// noConflict to hide this version of jQuery, it will work.\nif ( typeof define === \"function\" && define.amd && define.amd.jQuery ) {\n\tdefine( \"jquery\", [], function () { return jQuery; } );\n}\n\n})( window );\n//@ sourceURL=component-jquery/index.js"
));
require.register("component-menu/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter')\n  , o = require('jquery');\n\n/**\n * Expose `Menu`.\n */\n\nmodule.exports = Menu;\n\n/**\n * Initialize a new `Menu`.\n *\n * Emits:\n *\n *   - \"show\" when shown\n *   - \"hide\" when hidden\n *   - \"remove\" with the item name when an item is removed\n *   - \"select\" (item) when an item is selected\n *   - * menu item events are emitted when clicked\n *\n * @api public\n */\n\nfunction Menu() {\n  if (!(this instanceof Menu)) return new Menu;\n  Emitter.call(this);\n  this.items = {};\n  this.el = o('<ul class=menu>').hide().appendTo('body');\n  this.el.hover(this.deselect.bind(this));\n  o('html').click(this.hide.bind(this));\n  this.on('show', this.bindKeyboardEvents.bind(this));\n  this.on('hide', this.unbindKeyboardEvents.bind(this));\n}\n\n/**\n * Inherit from `Emitter.prototype`.\n */\n\nMenu.prototype = new Emitter;\n\n/**\n * Deselect selected menu items.\n *\n * @api private\n */\n\nMenu.prototype.deselect = function(){\n  this.el.find('.selected').removeClass('selected');\n};\n\n/**\n * Bind keyboard events.\n *\n * @api private\n */\n\nMenu.prototype.bindKeyboardEvents = function(){\n  o(document).bind('keydown.menu', this.onkeydown.bind(this));\n  return this;\n};\n\n/**\n * Unbind keyboard events.\n *\n * @api private\n */\n\nMenu.prototype.unbindKeyboardEvents = function(){\n  o(document).unbind('keydown.menu');\n  return this;\n};\n\n/**\n * Handle keydown events.\n *\n * @api private\n */\n\nMenu.prototype.onkeydown = function(e){\n  switch (e.keyCode) {\n    // esc\n    case 27:\n      this.hide();\n      break;\n    // up\n    case 38:\n      e.preventDefault();\n      this.move('prev');\n      break;\n    // down\n    case 40:\n      e.preventDefault();\n      this.move('next');\n      break;\n  }\n};\n\n/**\n * Focus on the next menu item in `direction`.\n *\n * @param {String} direction \"prev\" or \"next\"\n * @api public\n */\n\nMenu.prototype.move = function(direction){\n  var prev = this.el.find('.selected').eq(0);\n\n  var next = prev.length\n    ? prev[direction]()\n    : this.el.find('li:first-child');\n\n  if (next.length) {\n    prev.removeClass('selected');\n    next.addClass('selected');\n    next.find('a').focus();\n  }\n};\n\n/**\n * Add menu item with the given `text` and optional callback `fn`.\n *\n * When the item is clicked `fn()` will be invoked\n * and the `Menu` is immediately closed. When clicked\n * an event of the name `text` is emitted regardless of\n * the callback function being present.\n *\n * @param {String} text\n * @param {Function} fn\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.add = function(text, fn){\n  var slug;\n\n  // slug, text, [fn]\n  if ('string' == typeof fn) {\n    slug = text;\n    text = fn;\n    fn = arguments[2];\n  } else {\n    slug = createSlug(text);\n  }\n\n  var self = this\n    , el = o('<li><a href=\"#\">' + text + '</a></li>')\n    .addClass('menu-item-' + slug)\n    .appendTo(this.el)\n    .click(function(e){\n      e.preventDefault();\n      e.stopPropagation();\n      self.hide();\n      self.emit('select', slug);\n      self.emit(slug);\n      fn && fn();\n    });\n\n  this.items[slug] = el;\n  return this;\n};\n\n/**\n * Remove menu item with the given `slug`.\n *\n * @param {String} slug\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.remove = function(slug){\n  var item = this.items[slug] || this.items[createSlug(slug)];\n  if (!item) throw new Error('no menu item named \"' + slug + '\"');\n  this.emit('remove', slug);\n  item.remove();\n  delete this.items[slug];\n  delete this.items[createSlug(slug)];\n  return this;\n};\n\n/**\n * Check if this menu has an item with the given `slug`.\n *\n * @param {String} slug\n * @return {Boolean}\n * @api public\n */\n\nMenu.prototype.has = function(slug){\n  return !! (this.items[slug] || this.items[createSlug(slug)]);\n};\n\n/**\n * Move context menu to `(x, y)`.\n *\n * @param {Number} x\n * @param {Number} y\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.moveTo = function(x, y){\n  this.el.css({\n    top: y,\n    left: x\n  });\n  return this;\n};\n\n/**\n * Show the menu.\n *\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.show = function(){\n  this.emit('show');\n  this.el.show();\n  return this;\n};\n\n/**\n * Hide the menu.\n *\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.hide = function(){\n  this.emit('hide');\n  this.el.hide();\n  return this;\n};\n\n/**\n * Generate a slug from `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction createSlug(str) {\n  return String(str)\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^a-z0-9-]/g, '');\n}\n//@ sourceURL=component-menu/index.js"
));
require.register("component-mousetrap/index.js", Function("exports, require, module",
"/**\n * Copyright 2012 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.1.2\n * @url craig.is/killing/mice\n */\n\n  /**\n   * mapping of special keycodes to their corresponding keys\n   *\n   * everything in this dictionary cannot use keypress events\n   * so it has to be here to map to the correct keycodes for\n   * keyup/keydown events\n   *\n   * @type {Object}\n   */\n  var _MAP = {\n          8: 'backspace',\n          9: 'tab',\n          13: 'enter',\n          16: 'shift',\n          17: 'ctrl',\n          18: 'alt',\n          20: 'capslock',\n          27: 'esc',\n          32: 'space',\n          33: 'pageup',\n          34: 'pagedown',\n          35: 'end',\n          36: 'home',\n          37: 'left',\n          38: 'up',\n          39: 'right',\n          40: 'down',\n          45: 'ins',\n          46: 'del',\n          91: 'meta',\n          93: 'meta',\n          224: 'meta'\n      },\n\n      /**\n       * mapping for special characters so they can support\n       *\n       * this dictionary is only used incase you want to bind a\n       * keyup or keydown event to one of these keys\n       *\n       * @type {Object}\n       */\n      _KEYCODE_MAP = {\n          106: '*',\n          107: '+',\n          109: '-',\n          110: '.',\n          111 : '/',\n          186: ';',\n          187: '=',\n          188: ',',\n          189: '-',\n          190: '.',\n          191: '/',\n          192: '`',\n          219: '[',\n          220: '\\\\',\n          221: ']',\n          222: '\\''\n      },\n\n      /**\n       * this is a mapping of keys that require shift on a US keypad\n       * back to the non shift equivelents\n       *\n       * this is so you can use keyup events with these keys\n       *\n       * note that this will only work reliably on US keyboards\n       *\n       * @type {Object}\n       */\n      _SHIFT_MAP = {\n          '~': '`',\n          '!': '1',\n          '@': '2',\n          '#': '3',\n          '$': '4',\n          '%': '5',\n          '^': '6',\n          '&': '7',\n          '*': '8',\n          '(': '9',\n          ')': '0',\n          '_': '-',\n          '+': '=',\n          ':': ';',\n          '\\\"': '\\'',\n          '<': ',',\n          '>': '.',\n          '?': '/',\n          '|': '\\\\'\n      },\n\n      /**\n       * this is a list of special strings you can use to map\n       * to modifier keys when you specify your keyboard shortcuts\n       *\n       * @type {Object}\n       */\n      _SPECIAL_ALIASES = {\n          'option': 'alt',\n          'command': 'meta',\n          'return': 'enter',\n          'escape': 'esc'\n      },\n\n      /**\n       * variable to store the flipped version of _MAP from above\n       * needed to check if we should use keypress or not when no action\n       * is specified\n       *\n       * @type {Object|undefined}\n       */\n      _REVERSE_MAP,\n\n      /**\n       * a list of all the callbacks setup via Mousetrap.bind()\n       *\n       * @type {Object}\n       */\n      _callbacks = {},\n\n      /**\n       * direct map of string combinations to callbacks used for trigger()\n       *\n       * @type {Object}\n       */\n      _direct_map = {},\n\n      /**\n       * keeps track of what level each sequence is at since multiple\n       * sequences can start out with the same sequence\n       *\n       * @type {Object}\n       */\n      _sequence_levels = {},\n\n      /**\n       * variable to store the setTimeout call\n       *\n       * @type {null|number}\n       */\n      _reset_timer,\n\n      /**\n       * temporary state where we will ignore the next keyup\n       *\n       * @type {boolean|string}\n       */\n      _ignore_next_keyup = false,\n\n      /**\n       * are we currently inside of a sequence?\n       * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n       *\n       * @type {boolean|string}\n       */\n      _inside_sequence = false;\n\n  /**\n   * loop through the f keys, f1 to f19 and add them to the map\n   * programatically\n   */\n  for (var i = 1; i < 20; ++i) {\n      _MAP[111 + i] = 'f' + i;\n  }\n\n  /**\n   * loop through to map numbers on the numeric keypad\n   */\n  for (i = 0; i <= 9; ++i) {\n      _MAP[i + 96] = i;\n  }\n\n  /**\n   * cross browser add event method\n   *\n   * @param {Element|HTMLDocument} object\n   * @param {string} type\n   * @param {Function} callback\n   * @returns void\n   */\n  function _addEvent(object, type, callback) {\n      if (object.addEventListener) {\n          return object.addEventListener(type, callback, false);\n      }\n\n      object.attachEvent('on' + type, callback);\n  }\n\n  /**\n   * takes the event and returns the key character\n   *\n   * @param {Event} e\n   * @return {string}\n   */\n  function _characterFromEvent(e) {\n\n      // for keypress events we should return the character as is\n      if (e.type == 'keypress') {\n          return String.fromCharCode(e.which);\n      }\n\n      // for non keypress events the special maps are needed\n      if (_MAP[e.which]) {\n          return _MAP[e.which];\n      }\n\n      if (_KEYCODE_MAP[e.which]) {\n          return _KEYCODE_MAP[e.which];\n      }\n\n      // if it is not in the special map\n      return String.fromCharCode(e.which).toLowerCase();\n  }\n\n  /**\n   * should we stop this event before firing off callbacks\n   *\n   * @param {Event} e\n   * @return {boolean}\n   */\n  function _stop(e) {\n      var element = e.target || e.srcElement,\n          tag_name = element.tagName;\n\n      // if the element has the class \"mousetrap\" then no need to stop\n      if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n          return false;\n      }\n\n      // stop for input, select, and textarea\n      return tag_name == 'INPUT' || tag_name == 'SELECT' || tag_name == 'TEXTAREA' || (element.contentEditable && element.contentEditable == 'true');\n  }\n\n  /**\n   * checks if two arrays are equal\n   *\n   * @param {Array} modifiers1\n   * @param {Array} modifiers2\n   * @returns {boolean}\n   */\n  function _modifiersMatch(modifiers1, modifiers2) {\n      return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n  }\n\n  /**\n   * resets all sequence counters except for the ones passed in\n   *\n   * @param {Object} do_not_reset\n   * @returns void\n   */\n  function _resetSequences(do_not_reset) {\n      do_not_reset = do_not_reset || {};\n\n      var active_sequences = false,\n          key;\n\n      for (key in _sequence_levels) {\n          if (do_not_reset[key]) {\n              active_sequences = true;\n              continue;\n          }\n          _sequence_levels[key] = 0;\n      }\n\n      if (!active_sequences) {\n          _inside_sequence = false;\n      }\n  }\n\n  /**\n   * finds all callbacks that match based on the keycode, modifiers,\n   * and action\n   *\n   * @param {string} character\n   * @param {Array} modifiers\n   * @param {string} action\n   * @param {boolean=} remove - should we remove any matches\n   * @param {string=} combination\n   * @returns {Array}\n   */\n  function _getMatches(character, modifiers, action, remove, combination) {\n      var i,\n          callback,\n          matches = [];\n\n      // if there are no events related to this keycode\n      if (!_callbacks[character]) {\n          return [];\n      }\n\n      // if a modifier key is coming up on its own we should allow it\n      if (action == 'keyup' && _isModifier(character)) {\n          modifiers = [character];\n      }\n\n      // loop through all callbacks for the key that was pressed\n      // and see if any of them match\n      for (i = 0; i < _callbacks[character].length; ++i) {\n          callback = _callbacks[character][i];\n\n          // if this is a sequence but it is not at the right level\n          // then move onto the next match\n          if (callback.seq && _sequence_levels[callback.seq] != callback.level) {\n              continue;\n          }\n\n          // if the action we are looking for doesn't match the action we got\n          // then we should keep going\n          if (action != callback.action) {\n              continue;\n          }\n\n          // if this is a keypress event that means that we need to only\n          // look at the character, otherwise check the modifiers as\n          // well\n          if (action == 'keypress' || _modifiersMatch(modifiers, callback.modifiers)) {\n\n              // remove is used so if you change your mind and call bind a\n              // second time with a new function the first one is overwritten\n              if (remove && callback.combo == combination) {\n                  _callbacks[character].splice(i, 1);\n              }\n\n              matches.push(callback);\n          }\n      }\n\n      return matches;\n  }\n\n  /**\n   * takes a key event and figures out what the modifiers are\n   *\n   * @param {Event} e\n   * @returns {Array}\n   */\n  function _eventModifiers(e) {\n      var modifiers = [];\n\n      if (e.shiftKey) {\n          modifiers.push('shift');\n      }\n\n      if (e.altKey) {\n          modifiers.push('alt');\n      }\n\n      if (e.ctrlKey) {\n          modifiers.push('ctrl');\n      }\n\n      if (e.metaKey) {\n          modifiers.push('meta');\n      }\n\n      return modifiers;\n  }\n\n  /**\n   * actually calls the callback function\n   *\n   * if your callback function returns false this will use the jquery\n   * convention - prevent default and stop propogation on the event\n   *\n   * @param {Function} callback\n   * @param {Event} e\n   * @returns void\n   */\n  function _fireCallback(callback, e) {\n      if (callback(e) === false) {\n          if (e.preventDefault) {\n              e.preventDefault();\n          }\n\n          if (e.stopPropagation) {\n              e.stopPropagation();\n          }\n\n          e.returnValue = false;\n          e.cancelBubble = true;\n      }\n  }\n\n  /**\n   * handles a character key event\n   *\n   * @param {string} character\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleCharacter(character, e) {\n\n      // if this event should not happen stop here\n      if (_stop(e)) {\n          return;\n      }\n\n      var callbacks = _getMatches(character, _eventModifiers(e), e.type),\n          i,\n          do_not_reset = {},\n          processed_sequence_callback = false;\n\n      // loop through matching callbacks for this key event\n      for (i = 0; i < callbacks.length; ++i) {\n\n          // fire for all sequence callbacks\n          // this is because if for example you have multiple sequences\n          // bound such as \"g i\" and \"g t\" they both need to fire the\n          // callback for matching g cause otherwise you can only ever\n          // match the first one\n          if (callbacks[i].seq) {\n              processed_sequence_callback = true;\n\n              // keep a list of which sequences were matches for later\n              do_not_reset[callbacks[i].seq] = 1;\n              _fireCallback(callbacks[i].callback, e);\n              continue;\n          }\n\n          // if there were no sequence matches but we are still here\n          // that means this is a regular match so we should fire that\n          if (!processed_sequence_callback && !_inside_sequence) {\n              _fireCallback(callbacks[i].callback, e);\n          }\n      }\n\n      // if you are inside of a sequence and the key you are pressing\n      // is not a modifier key then we should reset all sequences\n      // that were not matched by this key event\n      if (e.type == _inside_sequence && !_isModifier(character)) {\n          _resetSequences(do_not_reset);\n      }\n  }\n\n  /**\n   * handles a keydown event\n   *\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleKey(e) {\n\n      // normalize e.which for key events\n      // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n      e.which = typeof e.which == \"number\" ? e.which : e.keyCode;\n\n      var character = _characterFromEvent(e);\n\n      // no character found then stop\n      if (!character) {\n          return;\n      }\n\n      if (e.type == 'keyup' && _ignore_next_keyup == character) {\n          _ignore_next_keyup = false;\n          return;\n      }\n\n      _handleCharacter(character, e);\n  }\n\n  /**\n   * determines if the keycode specified is a modifier key or not\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  function _isModifier(key) {\n      return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n  }\n\n  /**\n   * called to set a 1 second timeout on the specified sequence\n   *\n   * this is so after each key press in the sequence you have 1 second\n   * to press the next key before you have to start over\n   *\n   * @returns void\n   */\n  function _resetSequenceTimer() {\n      clearTimeout(_reset_timer);\n      _reset_timer = setTimeout(_resetSequences, 1000);\n  }\n\n  /**\n   * reverses the map lookup so that we can look for specific keys\n   * to see what can and can't use keypress\n   *\n   * @return {Object}\n   */\n  function _getReverseMap() {\n      if (!_REVERSE_MAP) {\n          _REVERSE_MAP = {};\n          for (var key in _MAP) {\n\n              // pull out the numeric keypad from here cause keypress should\n              // be able to detect the keys from the character\n              if (key > 95 && key < 112) {\n                  continue;\n              }\n\n              if (_MAP.hasOwnProperty(key)) {\n                  _REVERSE_MAP[_MAP[key]] = key;\n              }\n          }\n      }\n      return _REVERSE_MAP;\n  }\n\n  /**\n   * picks the best action based on the key combination\n   *\n   * @param {string} key - character for key\n   * @param {Array} modifiers\n   * @param {string=} action passed in\n   */\n  function _pickBestAction(key, modifiers, action) {\n\n      // if no action was picked in we should try to pick the one\n      // that we think would work best for this key\n      if (!action) {\n          action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n      }\n\n      // modifier keys don't work as expected with keypress,\n      // switch to keydown\n      if (action == 'keypress' && modifiers.length) {\n          action = 'keydown';\n      }\n\n      return action;\n  }\n\n  /**\n   * binds a key sequence to an event\n   *\n   * @param {string} combo - combo specified in bind call\n   * @param {Array} keys\n   * @param {Function} callback\n   * @param {string=} action\n   * @returns void\n   */\n  function _bindSequence(combo, keys, callback, action) {\n\n      // start off by adding a sequence level record for this combination\n      // and setting the level to 0\n      _sequence_levels[combo] = 0;\n\n      // if there is no action pick the best one for the first key\n      // in the sequence\n      if (!action) {\n          action = _pickBestAction(keys[0], []);\n      }\n\n      /**\n       * callback to increase the sequence level for this sequence and reset\n       * all other sequences that were active\n       *\n       * @param {Event} e\n       * @returns void\n       */\n      var _increaseSequence = function(e) {\n              _inside_sequence = action;\n              ++_sequence_levels[combo];\n              _resetSequenceTimer();\n          },\n\n          /**\n           * wraps the specified callback inside of another function in order\n           * to reset all sequence counters as soon as this sequence is done\n           *\n           * @param {Event} e\n           * @returns void\n           */\n          _callbackAndReset = function(e) {\n              _fireCallback(callback, e);\n\n              // we should ignore the next key up if the action is key down\n              // or keypress.  this is so if you finish a sequence and\n              // release the key the final key will not trigger a keyup\n              if (action !== 'keyup') {\n                  _ignore_next_keyup = _characterFromEvent(e);\n              }\n\n              // weird race condition if a sequence ends with the key\n              // another sequence begins with\n              setTimeout(_resetSequences, 10);\n          },\n          i;\n\n      // loop through keys one at a time and bind the appropriate callback\n      // function.  for any key leading up to the final one it should\n      // increase the sequence. after the final, it should reset all sequences\n      for (i = 0; i < keys.length; ++i) {\n          _bindSingle(keys[i], i < keys.length - 1 ? _increaseSequence : _callbackAndReset, action, combo, i);\n      }\n  }\n\n  /**\n   * binds a single keyboard combination\n   *\n   * @param {string} combination\n   * @param {Function} callback\n   * @param {string=} action\n   * @param {string=} sequence_name - name of sequence if part of sequence\n   * @param {number=} level - what part of the sequence the command is\n   * @returns void\n   */\n  function _bindSingle(combination, callback, action, sequence_name, level) {\n\n      // make sure multiple spaces in a row become a single space\n      combination = combination.replace(/\\s+/g, ' ');\n\n      var sequence = combination.split(' '),\n          i,\n          key,\n          keys,\n          modifiers = [];\n\n      // if this pattern is a sequence of keys then run through this method\n      // to reprocess each pattern one key at a time\n      if (sequence.length > 1) {\n          return _bindSequence(combination, sequence, callback, action);\n      }\n\n      // take the keys from this pattern and figure out what the actual\n      // pattern is all about\n      keys = combination === '+' ? ['+'] : combination.split('+');\n\n      for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n\n          // normalize key names\n          if (_SPECIAL_ALIASES[key]) {\n              key = _SPECIAL_ALIASES[key];\n          }\n\n          // if this is not a keypress event then we should\n          // be smart about using shift keys\n          // this will only work for US keyboards however\n          if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n              key = _SHIFT_MAP[key];\n              modifiers.push('shift');\n          }\n\n          // if this key is a modifier then add it to the list of modifiers\n          if (_isModifier(key)) {\n              modifiers.push(key);\n          }\n      }\n\n      // depending on what the key combination is\n      // we will try to pick the best event for it\n      action = _pickBestAction(key, modifiers, action);\n\n      // make sure to initialize array if this is the first time\n      // a callback is added for this key\n      if (!_callbacks[key]) {\n          _callbacks[key] = [];\n      }\n\n      // remove an existing match if there is one\n      _getMatches(key, modifiers, action, !sequence_name, combination);\n\n      // add this call back to the array\n      // if it is a sequence put it at the beginning\n      // if not put it at the end\n      //\n      // this is important because the way these are processed expects\n      // the sequence ones to come first\n      _callbacks[key][sequence_name ? 'unshift' : 'push']({\n          callback: callback,\n          modifiers: modifiers,\n          action: action,\n          seq: sequence_name,\n          level: level,\n          combo: combination\n      });\n  }\n\n  /**\n   * binds multiple combinations to the same callback\n   *\n   * @param {Array} combinations\n   * @param {Function} callback\n   * @param {string|undefined} action\n   * @returns void\n   */\n  function _bindMultiple(combinations, callback, action) {\n      for (var i = 0; i < combinations.length; ++i) {\n          _bindSingle(combinations[i], callback, action);\n      }\n  }\n\n  // start!\n  _addEvent(document, 'keypress', _handleKey);\n  _addEvent(document, 'keydown', _handleKey);\n  _addEvent(document, 'keyup', _handleKey);\n\n  var mousetrap = {\n\n      /**\n       * binds an event to mousetrap\n       *\n       * can be a single key, a combination of keys separated with +,\n       * a comma separated list of keys, an array of keys, or\n       * a sequence of keys separated by spaces\n       *\n       * be sure to list the modifier keys first to make sure that the\n       * correct key ends up getting bound (the last key in the pattern)\n       *\n       * @param {string|Array} keys\n       * @param {Function} callback\n       * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n       * @returns void\n       */\n      bind: function(keys, callback, action) {\n          _bindMultiple(keys instanceof Array ? keys : [keys], callback, action);\n          _direct_map[keys + ':' + action] = callback;\n          return this;\n      },\n\n      /**\n       * unbinds an event to mousetrap\n       *\n       * the unbinding sets the callback function of the specified key combo\n       * to an empty function and deletes the corresponding key in the\n       * _direct_map dict.\n       *\n       * the keycombo+action has to be exactly the same as\n       * it was defined in the bind method\n       *\n       * TODO: actually remove this from the _callbacks dictionary instead\n       * of binding an empty function\n       *\n       * @param {string|Array} keys\n       * @param {string} action\n       * @returns void\n       */\n      unbind: function(keys, action) {\n          if (_direct_map[keys + ':' + action]) {\n              delete _direct_map[keys + ':' + action];\n              this.bind(keys, function() {}, action);\n          }\n          return this;\n      },\n\n      /**\n       * triggers an event that has already been bound\n       *\n       * @param {string} keys\n       * @param {string=} action\n       * @returns void\n       */\n      trigger: function(keys, action) {\n          _direct_map[keys + ':' + action]();\n          return this;\n      },\n\n      /**\n       * resets the library back to its initial state.  this is useful\n       * if you want to clear out the current keyboard shortcuts and bind\n       * new ones - for example if you switch to another page\n       *\n       * @returns void\n       */\n      reset: function() {\n          _callbacks = {};\n          _direct_map = {};\n          return this;\n      }\n  };\n\nmodule.exports = mousetrap;\n\n//@ sourceURL=component-mousetrap/index.js"
));
require.register("component-value/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar typeOf = require('type');\n\n/**\n * Set or get `el`'s' value.\n *\n * @param {Element} el\n * @param {Mixed} val\n * @return {Mixed}\n * @api public\n */\n\nmodule.exports = function(el, val){\n  if (2 == arguments.length) return set(el, val);\n  return get(el);\n};\n\n/**\n * Get `el`'s value.\n */\n\nfunction get(el) {\n  switch (type(el)) {\n    case 'checkbox':\n    case 'radio':\n      if (el.checked) {\n        var attr = el.getAttribute('value');\n        return null == attr ? true : attr;\n      } else {\n        return false;\n      }\n    case 'radiogroup':\n      for (var i = 0, radio; radio = el[i]; i++) {\n        if (radio.checked) return radio.value;\n      }\n      break;\n    case 'select':\n      for (var i = 0, option; option = el.options[i]; i++) {\n        if (option.selected) return option.value;\n      }\n      break;\n    default:\n      return el.value;\n  }\n}\n\n/**\n * Set `el`'s value.\n */\n\nfunction set(el, val) {\n  switch (type(el)) {\n    case 'checkbox':\n    case 'radio':\n      if (val) {\n        el.checked = true;\n      } else {\n        el.checked = false;\n      }\n      break;\n    case 'radiogroup':\n      for (var i = 0, radio; radio = el[i]; i++) {\n        radio.checked = radio.value === val;\n      }\n      break;\n    case 'select':\n      for (var i = 0, option; option = el.options[i]; i++) {\n        option.selected = option.value === val;\n      }\n      break;\n    default:\n      el.value = val;\n  }\n}\n\n/**\n * Element type.\n */\n\nfunction type(el) {\n  var group = 'array' == typeOf(el) || 'object' == typeOf(el);\n  if (group) el = el[0];\n  var name = el.nodeName.toLowerCase();\n  var type = el.getAttribute('type');\n\n  if (group && type && 'radio' == type.toLowerCase()) return 'radiogroup';\n  if ('input' == name && type && 'checkbox' == type.toLowerCase()) return 'checkbox';\n  if ('input' == name && type && 'radio' == type.toLowerCase()) return 'radio';\n  if ('select' == name) return 'select';\n  return name;\n}\n//@ sourceURL=component-value/index.js"
));

require.register("component-bind/index.js", Function("exports, require, module",
"\n/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = [].slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n//@ sourceURL=component-bind/index.js"
));
require.register("segmentio-bindAll/index.js", Function("exports, require, module",
"\nvar bind   = require('bind')\n  , type   = require('type');\n\n\nmodule.exports = function (obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (type(val) === 'function') obj[key] = bind(obj, obj[key]);\n  }\n  return obj;\n};//@ sourceURL=segmentio-bindAll/index.js"
));
require.register("segmentio-mathjax/MathJax.js", Function("exports, require, module",
"/*************************************************************\n *\n *  MathJax.js\n *\n *  The main code for the MathJax math-typesetting library.  See\n *  http://www.mathjax.org/ for details.\n *\n *  ---------------------------------------------------------------------\n *\n *  Copyright (c) 2009-2013 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nif (!window.MathJax) {window.MathJax = {}}\n\nMathJax.isPacked = true;\n\nif(document.getElementById&&document.childNodes&&document.createElement){if(!window.MathJax){window.MathJax={}}if(!MathJax.Hub){MathJax.version=\"2.2\";MathJax.fileversion=\"2.2\";(function(d){var b=window[d];if(!b){b=window[d]={}}var f=[];var c=function(g){var h=g.constructor;if(!h){h=new Function(\"\")}for(var i in g){if(i!==\"constructor\"&&g.hasOwnProperty(i)){h[i]=g[i]}}return h};var a=function(){return new Function(\"return arguments.callee.Init.call(this,arguments)\")};var e=a();e.prototype={bug_test:1};if(!e.prototype.bug_test){a=function(){return function(){return arguments.callee.Init.call(this,arguments)}}}b.Object=c({constructor:a(),Subclass:function(g,i){var h=a();h.SUPER=this;h.Init=this.Init;h.Subclass=this.Subclass;h.Augment=this.Augment;h.protoFunction=this.protoFunction;h.can=this.can;h.has=this.has;h.isa=this.isa;h.prototype=new this(f);h.prototype.constructor=h;h.Augment(g,i);return h},Init:function(g){var h=this;if(g.length===1&&g[0]===f){return h}if(!(h instanceof g.callee)){h=new g.callee(f)}return h.Init.apply(h,g)||h},Augment:function(g,h){var i;if(g!=null){for(i in g){if(g.hasOwnProperty(i)){this.protoFunction(i,g[i])}}if(g.toString!==this.prototype.toString&&g.toString!=={}.toString){this.protoFunction(\"toString\",g.toString)}}if(h!=null){for(i in h){if(h.hasOwnProperty(i)){this[i]=h[i]}}}return this},protoFunction:function(h,g){this.prototype[h]=g;if(typeof g===\"function\"){g.SUPER=this.SUPER.prototype}},prototype:{Init:function(){},SUPER:function(g){return g.callee.SUPER},can:function(g){return typeof(this[g])===\"function\"},has:function(g){return typeof(this[g])!==\"undefined\"},isa:function(g){return(g instanceof Object)&&(this instanceof g)}},can:function(g){return this.prototype.can.call(this,g)},has:function(g){return this.prototype.has.call(this,g)},isa:function(h){var g=this;while(g){if(g===h){return true}else{g=g.SUPER}}return false},SimpleSUPER:c({constructor:function(g){return this.SimpleSUPER.define(g)},define:function(g){var i={};if(g!=null){for(var h in g){if(g.hasOwnProperty(h)){i[h]=this.wrap(h,g[h])}}if(g.toString!==this.prototype.toString&&g.toString!=={}.toString){i.toString=this.wrap(\"toString\",g.toString)}}return i},wrap:function(i,h){if(typeof(h)===\"function\"&&h.toString().match(/\\.\\s*SUPER\\s*\\(/)){var g=new Function(this.wrapper);g.label=i;g.original=h;h=g;g.toString=this.stringify}return h},wrapper:function(){var h=arguments.callee;this.SUPER=h.SUPER[h.label];try{var g=h.original.apply(this,arguments)}catch(i){delete this.SUPER;throw i}delete this.SUPER;return g}.toString().replace(/^\\s*function\\s*\\(\\)\\s*\\{\\s*/i,\"\").replace(/\\s*\\}\\s*$/i,\"\"),toString:function(){return this.original.toString.apply(this.original,arguments)}})})})(\"MathJax\");(function(BASENAME){var BASE=window[BASENAME];if(!BASE){BASE=window[BASENAME]={}}var CALLBACK=function(data){var cb=new Function(\"return arguments.callee.execute.apply(arguments.callee,arguments)\");for(var id in CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(data[id])!==\"undefined\"){cb[id]=data[id]}else{cb[id]=CALLBACK.prototype[id]}}}cb.toString=CALLBACK.prototype.toString;return cb};CALLBACK.prototype={isCallback:true,hook:function(){},data:[],object:window,execute:function(){if(!this.called||this.autoReset){this.called=!this.autoReset;return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))}},reset:function(){delete this.called},toString:function(){return this.hook.toString.apply(this.hook,arguments)}};var ISCALLBACK=function(f){return(typeof(f)===\"function\"&&f.isCallback)};var EVAL=function(code){return eval.call(window,code)};EVAL(\"var __TeSt_VaR__ = 1\");if(window.__TeSt_VaR__){try{delete window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=null}}else{if(window.execScript){EVAL=function(code){BASE.__code=code;code=\"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";window.execScript(code);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}else{EVAL=function(code){BASE.__code=code;code=\"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";var head=(document.getElementsByTagName(\"head\"))[0];if(!head){head=document.body}var script=document.createElement(\"script\");script.appendChild(document.createTextNode(code));head.appendChild(script);head.removeChild(script);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}}var USING=function(args,i){if(arguments.length>1){if(arguments.length===2&&!(typeof arguments[0]===\"function\")&&arguments[0] instanceof Object&&typeof arguments[1]===\"number\"){args=[].slice.call(args,i)}else{args=[].slice.call(arguments,0)}}if(args instanceof Array&&args.length===1){args=args[0]}if(typeof args===\"function\"){if(args.execute===CALLBACK.prototype.execute){return args}return CALLBACK({hook:args})}else{if(args instanceof Array){if(typeof(args[0])===\"string\"&&args[1] instanceof Object&&typeof args[1][args[0]]===\"function\"){return CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{if(typeof args[0]===\"function\"){return CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof args[1]===\"function\"){return CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typeof(args)===\"string\"){return CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return CALLBACK(args)}else{if(typeof(args)===\"undefined\"){return CALLBACK({})}}}}}throw Error(\"Can't make callback from given data\")};var DELAY=function(time,callback){callback=USING(callback);callback.timeout=setTimeout(callback,time);return callback};var WAITFOR=function(callback,signal){callback=USING(callback);if(!callback.called){WAITSIGNAL(callback,signal);signal.pending++}};var WAITEXECUTE=function(){var signals=this.signal;delete this.signal;this.execute=this.oldExecute;delete this.oldExecute;var result=this.execute.apply(this,arguments);if(ISCALLBACK(result)&&!result.called){WAITSIGNAL(result,signals)}else{for(var i=0,m=signals.length;i<m;i++){signals[i].pending--;if(signals[i].pending<=0){signals[i].call()}}}};var WAITSIGNAL=function(callback,signals){if(!(signals instanceof Array)){signals=[signals]}if(!callback.signal){callback.oldExecute=callback.execute;callback.execute=WAITEXECUTE;callback.signal=signals}else{if(signals.length===1){callback.signal.push(signals[0])}else{callback.signal=callback.signal.concat(signals)}}};var AFTER=function(callback){callback=USING(callback);callback.pending=0;for(var i=1,m=arguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i],callback)}}if(callback.pending===0){var result=callback();if(ISCALLBACK(result)){callback=result}}return callback};var HOOKS=MathJax.Object.Subclass({Init:function(reset){this.hooks=[];this.reset=reset},Add:function(hook,priority){if(priority==null){priority=10}if(!ISCALLBACK(hook)){hook=USING(hook)}hook.priority=priority;var i=this.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}this.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var i=0,m=this.hooks.length;i<m;i++){if(this.hooks[i]===hook){this.hooks.splice(i,1);return}}},Execute:function(){var callbacks=[{}];for(var i=0,m=this.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()}var result=this.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!result.called){callbacks.push(result)}}if(callbacks.length===1){return null}if(callbacks.length===2){return callbacks[1]}return AFTER.apply({},callbacks)}});var EXECUTEHOOKS=function(hooks,data,reset){if(!hooks){return null}if(!(hooks instanceof Array)){hooks=[hooks]}if(!(data instanceof Array)){data=(data==null?[]:[data])}var handler=HOOKS(reset);for(var i=0,m=hooks.length;i<m;i++){handler.Add(hooks[i])}return handler.Execute.apply(handler,data)};var QUEUE=BASE.Object.Subclass({Init:function(){this.pending=0;this.running=0;this.queue=[];this.Push.apply(this,arguments)},Push:function(){var callback;for(var i=0,m=arguments.length;i<m;i++){callback=USING(arguments[i]);if(callback===arguments[i]&&!callback.called){callback=USING([\"wait\",this,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){this.Process()}return callback},Process:function(queue){while(!this.running&&!this.pending&&this.queue.length){var callback=this.queue[0];queue=this.queue.slice(1);this.queue=[];this.Suspend();var result=callback();this.Resume();if(queue.length){this.queue=queue.concat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}}},Suspend:function(){this.running++},Resume:function(){if(this.running){this.running--}},call:function(){this.Process.apply(this,arguments)},wait:function(callback){return callback}});var SIGNAL=QUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(this);this.name=name;this.posted=[];this.listeners=HOOKS(true)},Post:function(message,callback,forget){callback=USING(callback);if(this.posting||this.pending){this.Push([\"Post\",this,message,callback,forget])}else{this.callback=callback;callback.reset();if(!forget){this.posted.push(message)}this.Suspend();this.posting=true;var result=this.listeners.Execute(message);if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}this.Resume();delete this.posting;if(!this.pending){this.call()}}return callback},Clear:function(callback){callback=USING(callback);if(this.posting||this.pending){callback=this.Push([\"Clear\",this,callback])}else{this.posted=[];callback()}return callback},call:function(){this.callback(this);this.Process()},Interest:function(callback,ignorePast,priority){callback=USING(callback);this.listeners.Add(callback,priority);if(!ignorePast){for(var i=0,m=this.posted.length;i<m;i++){callback.reset();var result=callback(this.posted[i]);if(ISCALLBACK(result)&&i===this.posted.length-1){WAITFOR(result,this)}}}return callback},NoInterest:function(callback){this.listeners.Remove(callback)},MessageHook:function(msg,callback,priority){callback=USING(callback);if(!this.hooks){this.hooks={};this.Interest([\"ExecuteHooks\",this])}if(!this.hooks[msg]){this.hooks[msg]=HOOKS(true)}this.hooks[msg].Add(callback,priority);for(var i=0,m=this.posted.length;i<m;i++){if(this.posted[i]==msg){callback.reset();callback(this.posted[i])}}return callback},ExecuteHooks:function(msg,more){var type=((msg instanceof Array)?msg[0]:msg);if(!this.hooks[type]){return null}return this.hooks[type].Execute(msg)}},{signals:{},find:function(name){if(!SIGNAL.signals[name]){SIGNAL.signals[name]=new SIGNAL(name)}return SIGNAL.signals[name]}});BASE.Callback=BASE.CallBack=USING;BASE.Callback.Delay=DELAY;BASE.Callback.After=AFTER;BASE.Callback.Queue=QUEUE;BASE.Callback.Signal=SIGNAL.find;BASE.Callback.Hooks=HOOKS;BASE.Callback.ExecuteHooks=EXECUTEHOOKS})(\"MathJax\");(function(d){var a=window[d];if(!a){a=window[d]={}}var c=(navigator.vendor===\"Apple Computer, Inc.\"&&typeof navigator.vendorSub===\"undefined\");var f=0;var g=function(h){if(document.styleSheets&&document.styleSheets.length>f){f=document.styleSheets.length}if(!h){h=(document.getElementsByTagName(\"head\"))[0];if(!h){h=document.body}}return h};var e=[];var b=function(){for(var j=0,h=e.length;j<h;j++){a.Ajax.head.removeChild(e[j])}e=[]};a.Ajax={loaded:{},loading:{},loadHooks:{},timeout:15*1000,styleDelay:1,config:{root:\"\"},STATUS:{OK:1,ERROR:-1},rootPattern:new RegExp(\"^\\\\[\"+d+\"\\\\]\"),fileURL:function(h){return h.replace(this.rootPattern,this.config.root)},Require:function(j,m){m=a.Callback(m);var k;if(j instanceof Object){for(var h in j){if(j.hasOwnProperty(h)){k=h.toUpperCase();j=j[h]}}}else{k=j.split(/\\./).pop().toUpperCase()}j=this.fileURL(j);if(this.loaded[j]){m(this.loaded[j])}else{var l={};l[k]=j;this.Load(l,m)}return m},Load:function(j,l){l=a.Callback(l);var k;if(j instanceof Object){for(var h in j){if(j.hasOwnProperty(h)){k=h.toUpperCase();j=j[h]}}}else{k=j.split(/\\./).pop().toUpperCase()}j=this.fileURL(j);if(this.loading[j]){this.addHook(j,l)}else{this.head=g(this.head);if(this.loader[k]){this.loader[k].call(this,j,l)}else{throw Error(\"Can't load files of type \"+k)}}return l},LoadHook:function(k,l,j){l=a.Callback(l);if(k instanceof Object){for(var h in k){if(k.hasOwnProperty(h)){k=k[h]}}}k=this.fileURL(k);if(this.loaded[k]){l(this.loaded[k])}else{this.addHook(k,l,j)}return l},addHook:function(i,j,h){if(!this.loadHooks[i]){this.loadHooks[i]=MathJax.Callback.Hooks()}this.loadHooks[i].Add(j,h)},Preloading:function(){for(var k=0,h=arguments.length;k<h;k++){var j=this.fileURL(arguments[k]);if(!this.loading[j]){this.loading[j]={preloaded:true}}}},loader:{JS:function(i,k){var h=document.createElement(\"script\");var j=a.Callback([\"loadTimeout\",this,i]);this.loading[i]={callback:k,timeout:setTimeout(j,this.timeout),status:this.STATUS.OK,script:h};this.loading[i].message=a.Message.File(i);h.onerror=j;h.type=\"text/javascript\";h.src=i;this.head.appendChild(h)},CSS:function(h,j){var i=document.createElement(\"link\");i.rel=\"stylesheet\";i.type=\"text/css\";i.href=h;this.loading[h]={callback:j,message:a.Message.File(h),status:this.STATUS.OK};this.head.appendChild(i);this.timer.create.call(this,[this.timer.file,h],i)}},timer:{create:function(i,h){i=a.Callback(i);if(h.nodeName===\"STYLE\"&&h.styleSheet&&typeof(h.styleSheet.cssText)!==\"undefined\"){i(this.STATUS.OK)}else{if(window.chrome&&typeof(window.sessionStorage)!==\"undefined\"&&h.nodeName===\"STYLE\"){i(this.STATUS.OK)}else{if(c){this.timer.start(this,[this.timer.checkSafari2,f++,i],this.styleDelay)}else{this.timer.start(this,[this.timer.checkLength,h,i],this.styleDelay)}}}return i},start:function(i,h,j,k){h=a.Callback(h);h.execute=this.execute;h.time=this.time;h.STATUS=i.STATUS;h.timeout=k||i.timeout;h.delay=h.total=0;if(j){setTimeout(h,j)}else{h()}},time:function(h){this.total+=this.delay;this.delay=Math.floor(this.delay*1.05+5);if(this.total>=this.timeout){h(this.STATUS.ERROR);return 1}return 0},file:function(i,h){if(h<0){a.Ajax.loadTimeout(i)}else{a.Ajax.loadComplete(i)}},execute:function(){this.hook.call(this.object,this,this.data[0],this.data[1])},checkSafari2:function(h,i,j){if(h.time(j)){return}if(document.styleSheets.length>i&&document.styleSheets[i].cssRules&&document.styleSheets[i].cssRules.length){j(h.STATUS.OK)}else{setTimeout(h,h.delay)}},checkLength:function(h,k,m){if(h.time(m)){return}var l=0;var i=(k.sheet||k.styleSheet);try{if((i.cssRules||i.rules||[]).length>0){l=1}}catch(j){if(j.message.match(/protected variable|restricted URI/)){l=1}else{if(j.message.match(/Security error/)){l=1}}}if(l){setTimeout(a.Callback([m,h.STATUS.OK]),0)}else{setTimeout(h,h.delay)}}},loadComplete:function(h){h=this.fileURL(h);var i=this.loading[h];if(i&&!i.preloaded){a.Message.Clear(i.message);clearTimeout(i.timeout);if(i.script){if(e.length===0){setTimeout(b,0)}e.push(i.script)}this.loaded[h]=i.status;delete this.loading[h];this.addHook(h,i.callback)}else{if(i){delete this.loading[h]}this.loaded[h]=this.STATUS.OK;i={status:this.STATUS.OK}}if(!this.loadHooks[h]){return null}return this.loadHooks[h].Execute(i.status)},loadTimeout:function(h){if(this.loading[h].timeout){clearTimeout(this.loading[h].timeout)}this.loading[h].status=this.STATUS.ERROR;this.loadError(h);this.loadComplete(h)},loadError:function(h){a.Message.Set([\"LoadFailed\",\"File failed to load: %1\",h],null,2000);a.Hub.signal.Post([\"file load error\",h])},Styles:function(j,k){var h=this.StyleString(j);if(h===\"\"){k=a.Callback(k);k()}else{var i=document.createElement(\"style\");i.type=\"text/css\";this.head=g(this.head);this.head.appendChild(i);if(i.styleSheet&&typeof(i.styleSheet.cssText)!==\"undefined\"){i.styleSheet.cssText=h}else{i.appendChild(document.createTextNode(h))}k=this.timer.create.call(this,k,i)}return k},StyleString:function(m){if(typeof(m)===\"string\"){return m}var j=\"\",n,l;for(n in m){if(m.hasOwnProperty(n)){if(typeof m[n]===\"string\"){j+=n+\" {\"+m[n]+\"}\\n\"}else{if(m[n] instanceof Array){for(var k=0;k<m[n].length;k++){l={};l[n]=m[n][k];j+=this.StyleString(l)}}else{if(n.substr(0,6)===\"@media\"){j+=n+\" {\"+this.StyleString(m[n])+\"}\\n\"}else{if(m[n]!=null){l=[];for(var h in m[n]){if(m[n].hasOwnProperty(h)){if(m[n][h]!=null){l[l.length]=h+\": \"+m[n][h]}}}j+=n+\" {\"+l.join(\"; \")+\"}\\n\"}}}}}}return j}}})(\"MathJax\");MathJax.HTML={Element:function(c,e,d){var f=document.createElement(c);if(e){if(e.style){var b=e.style;e.style={};for(var g in b){if(b.hasOwnProperty(g)){e.style[g.replace(/-([a-z])/g,this.ucMatch)]=b[g]}}}MathJax.Hub.Insert(f,e)}if(d){if(!(d instanceof Array)){d=[d]}for(var a=0;a<d.length;a++){if(d[a] instanceof Array){f.appendChild(this.Element(d[a][0],d[a][1],d[a][2]))}else{if(c===\"script\"){this.setScript(f,d[a])}else{f.appendChild(document.createTextNode(d[a]))}}}}return f},ucMatch:function(a,b){return b.toUpperCase()},addElement:function(b,a,d,c){return b.appendChild(this.Element(a,d,c))},TextNode:function(a){return document.createTextNode(a)},addText:function(a,b){return a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScriptBug){a.text=b}else{while(a.firstChild){a.removeChild(a.firstChild)}this.addText(a,b)}},getScript:function(a){var b=(a.text===\"\"?a.innerHTML:a.text);return b.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\")},Cookie:{prefix:\"mjx\",expires:365,Set:function(a,e){var d=[];if(e){for(var g in e){if(e.hasOwnProperty(g)){d.push(g+\":\"+e[g].toString().replace(/&/g,\"&&\"))}}}var b=this.prefix+\".\"+a+\"=\"+escape(d.join(\"&;\"));if(this.expires){var f=new Date();f.setDate(f.getDate()+this.expires);b+=\"; expires=\"+f.toGMTString()}try{document.cookie=b+\"; path=/\"}catch(c){}},Get:function(c,h){if(!h){h={}}var g=new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+c+\"=([^;]*)(?:;|$)\");var b=g.exec(document.cookie);if(b&&b[1]!==\"\"){var e=unescape(b[1]).split(\"&;\");for(var d=0,a=e.length;d<a;d++){b=e[d].match(/([^:]+):(.*)/);var f=b[2].replace(/&&/g,\"&\");if(f===\"true\"){f=true}else{if(f===\"false\"){f=false}else{if(f.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)){f=parseFloat(f)}}}h[b[1]]=f}}return h}}};MathJax.Localization={locale:\"en\",directory:\"[MathJax]/localization\",strings:{en:{menuTitle:\"English\",isLoaded:true},de:{menuTitle:\"Deutsch\"},fr:{menuTitle:\"Fran\\u00E7ais\"}},pattern:/%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,SPLIT:(\"axb\".split(/(x)/).length===3?function(a,b){return a.split(b)}:function(c,e){var a=[],b,d=0;e.lastIndex=0;while(b=e.exec(c)){a.push(c.substr(d,b.index));a.push.apply(a,b.slice(1));d=b.index+b[0].length}a.push(c.substr(d));return a}),_:function(b,a){if(a instanceof Array){return this.processSnippet(b,a)}return this.processString(this.lookupPhrase(b,a),[].slice.call(arguments,2))},processString:function(l,o,g){var j,e;for(j=0,e=o.length;j<e;j++){if(g&&o[j] instanceof Array){o[j]=this.processSnippet(g,o[j])}}var f=this.SPLIT(l,this.pattern);for(j=1,e=f.length;j<e;j+=2){var p=f[j].charAt(0);if(p>=\"0\"&&p<=\"9\"){f[j]=o[f[j]-1];if(typeof f[j]===\"number\"){f[j]=this.number(f[j])}}else{if(p===\"{\"){p=f[j].substr(1);if(p>=\"0\"&&p<=\"9\"){f[j]=o[f[j].substr(1,f[j].length-2)-1];if(typeof f[j]===\"number\"){f[j]=this.number(f[j])}}else{var k=f[j].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);if(k){if(k[1]===\"plural\"){var d=o[k[2]-1];if(typeof d===\"undefined\"){f[j]=\"???\"}else{d=this.plural(d)-1;var h=k[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/);if(d>=0&&d<h.length){f[j]=this.processString(h[d].replace(/\\uEFEF/g,\"|\"),o,g)}else{f[j]=\"???\"}}}else{f[j]=\"%\"+f[j]}}}}}if(f[j]==null){f[j]=\"???\"}}if(!g){return f.join(\"\")}var a=[],b=\"\";for(j=0;j<e;j++){b+=f[j];j++;if(j<e){if(f[j] instanceof Array){a.push(b);a=a.concat(f[j]);b=\"\"}else{b+=f[j]}}}if(b!==\"\"){a.push(b)}return a},processSnippet:function(g,e){var c=[];for(var d=0,b=e.length;d<b;d++){if(e[d] instanceof Array){var f=e[d];if(typeof f[1]===\"string\"){var h=f[0];if(!(h instanceof Array)){h=[g,h]}var a=this.lookupPhrase(h,f[1]);c=c.concat(this.processMarkdown(a,f.slice(2),g))}else{if(f[1] instanceof Array){c=c.concat(this.processSnippet.apply(this,f))}else{if(f.length>=3){c.push([f[0],f[1],this.processSnippet(g,f[2])])}else{c.push(e[d])}}}}else{c.push(e[d])}}return c},markdownPattern:/(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,processMarkdown:function(b,h,d){var j=[],e;var c=b.split(this.markdownPattern);var g=c[0];for(var f=1,a=c.length;f<a;f+=8){if(c[f+1]){e=this.processString(c[f+2],h,d);if(!(e instanceof Array)){e=[e]}e=[[\"b\",\"i\",\"i\"][c[f+1].length-1],{},e];if(c[f+1].length===3){e=[\"b\",{},e]}}else{if(c[f+3]){e=this.processString(c[f+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),h,d);if(!(e instanceof Array)){e=[e]}e=[\"code\",{},e]}else{if(c[f+5]){e=this.processString(c[f+5],h,d);if(!(e instanceof Array)){e=[e]}e=[\"a\",{href:this.processString(c[f+6],h),target:\"_blank\"},e]}else{g+=c[f];e=null}}}if(e){j=this.concatString(j,g,h,d);j.push(e);g=\"\"}if(c[f+7]!==\"\"){g+=c[f+7]}}j=this.concatString(j,g,h,d);return j},concatString:function(a,c,b,d){if(c!=\"\"){c=this.processString(c,b,d);if(!(c instanceof Array)){c=[c]}a=a.concat(c)}return a},lookupPhrase:function(f,a,d){if(!d){d=\"_\"}if(f instanceof Array){d=(f[0]||\"_\");f=(f[1]||\"\")}var c=this.loadDomain(d);if(c){MathJax.Hub.RestartAfter(c)}var b=this.strings[this.locale];if(b){if(b.domains&&d in b.domains){var e=b.domains[d];if(e.strings&&f in e.strings){a=e.strings[f]}}}return a},loadFile:function(b,d,e){e=MathJax.Callback(e||{});b=(d.file||b);if(!b.match(/\\.js$/)){b+=\".js\"}if(!b.match(/^([a-z]+:|\\[MathJax\\])/)){var a=(this.strings[this.locale].directory||this.directory+\"/\"+this.locale||\"[MathJax]/localization/\"+this.locale);b=a+\"/\"+b}var c=MathJax.Ajax.Require(b,function(){d.isLoaded=true;return e()});return(c.called?null:c)},loadDomain:function(c,e){var b,a=this.strings[this.locale];if(a){if(!a.isLoaded){b=this.loadFile(this.locale,a);if(b){return MathJax.Callback.Queue(b,[\"loadDomain\",this,c]).Push(e)}}if(a.domains&&c in a.domains){var d=a.domains[c];if(!d.isLoaded){b=this.loadFile(c,d);if(b){return MathJax.Callback.Queue(b).Push(e)}}}}return MathJax.Callback(e)()},Try:function(a){a=MathJax.Callback(a);a.autoReset=true;try{a()}catch(b){if(!b.restart){throw b}MathJax.Callback.After([\"Try\",this,a],b.restart)}},setLocale:function(a){if(this.strings[a]){this.locale=a}if(MathJax.Menu){this.loadDomain(\"MathMenu\")}},addTranslation:function(b,e,c){var d=this.strings[b],a=false;if(!d){d=this.strings[b]={};a=true}if(!d.domains){d.domains={}}if(e){if(!d.domains[e]){d.domains[e]={}}d=d.domains[e]}MathJax.Hub.Insert(d,c);if(a&&MathJax.Menu.menu){MathJax.Menu.CreateLocaleMenu()}},setCSS:function(b){var a=this.strings[this.locale];if(a){if(a.fontFamily){b.style.fontFamily=a.fontFamily}if(a.fontDirection){b.style.direction=a.fontDirection;if(a.fontDirection===\"rtl\"){b.style.textAlign=\"right\"}}}return b},fontFamily:function(){var a=this.strings[this.locale];return(a?a.fontFamily:null)},fontDirection:function(){var a=this.strings[this.locale];return(a?a.fontDirection:null)},plural:function(b){var a=this.strings[this.locale];if(a&&a.plural){return a.plural(b)}if(b==1){return 1}return 2},number:function(b){var a=this.strings[this.locale];if(a&&a.number){return a.number(b)}return b}};MathJax.Message={ready:false,log:[{}],current:null,textNodeBug:(navigator.vendor===\"Apple Computer, Inc.\"&&typeof navigator.vendorSub===\"undefined\")||(window.hasOwnProperty&&window.hasOwnProperty(\"konqueror\")),styles:{\"#MathJax_Message\":{position:\"fixed\",left:\"1px\",bottom:\"2px\",\"background-color\":\"#E6E6E6\",border:\"1px solid #959595\",margin:\"0px\",padding:\"2px 8px\",\"z-index\":\"102\",color:\"black\",\"font-size\":\"80%\",width:\"auto\",\"white-space\":\"nowrap\"},\"#MathJax_MSIE_Frame\":{position:\"absolute\",top:0,left:0,width:\"0px\",\"z-index\":101,border:\"0px\",margin:\"0px\",padding:\"0px\"}},browsers:{MSIE:function(a){MathJax.Hub.config.styles[\"#MathJax_Message\"].position=\"absolute\";MathJax.Message.quirks=(document.compatMode===\"BackCompat\")},Chrome:function(a){MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom=\"1.5em\";MathJax.Hub.config.styles[\"#MathJax_Message\"].left=\"1em\"}},Init:function(a){if(a){this.ready=true}if(!document.body||!this.ready){return false}if(this.div&&this.div.parentNode==null){this.div=document.getElementById(\"MathJax_Message\");if(this.div){this.text=this.div.firstChild}}if(!this.div){var b=document.body;if(MathJax.Hub.Browser.isMSIE){b=this.frame=this.addDiv(document.body);b.removeAttribute(\"id\");b.style.position=\"absolute\";b.style.border=b.style.margin=b.style.padding=\"0px\";b.style.zIndex=\"101\";b.style.height=\"0px\";b=this.addDiv(b);b.id=\"MathJax_MSIE_Frame\";window.attachEvent(\"onscroll\",this.MoveFrame);window.attachEvent(\"onresize\",this.MoveFrame);this.MoveFrame()}this.div=this.addDiv(b);this.div.style.display=\"none\";this.text=this.div.appendChild(document.createTextNode(\"\"))}return true},addDiv:function(a){var b=document.createElement(\"div\");b.id=\"MathJax_Message\";if(a.firstChild){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return b},MoveFrame:function(){var a=(MathJax.Message.quirks?document.body:document.documentElement);var b=MathJax.Message.frame;b.style.left=a.scrollLeft+\"px\";b.style.top=a.scrollTop+\"px\";b.style.width=a.clientWidth+\"px\";b=b.firstChild;b.style.height=a.clientHeight+\"px\"},localize:function(a){return MathJax.Localization._(a,a)},filterText:function(a,c,b){if(MathJax.Hub.config.messageStyle===\"simple\"){if(b===\"LoadFile\"){if(!this.loading){this.loading=this.localize(\"Loading\")+\" \"}a=this.loading;this.loading+=\".\"}else{if(b===\"ProcessMath\"){if(!this.processing){this.processing=this.localize(\"Processing\")+\" \"}a=this.processing;this.processing+=\".\"}else{if(b===\"TypesetMath\"){if(!this.typesetting){this.typesetting=this.localize(\"Typesetting\")+\" \"}a=this.typesetting;this.typesetting+=\".\"}}}}return a},Set:function(c,e,b){if(e==null){e=this.log.length;this.log[e]={}}var d=\"\";if(c instanceof Array){d=c[0];if(d instanceof Array){d=d[1]}try{c=MathJax.Localization._.apply(MathJax.Localization,c)}catch(a){if(!a.restart){throw a}if(!a.restart.called){if(this.log[e].restarted==null){this.log[e].restarted=0}this.log[e].restarted++;delete this.log[e].cleared;MathJax.Callback.After([\"Set\",this,c,e,b],a.restart);return e}}}if(this.timer){clearTimeout(this.timer);delete this.timer}this.log[e].text=c;this.log[e].filteredText=c=this.filterText(c,e,d);if(typeof(this.log[e].next)===\"undefined\"){this.log[e].next=this.current;if(this.current!=null){this.log[this.current].prev=e}this.current=e}if(this.current===e&&MathJax.Hub.config.messageStyle!==\"none\"){if(this.Init()){if(this.textNodeBug){this.div.innerHTML=c}else{this.text.nodeValue=c}this.div.style.display=\"\";if(this.status){window.status=\"\";delete this.status}}else{window.status=c;this.status=true}}if(this.log[e].restarted){if(this.log[e].cleared){b=0}if(--this.log[e].restarted===0){delete this.log[e].cleared}}if(b){setTimeout(MathJax.Callback([\"Clear\",this,e]),b)}else{if(b==0){this.Clear(e,0)}}return e},Clear:function(b,a){if(this.log[b].prev!=null){this.log[this.log[b].prev].next=this.log[b].next}if(this.log[b].next!=null){this.log[this.log[b].next].prev=this.log[b].prev}if(this.current===b){this.current=this.log[b].next;if(this.text){if(this.div.parentNode==null){this.Init()}if(this.current==null){if(this.timer){clearTimeout(this.timer);delete this.timer}if(a==null){a=600}if(a===0){this.Remove()}else{this.timer=setTimeout(MathJax.Callback([\"Remove\",this]),a)}}else{if(MathJax.Hub.config.messageStyle!==\"none\"){if(this.textNodeBug){this.div.innerHTML=this.log[this.current].filteredText}else{this.text.nodeValue=this.log[this.current].filteredText}}}if(this.status){window.status=\"\";delete this.status}}else{if(this.status){window.status=(this.current==null?\"\":this.log[this.current].text)}}}delete this.log[b].next;delete this.log[b].prev;delete this.log[b].filteredText;if(this.log[b].restarted){this.log[b].cleared=true}},Remove:function(){this.text.nodeValue=\"\";this.div.style.display=\"none\"},File:function(b){var a=MathJax.Ajax.config.root;if(b.substr(0,a.length)===a){b=\"[MathJax]\"+b.substr(a.length)}return this.Set([\"LoadFile\",\"Loading %1\",b],null,null)},Log:function(){var b=[];for(var c=1,a=this.log.length;c<a;c++){b[c]=this.log[c].text}return b.join(\"\\n\")}};MathJax.Hub={config:{root:\"\",config:[],styleSheets:[],styles:{\".MathJax_Preview\":{color:\"#888\"}},jax:[],extensions:[],preJax:null,postJax:null,displayAlign:\"center\",displayIndent:\"0\",preRemoveClass:\"MathJax_Preview\",showProcessingMessages:true,messageStyle:\"normal\",delayStartupUntil:\"none\",skipStartupTypeset:false,elements:[],positionToHash:true,showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:\"None\",CTRL:false,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:\"200%\",renderer:\"\",font:\"Auto\",context:\"MathJax\",locale:\"en\",mpContext:false,mpMouse:false,texHints:true},errorSettings:{message:[\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],style:{color:\"#CC0000\",\"font-style\":\"italic\"}}},preProcessors:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processUpdateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal(\"Hub\"),Config:function(a){this.Insert(this.config,a);if(this.config.Augment){this.Augment(this.config.Augment)}},CombineConfig:function(c,f){var b=this.config,g,e;c=c.split(/\\./);for(var d=0,a=c.length;d<a;d++){g=c[d];if(!b[g]){b[g]={}}e=b;b=b[g]}e[g]=b=this.Insert(f,b);return b},Register:{PreProcessor:function(){MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},StartupHook:function(){return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},LoadHook:function(){return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},getAllJax:function(e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.push(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].MathJax.elementJax.mimeType===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxByInputType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].type&&b[d].type.replace(/ *;(.|\\s)*/,\"\")===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxFor:function(a){if(typeof(a)===\"string\"){a=document.getElementById(a)}if(a&&a.MathJax){return a.MathJax.elementJax}if(a&&a.isMathJax){while(a&&!a.jaxID){a=a.parentNode}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return null},isJax:function(a){if(typeof(a)===\"string\"){a=document.getElementById(a)}if(a&&a.isMathJax){return 1}if(a&&a.tagName!=null&&a.tagName.toLowerCase()===\"script\"){if(a.MathJax){return(a.MathJax.state===MathJax.ElementJax.STATE.PROCESSED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ *;(.|\\s)*/,\"\")]){return -1}}return 0},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this.config.menuSettings.renderer=\"\";var b=\"[MathJax]/jax/output/\"+d+\"/config.js\";return MathJax.Ajax.Require(b,[\"setRenderer\",this,d,c])}else{this.config.menuSettings.renderer=d;if(c==null){c=\"jax/mml\"}var a=this.outputJax;if(a[c]&&a[c].length){if(d!==a[c][0].id){a[c].unshift(MathJax.OutputJax[d]);return this.signal.Post([\"Renderer Selected\",d])}}return null}},Queue:function(){return this.queue.Push.apply(this.queue,arguments)},Typeset:function(e,f){if(!MathJax.isReady){return null}var c=this.elementCallback(e,f);var b=MathJax.Callback.Queue();for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){b.Push([\"PreProcess\",this,c.elements[d]],[\"Process\",this,c.elements[d]])}}return b.Push(c.callback)},PreProcess:function(e,f){var c=this.elementCallback(e,f);var b=MathJax.Callback.Queue();for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){b.Push([\"Post\",this.signal,[\"Begin PreProcess\",c.elements[d]]],(arguments.callee.disabled?{}:[\"Execute\",this.preProcessors,c.elements[d]]),[\"Post\",this.signal,[\"End PreProcess\",c.elements[d]]])}}return b.Push(c.callback)},Process:function(a,b){return this.takeAction(\"Process\",a,b)},Update:function(a,b){return this.takeAction(\"Update\",a,b)},Reprocess:function(a,b){return this.takeAction(\"Reprocess\",a,b)},Rerender:function(a,b){return this.takeAction(\"Rerender\",a,b)},takeAction:function(g,e,h){var c=this.elementCallback(e,h);var b=MathJax.Callback.Queue([\"Clear\",this.signal]);for(var d=0,a=c.elements.length;d<a;d++){if(c.elements[d]){var f={scripts:[],start:new Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};b.Push([\"Post\",this.signal,[\"Begin \"+g,c.elements[d]]],[\"Post\",this.signal,[\"Begin Math\",c.elements[d],g]],[\"prepareScripts\",this,g,c.elements[d],f],[\"Post\",this.signal,[\"Begin Math Input\",c.elements[d],g]],[\"processInput\",this,f],[\"Post\",this.signal,[\"End Math Input\",c.elements[d],g]],[\"prepareOutput\",this,f,\"preProcess\"],[\"Post\",this.signal,[\"Begin Math Output\",c.elements[d],g]],[\"processOutput\",this,f],[\"Post\",this.signal,[\"End Math Output\",c.elements[d],g]],[\"prepareOutput\",this,f,\"postProcess\"],[\"Post\",this.signal,[\"End Math\",c.elements[d],g]],[\"Post\",this.signal,[\"End \"+g,c.elements[d]]])}}return b.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b){var a=b.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}else{b.MathJax.state=a.STATE.PROCESSED}},Reprocess:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}},Rerender:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.OUTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){return}var b=this.elementScripts(e);var f=MathJax.ElementJax.STATE;for(var d=0,a=b.length;d<a;d++){var c=b[d];if(c.type&&this.inputJax[c.type.replace(/ *;(.|\\n)*/,\"\")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.elementJax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elementJax)}if(c.MathJax.state!==f.PENDING){this.scriptAction[h](c)}}if(!c.MathJax){c.MathJax={state:f.PENDING}}if(c.MathJax.state!==f.PROCESSED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.checked){return}var b=this.config,f=a.previousSibling;if(f&&f.nodeName===\"#text\"){var d,e,c=a.nextSibling;if(c&&c.nodeName!==\"#text\"){c=null}if(b.preJax){if(typeof(b.preJax)===\"string\"){b.preJax=new RegExp(b.preJax+\"$\")}d=f.nodeValue.match(b.preJax)}if(b.postJax&&c){if(typeof(b.postJax)===\"string\"){b.postJax=new RegExp(\"^\"+b.postJax)}e=c.nodeValue.match(b.postJax)}if(d&&(!b.postJax||e)){f.nodeValue=f.nodeValue.replace(b.preJax,(d.length>1?d[1]:\"\"));f=null}if(e&&(!b.preJax||d)){c.nodeValue=c.nodeValue.replace(b.postJax,(e.length>1?e[1]:\"\"))}if(f&&!f.nodeValue.match(/\\S/)){f=f.previousSibling}}if(b.preRemoveClass&&f&&f.className===b.preRemoveClass){a.MathJax.preview=f}a.MathJax.checked=1},processInput:function(a){var b,i=MathJax.ElementJax.STATE;var h,e,d=a.scripts.length;try{while(a.i<d){h=a.scripts[a.i];if(!h){a.i++;continue}e=h.previousSibling;if(e&&e.className===\"MathJax_Error\"){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state===i.PROCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state===i.UPDATE){this.checkScriptSiblings(h);var g=h.type.replace(/ *;(.|\\s)*/,\"\");b=this.inputJax[g].Process(h,a);if(typeof b===\"function\"){if(b.called){continue}this.RestartAfter(b)}b.Attach(h,this.inputJax[g].id);this.saveScript(b,a,h,i)}else{if(h.MathJax.state===i.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var c=new Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.length){a.start=c;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){return this.processError(f,a,\"Input\")}if(a.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}a.start=new Date().getTime();a.i=a.j=0;return null},saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.MathJax.state=c.UPDATE;throw Error(\"No output jax registered for \"+a.mimeType)}a.outputJax=this.outputJax[a.mimeType][0].id;if(!d.jax[a.outputJax]){if(d.jaxIDs.length===0){d.jax[a.outputJax]=d.scripts}else{if(d.jaxIDs.length===1){d.jax[d.jaxIDs[0]]=d.scripts.slice(0,d.i)}d.jax[a.outputJax]=[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.length>1){d.jax[a.outputJax].push(b)}b.MathJax.state=c.OUTPUT},prepareOutput:function(c,f){while(c.j<c.jaxIDs.length){var e=c.jaxIDs[c.j],d=MathJax.OutputJax[e];if(d[f]){try{var a=d[f](c);if(typeof a===\"function\"){if(a.called){continue}this.RestartAfter(a)}}catch(b){if(!b.restart){MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",e,f],null,600);MathJax.Hub.lastPrepError=b;c.j++}return MathJax.Callback.After([\"prepareOutput\",this,c,f],b.restart)}}c.j++}return null},processOutput:function(h){var b,g=MathJax.ElementJax.STATE,d,a=h.scripts.length;try{while(h.i<a){d=h.scripts[h.i];if(!d||!d.MathJax||d.MathJax.error){h.i++;continue}var c=d.MathJax.elementJax;if(!c){h.i++;continue}b=MathJax.OutputJax[c.outputJax].Process(d,h);d.MathJax.state=g.PROCESSED;h.i++;if(d.MathJax.preview){d.MathJax.preview.innerHTML=\"\"}this.signal.Post([\"New Math\",c.inputID]);var e=new Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.length){h.start=e;this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}}}catch(f){return this.processError(f,h,\"Output\")}if(h.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);MathJax.Message.Clear(0)}h.i=h.j=0;return null},processMessage:function(d,b){var a=Math.floor(d.i/(d.scripts.length)*100);var c=(b===\"Output\"?[\"TypesetMath\",\"Typesetting math: %1%%\"]:[\"ProcessMath\",\"Processing math: %1%%\"]);if(this.config.showProcessingMessages){MathJax.Message.Set(c.concat(a),0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.errorSettings.message){throw b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);return MathJax.Callback.After([\"process\"+a,this,c],b.restart)},formatError:function(b,e){var d=\"Error: \"+e.message+\"\\n\";if(e.sourceURL){d+=\"\\nfile: \"+e.sourceURL}if(e.line){d+=\"\\nline: \"+e.line}b.MathJax.error=MathJax.OutputJax.Error.Jax(d,b);var f=this.config.errorSettings;var a=MathJax.Localization._(f.messageId,f.message);var c=MathJax.HTML.Element(\"span\",{className:\"MathJax_Error\",jaxID:\"Error\",isMathJax:true},a);if(MathJax.Extension.MathEvents){c.oncontextmenu=MathJax.Extension.MathEvents.Event.Menu;c.onmousedown=MathJax.Extension.MathEvents.Event.Mousedown}else{MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function(){c.oncontextmenu=MathJax.Extension.MathEvents.Event.Menu;c.onmousedown=MathJax.Extension.MathEvents.Event.Mousedown})}b.parentNode.insertBefore(c,b);if(b.MathJax.preview){b.MathJax.preview.innerHTML=\"\"}this.lastError=e;this.signal.Post([\"Math Processing Error\",b,e])},RestartAfter:function(a){throw this.Insert(Error(\"restart\"),{restart:MathJax.Callback(a)})},elementCallback:function(c,f){if(f==null&&(c instanceof Array||typeof c===\"function\")){try{MathJax.Callback(c);f=c;c=null}catch(d){}}if(c==null){c=this.config.elements||[]}if(!(c instanceof Array)){c=[c]}c=[].concat(c);for(var b=0,a=c.length;b<a;b++){if(typeof(c[b])===\"string\"){c[b]=document.getElementById(c[b])}}if(!document.body){document.body=document.getElementsByTagName(\"body\")[0]}if(c.length==0){c.push(document.body)}if(!f){f={}}return{elements:c,callback:f}},elementScripts:function(a){if(typeof(a)===\"string\"){a=document.getElementById(a)}if(!document.body){document.body=document.getElementsByTagName(\"body\")[0]}if(a==null){a=document.body}if(a.tagName!=null&&a.tagName.toLowerCase()===\"script\"){return[a]}return a.getElementsByTagName(\"script\")},Insert:function(c,a){for(var b in a){if(a.hasOwnProperty(b)){if(typeof a[b]===\"object\"&&!(a[b] instanceof Array)&&(typeof c[b]===\"object\"||typeof c[b]===\"function\")){this.Insert(c[b],a[b])}else{c[b]=a[b]}}}return c},SplitList:(\"trim\" in String.prototype?function(a){return a.trim().split(/\\s+/)}:function(a){return a.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\").split(/\\s+/)})};MathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});MathJax.Extension={};MathJax.Hub.Configured=MathJax.Callback({});MathJax.Hub.Startup={script:\"\",queue:MathJax.Callback.Queue(),signal:MathJax.Callback.Signal(\"Startup\"),params:{},Config:function(){this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);if(this.params.locale){MathJax.Localization.locale=this.params.locale;MathJax.Hub.config.menuSettings.locale=this.params.locale}var b=MathJax.HTML.Cookie.Get(\"user\");if(b.URL||b.Config){if(confirm(MathJax.Localization._(\"CookieConfig\",\"MathJax has found a user-configuration cookie that includes code to be run. Do you want to run it?\\n\\n(You should press Cancel unless you set up the cookie yourself.)\"))){if(b.URL){this.queue.Push([\"Require\",MathJax.Ajax,b.URL])}if(b.Config){this.queue.Push(new Function(b.Config))}}else{MathJax.HTML.Cookie.Set(\"user\",{})}}if(this.params.config){var d=this.params.config.split(/,/);for(var c=0,a=d.length;c<a;c++){if(!d[c].match(/\\.js$/)){d[c]+=\".js\"}this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",d[c])])}}if(this.script.match(/\\S/)){this.queue.Push(this.script+\";\\n1;\")}this.queue.Push([\"ConfigDelay\",this],[\"ConfigBlocks\",this],[function(e){return e.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],[\"Post\",this.signal,\"End Config\"])},ConfigDelay:function(){var a=this.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;if(a===\"onload\"){return this.onload}if(a===\"configured\"){return MathJax.Hub.Configured}return a},ConfigBlocks:function(){var c=document.getElementsByTagName(\"script\");var f=null,b=MathJax.Callback.Queue();for(var d=0,a=c.length;d<a;d++){var e=String(c[d].type).replace(/ /g,\"\");if(e.match(/^text\\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=true/)){c[d].type+=\";executed=true\";f=b.Push(c[d].innerHTML+\";\\n1;\")}}return f},Cookie:function(){return this.queue.Push([\"Post\",this.signal,\"Begin Cookie\"],[\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],[function(d){if(d.menuSettings.locale){MathJax.Localization.locale=d.menuSettings.locale}var f=d.menuSettings.renderer,b=d.jax;if(f){var c=\"output/\"+f;b.sort();for(var e=0,a=b.length;e<a;e++){if(b[e].substr(0,7)===\"output/\"){break}}if(e==a-1){b.pop()}else{while(e<a){if(b[e]===c){b.splice(e,1);break}e++}}b.unshift(c)}},MathJax.Hub.config],[\"Post\",this.signal,\"End Cookie\"])},Styles:function(){return this.queue.Push([\"Post\",this.signal,\"Begin Styles\"],[\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],[\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],[\"Post\",this.signal,\"End Styles\"])},Jax:function(){var f=MathJax.Hub.config,c=MathJax.Hub.outputJax;for(var g=0,b=f.jax.length,d=0;g<b;g++){var e=f.jax[g].substr(7);if(f.jax[g].substr(0,7)===\"output/\"&&c.order[e]==null){c.order[e]=d;d++}}var a=MathJax.Callback.Queue();return a.Push([\"Post\",this.signal,\"Begin Jax\"],[\"loadArray\",this,f.jax,\"jax\",\"config.js\"],[\"Post\",this.signal,\"End Jax\"])},Extensions:function(){var a=MathJax.Callback.Queue();return a.Push([\"Post\",this.signal,\"Begin Extensions\"],[\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],[\"Post\",this.signal,\"End Extensions\"])},Message:function(){MathJax.Message.Init(true)},Menu:function(){var b=MathJax.Hub.config.menuSettings,a=MathJax.Hub.outputJax,d;for(var c in a){if(a.hasOwnProperty(c)){if(a[c].length){d=a[c];break}}}if(d&&d.length){if(b.renderer&&b.renderer!==d[0].id){d.unshift(MathJax.OutputJax[b.renderer])}b.renderer=d[0].id}},Hash:function(){if(MathJax.Hub.config.positionToHash&&document.location.hash&&document.body&&document.body.scrollIntoView){var d=document.location.hash.substr(1);var f=document.getElementById(d);if(!f){var c=document.getElementsByTagName(\"a\");for(var e=0,b=c.length;e<b;e++){if(c[e].name===d){f=c[e];break}}}if(f){while(!f.scrollIntoView){f=f.parentNode}f=this.HashCheck(f);if(f&&f.scrollIntoView){setTimeout(function(){f.scrollIntoView(true)},1)}}}},HashCheck:function(b){if(b.isMathJax){var a=MathJax.Hub.getJaxFor(b);if(a&&MathJax.OutputJax[a.outputJax].hashCheck){b=MathJax.OutputJax[a.outputJax].hashCheck(b)}}return b},MenuZoom:function(){if(!MathJax.Extension.MathMenu){setTimeout(function(){MathJax.Callback.Queue([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],[\"loadDomain\",MathJax.Localization,\"MathMenu\"])},1000)}else{setTimeout(MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),1000)}if(!MathJax.Extension.MathZoom){setTimeout(MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),2000)}},onLoad:function(){var a=this.onload=MathJax.Callback(function(){MathJax.Hub.Startup.signal.Post(\"onLoad\")});if(document.body&&document.readyState){if(MathJax.Hub.Browser.isMSIE){if(document.readyState===\"complete\"){return[a]}}else{if(document.readyState!==\"loading\"){return[a]}}}if(window.addEventListener){window.addEventListener(\"load\",a,false);if(!this.params.noDOMContentEvent){window.addEventListener(\"DOMContentLoaded\",a,false)}}else{if(window.attachEvent){window.attachEvent(\"onload\",a)}else{window.onload=a}}return a},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return function(){}}return this.queue.Push([\"Post\",this.signal,\"Begin Typeset\"],[\"Typeset\",MathJax.Hub,a,b],[\"Post\",this.signal,\"End Typeset\"])},URL:function(b,a){if(!a.match(/^([a-z]+:\\/\\/|\\[|\\/)/)){a=\"[MathJax]/\"+b+\"/\"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b instanceof Array)){b=[b]}if(b.length){var h=MathJax.Callback.Queue(),j={},e;for(var g=0,d=b.length;g<d;g++){e=this.URL(f,b[g]);if(c){e+=\"/\"+c}if(a){h.Push([\"Require\",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j))}}return h.Push({})}}return null}};(function(d){var b=window[d],e=\"[\"+d+\"]\";var c=b.Hub,a=b.Ajax,f=b.Callback;var g=MathJax.Object.Subclass({JAXFILE:\"jax.js\",require:null,config:{},Init:function(i,h){if(arguments.length===0){return this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var i=this.constructor,h={};if(k!=null){for(var l in k){if(k.hasOwnProperty(l)){if(typeof k[l]===\"function\"){i.protoFunction(l,k[l])}else{h[l]=k[l]}}}if(k.toString!==i.prototype.toString&&k.toString!=={}.toString){i.protoFunction(\"toString\",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,j);return this},Translate:function(h,i){throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\")},Register:function(h){},Config:function(){this.config=c.CombineConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.config.Augment)}},Startup:function(){},loadComplete:function(i){if(i===\"config.js\"){return a.loadComplete(this.directory+\"/\"+i)}else{var h=f.Queue();h.Push(c.Register.StartupHook(\"End Config\",{}),[\"Post\",c.Startup.signal,this.id+\" Jax Config\"],[\"Config\",this],[\"Post\",c.Startup.signal,this.id+\" Jax Require\"],[function(j){return MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(j,k){return MathJax.Hub.Startup.loadArray(j.extensions,\"extensions/\"+k)},this.config||{},this.id],[\"Post\",c.Startup.signal,this.id+\" Jax Startup\"],[\"Startup\",this],[\"Post\",c.Startup.signal,this.id+\" Jax Ready\"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=j.preTranslate;j.Process=j.Translate;j.postProcess=j.postTranslate},this.constructor.prototype])}return h.Push([\"loadComplete\",a,this.directory+\"/\"+i])}}},{id:\"Jax\",version:\"2.2\",directory:e+\"/jax\",extensionDir:e+\"/extensions\"});b.InputJax=g.Subclass({elementJax:\"mml\",sourceMenuTitle:[\"OriginalForm\",\"Original Form\"],copyTranslate:true,Process:function(l,q){var j=f.Queue(),o;var k=this.elementJax;if(!(k instanceof Array)){k=[k]}for(var n=0,h=k.length;n<h;n++){o=b.ElementJax.directory+\"/\"+k[n]+\"/\"+this.JAXFILE;if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(o);j.Push(a.Require(o))}o=this.directory+\"/\"+this.JAXFILE;var p=j.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=function(){if(!p.called){return p}throw Error(o+\" failed to load properly\")}}k=c.outputJax[\"jax/\"+k[0]];if(k){j.Push(a.Require(k[0].directory+\"/\"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var i=h.SourceElement();return(h.originalText!==b.HTML.getScript(i))},Register:function(h){if(!c.inputJax){c.inputJax={}}c.inputJax[h]=this}},{id:\"InputJax\",version:\"2.2\",directory:g.directory+\"/input\",extensionDir:g.extensionDir});b.OutputJax=g.Subclass({copyTranslate:true,preProcess:function(j){var i,h=this.directory+\"/\"+this.JAXFILE;this.constructor.prototype.preProcess=function(k){if(!i.called){return i}throw Error(h+\" failed to load properly\")};i=a.Require(h);return i},Register:function(i){var h=c.outputJax;if(!h[i]){h[i]=[]}if(h[i].length&&(this.id===c.config.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(b.ElementJax.directory+\"/\"+(i.split(/\\//)[1])+\"/\"+this.JAXFILE)},Remove:function(h){}},{id:\"OutputJax\",version:\"2.2\",directory:g.directory+\"/output\",extensionDir:g.extensionDir,fontDir:e+(b.isPacked?\"\":\"/..\")+\"/fonts\",imageDir:e+(b.isPacked?\"\":\"/..\")+\"/images\"});b.ElementJax=g.Subclass({Init:function(i,h){return this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null,originalText:\"\",mimeType:\"\",sourceMenuTitle:[\"MathMLcode\",\"MathML Code\"],Text:function(i,j){var h=this.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=this.STATE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.UPDATE;return c.Reprocess(h,i)},Update:function(h){return this.Rerender(h)},Rerender:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.OUTPUT;return c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post([\"Remove Math\",this.inputID]);this.Detach()}},needsUpdate:function(){return b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){return document.getElementById(this.inputID)},Attach:function(i,j){var h=i.MathJax.elementJax;if(i.MathJax.state===this.STATE.UPDATE){h.Clone(this)}else{h=i.MathJax.elementJax=this;if(i.id){this.inputID=i.id}else{i.id=this.inputID=b.ElementJax.GetID();this.newID=1}}h.originalText=b.HTML.getScript(i);h.inputJax=j;if(h.root){h.root.inputID=h.inputID}return h},Detach:function(){var h=this.SourceElement();if(!h){return}try{delete h.MathJax}catch(i){h.MathJax=null}if(this.newID){h.id=\"\"}},Clone:function(h){var i;for(i in this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])===\"undefined\"&&i!==\"newID\"){delete this[i]}}for(i in h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])===\"undefined\"||(this[i]!==h[i]&&i!==\"inputID\")){this[i]=h[i]}}}},{id:\"ElementJax\",version:\"2.2\",directory:g.directory+\"/element\",extensionDir:g.extensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:function(){this.ID++;return\"MathJax-Element-\"+this.ID},Subclass:function(){var h=g.Subclass.apply(this,arguments);h.loadComplete=this.prototype.loadComplete;return h}});b.ElementJax.prototype.STATE=b.ElementJax.STATE;b.OutputJax.Error={id:\"Error\",version:\"2.2\",config:{},ContextMenu:function(){return b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Event,arguments)},Mousedown:function(){return b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.Event,arguments)},getJaxFromMath:function(h){return(h.nextSibling.MathJax||{}).error},Jax:function(j,i){var h=MathJax.Hub.inputJax[i.type.replace(/ *;(.|\\s)*/,\"\")];return{inputJax:(h||{id:\"Error\"}).id,outputJax:\"Error\",sourceMenuTitle:[\"ErrorMessage\",\"Error Message\"],sourceMenuFormat:\"Error\",originalText:MathJax.HTML.getScript(i),errorText:j}}};b.InputJax.Error={id:\"Error\",version:\"2.2\",config:{},sourceMenuTitle:[\"OriginalForm\",\"Original Form\"]}})(\"MathJax\");(function(l){var f=window[l];if(!f){f=window[l]={}}var c=f.Hub;var q=c.Startup;var u=c.config;var e=document.getElementsByTagName(\"head\")[0];if(!e){e=document.childNodes[0]}var b=(document.documentElement||document).getElementsByTagName(\"script\");var d=new RegExp(\"(^|/)\"+l+\"\\\\.js(\\\\?.*)?$\");for(var o=b.length-1;o>=0;o--){if((b[o].src||\"\").match(d)){q.script=b[o].innerHTML;if(RegExp.$2){var r=RegExp.$2.substr(1).split(/\\&/);for(var n=0,h=r.length;n<h;n++){var k=r[n].match(/(.*)=(.*)/);if(k){q.params[unescape(k[1])]=unescape(k[2])}}}u.root=b[o].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,\"\");break}}f.Ajax.config=u;var a={isMac:(navigator.platform.substr(0,3)===\"Mac\"),isPC:(navigator.platform.substr(0,3)===\"Win\"),isMSIE:(window.ActiveXObject!=null&&window.clipboardData!=null),isFirefox:(navigator.userAgent.match(/Gecko/)!=null&&navigator.userAgent.match(/KHTML/)==null),isSafari:(navigator.userAgent.match(/ (Apple)?WebKit\\//)!=null&&(!window.chrome||window.chrome.loadTimes==null)),isChrome:(window.chrome!=null&&window.chrome.loadTimes!=null),isOpera:(window.opera!=null&&window.opera.version!=null),isKonqueror:(window.hasOwnProperty&&window.hasOwnProperty(\"konqueror\")&&navigator.vendor==\"KDE\"),versionAtLeast:function(x){var w=(this.version).split(\".\");x=(new String(x)).split(\".\");for(var y=0,j=x.length;y<j;y++){if(w[y]!=x[y]){return parseInt(w[y]||\"0\")>=parseInt(x[y])}}return true},Select:function(j){var i=j[c.Browser];if(i){return i(c.Browser)}return null}};var g=navigator.userAgent.replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\").replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\").replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");c.Browser=c.Insert(c.Insert(new String(\"Unknown\"),{version:\"0.0\"}),a);for(var t in a){if(a.hasOwnProperty(t)){if(a[t]&&t.substr(0,2)===\"is\"){t=t.slice(2);if(t===\"Mac\"||t===\"PC\"){continue}c.Browser=c.Insert(new String(t),a);var p=new RegExp(\".*(Version)/((?:\\\\d+\\\\.)+\\\\d+)|.*(\"+t+\")\"+(t==\"MSIE\"?\" \":\"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");var s=p.exec(g)||[\"\",\"\",\"\",\"unknown\",\"0.0\"];c.Browser.name=(s[1]==\"Version\"?t:(s[3]||s[5]));c.Browser.version=s[2]||s[4]||s[6];break}}}c.Browser.Select({Safari:function(j){var i=parseInt((String(j.version).split(\".\"))[0]);if(i>85){j.webkit=j.version}if(i>=534){j.version=\"5.1\"}else{if(i>=533){j.version=\"5.0\"}else{if(i>=526){j.version=\"4.0\"}else{if(i>=525){j.version=\"3.1\"}else{if(i>500){j.version=\"3.0\"}else{if(i>400){j.version=\"2.0\"}else{if(i>85){j.version=\"1.0\"}}}}}}}j.isMobile=(navigator.appVersion.match(/Mobile/i)!=null);j.noContextMenu=j.isMobile},Firefox:function(j){if((j.version===\"0.0\"||navigator.userAgent.match(/Firefox/)==null)&&navigator.product===\"Gecko\"){var m=navigator.userAgent.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);if(m){j.version=m[1]}else{var i=(navigator.buildID||navigator.productSub||\"0\").substr(0,8);if(i>=\"20111220\"){j.version=\"9.0\"}else{if(i>=\"20111120\"){j.version=\"8.0\"}else{if(i>=\"20110927\"){j.version=\"7.0\"}else{if(i>=\"20110816\"){j.version=\"6.0\"}else{if(i>=\"20110621\"){j.version=\"5.0\"}else{if(i>=\"20110320\"){j.version=\"4.0\"}else{if(i>=\"20100121\"){j.version=\"3.6\"}else{if(i>=\"20090630\"){j.version=\"3.5\"}else{if(i>=\"20080617\"){j.version=\"3.0\"}else{if(i>=\"20061024\"){j.version=\"2.0\"}}}}}}}}}}}}j.isMobile=(navigator.appVersion.match(/Android/i)!=null||navigator.userAgent.match(/ Fennec\\//)!=null||navigator.userAgent.match(/Mobile/)!=null)},Opera:function(i){i.version=opera.version()},MSIE:function(j){j.isIE9=!!(document.documentMode&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=!j.isIE9||document.documentMode<9;var v=false;try{new ActiveXObject(\"MathPlayer.Factory.1\");j.hasMathPlayer=v=true}catch(m){}try{if(v&&!q.params.NoMathPlayer){var i=document.createElement(\"object\");i.id=\"mathplayer\";i.classid=\"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";document.getElementsByTagName(\"head\")[0].appendChild(i);document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");j.mpNamespace=true;if(document.readyState&&(document.readyState===\"loading\"||document.readyState===\"interactive\")){document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');j.mpImported=true}}else{document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\")}}catch(m){}}});c.Browser.Select(MathJax.Message.browsers);c.queue=f.Callback.Queue();c.queue.Push([\"Post\",q.signal,\"Begin\"],[\"Config\",q],[\"Cookie\",q],[\"Styles\",q],[\"Message\",q],function(){var i=f.Callback.Queue(q.Jax(),q.Extensions());return i.Push({})},[\"Menu\",q],q.onLoad(),function(){MathJax.isReady=true},[\"Typeset\",q],[\"Hash\",q],[\"MenuZoom\",q],[\"Post\",q.signal,\"End\"])})(\"MathJax\")}};\n\n// Exports for component.\nmodule.exports = window.MathJax;\n//@ sourceURL=segmentio-mathjax/MathJax.js"
));
require.register("segmentio-rainbow/index.js", Function("exports, require, module",
"\n/**\n * Dependencies.\n */\n\nvar Rainbow = require('./js/rainbow')\n  , languages = [\n      require('./js/language/c.js'),\n      require('./js/language/coffeescript.js'),\n      require('./js/language/csharp.js'),\n      require('./js/language/css.js'),\n      require('./js/language/d.js'),\n      require('./js/language/generic.js'),\n      require('./js/language/go.js'),\n      require('./js/language/haskell.js'),\n      require('./js/language/html.js'),\n      require('./js/language/java.js'),\n      require('./js/language/javascript.js'),\n      require('./js/language/lua.js'),\n      require('./js/language/php.js'),\n      require('./js/language/python.js'),\n      require('./js/language/r.js'),\n      require('./js/language/ruby.js'),\n      require('./js/language/scheme.js'),\n      require('./js/language/shell.js'),\n      require('./js/language/smalltalk.js')\n    ];\n\n\n/**\n * Extend Rainbow with each language.\n */\n\nfor (var i = 0, settings; settings = languages[i]; i++) {\n  Rainbow.extend.apply(Rainbow, settings);\n}\n\n\n/**\n * Exports.\n */\n\nmodule.exports = Rainbow;//@ sourceURL=segmentio-rainbow/index.js"
));
require.register("segmentio-rainbow/js/rainbow.js", Function("exports, require, module",
"/**\n * Copyright 2013 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Rainbow is a simple code syntax highlighter\n *\n * @preserve @version 1.2\n * @url rainbowco.de\n */\nmodule.exports = (function() {\n\n    /**\n     * array of replacements to process at the end\n     *\n     * @type {Object}\n     */\n    var replacements = {},\n\n        /**\n         * an array of start and end positions of blocks to be replaced\n         *\n         * @type {Object}\n         */\n        replacement_positions = {},\n\n        /**\n         * an array of the language patterns specified for each language\n         *\n         * @type {Object}\n         */\n        language_patterns = {},\n\n        /**\n         * an array of languages and whether they should bypass the default patterns\n         *\n         * @type {Object}\n         */\n        bypass_defaults = {},\n\n        /**\n         * processing level\n         *\n         * replacements are stored at this level so if there is a sub block of code\n         * (for example php inside of html) it runs at a different level\n         *\n         * @type {number}\n         */\n        CURRENT_LEVEL = 0,\n\n        /**\n         * constant used to refer to the default language\n         *\n         * @type {number}\n         */\n        DEFAULT_LANGUAGE = 0,\n\n        /**\n         * used as counters so we can selectively call setTimeout\n         * after processing a certain number of matches/replacements\n         *\n         * @type {number}\n         */\n        match_counter = 0,\n\n        /**\n         * @type {number}\n         */\n        replacement_counter = 0,\n\n        /**\n         * @type {null|string}\n         */\n        global_class,\n\n        /**\n         * @type {null|Function}\n         */\n        onHighlight;\n\n    /**\n     * cross browser get attribute for an element\n     *\n     * @see http://stackoverflow.com/questions/3755227/cross-browser-javascript-getattribute-method\n     *\n     * @param {Node} el\n     * @param {string} attr     attribute you are trying to get\n     * @returns {string|number}\n     */\n    function _attr(el, attr, attrs, i) {\n        var result = (el.getAttribute && el.getAttribute(attr)) || 0;\n\n        if (!result) {\n            attrs = el.attributes;\n\n            for (i = 0; i < attrs.length; ++i) {\n                if (attrs[i].nodeName === attr) {\n                    return attrs[i].nodeValue;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * adds a class to a given code block\n     *\n     * @param {Element} el\n     * @param {string} class_name   class name to add\n     * @returns void\n     */\n    function _addClass(el, class_name) {\n        el.className += el.className ? ' ' + class_name : class_name;\n    }\n\n    /**\n     * checks if a block has a given class\n     *\n     * @param {Element} el\n     * @param {string} class_name   class name to check for\n     * @returns {boolean}\n     */\n    function _hasClass(el, class_name) {\n        return (' ' + el.className + ' ').indexOf(' ' + class_name + ' ') > -1;\n    }\n\n    /**\n     * gets the language for this block of code\n     *\n     * @param {Element} block\n     * @returns {string|null}\n     */\n    function _getLanguageForBlock(block) {\n\n        // if this doesn't have a language but the parent does then use that\n        // this means if for example you have: <pre data-language=\"php\">\n        // with a bunch of <code> blocks inside then you do not have\n        // to specify the language for each block\n        var language = _attr(block, 'data-language') || _attr(block.parentNode, 'data-language');\n\n        // this adds support for specifying language via a css class\n        // you can use the Google Code Prettify style: <pre class=\"lang-php\">\n        // or the HTML5 style: <pre><code class=\"language-php\">\n        if (!language) {\n            var pattern = /\\blang(?:uage)?-(\\w+)/,\n                match = block.className.match(pattern) || block.parentNode.className.match(pattern);\n\n            if (match) {\n                language = match[1];\n            }\n        }\n\n        return language;\n    }\n\n    /**\n     * makes sure html entities are always used for tags\n     *\n     * @param {string} code\n     * @returns {string}\n     */\n    function _htmlEntities(code) {\n        return code.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/&(?![\\w\\#]+;)/g, '&amp;');\n    }\n\n    /**\n     * determines if a new match intersects with an existing one\n     *\n     * @param {number} start1    start position of existing match\n     * @param {number} end1      end position of existing match\n     * @param {number} start2    start position of new match\n     * @param {number} end2      end position of new match\n     * @returns {boolean}\n     */\n    function _intersects(start1, end1, start2, end2) {\n        if (start2 >= start1 && start2 < end1) {\n            return true;\n        }\n\n        return end2 > start1 && end2 < end1;\n    }\n\n    /**\n     * determines if two different matches have complete overlap with each other\n     *\n     * @param {number} start1   start position of existing match\n     * @param {number} end1     end position of existing match\n     * @param {number} start2   start position of new match\n     * @param {number} end2     end position of new match\n     * @returns {boolean}\n     */\n    function _hasCompleteOverlap(start1, end1, start2, end2) {\n\n        // if the starting and end positions are exactly the same\n        // then the first one should stay and this one should be ignored\n        if (start2 == start1 && end2 == end1) {\n            return false;\n        }\n\n        return start2 <= start1 && end2 >= end1;\n    }\n\n    /**\n     * determines if the match passed in falls inside of an existing match\n     * this prevents a regex pattern from matching inside of a bigger pattern\n     *\n     * @param {number} start - start position of new match\n     * @param {number} end - end position of new match\n     * @returns {boolean}\n     */\n    function _matchIsInsideOtherMatch(start, end) {\n        for (var key in replacement_positions[CURRENT_LEVEL]) {\n            key = parseInt(key, 10);\n\n            // if this block completely overlaps with another block\n            // then we should remove the other block and return false\n            if (_hasCompleteOverlap(key, replacement_positions[CURRENT_LEVEL][key], start, end)) {\n                delete replacement_positions[CURRENT_LEVEL][key];\n                delete replacements[CURRENT_LEVEL][key];\n            }\n\n            if (_intersects(key, replacement_positions[CURRENT_LEVEL][key], start, end)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * takes a string of code and wraps it in a span tag based on the name\n     *\n     * @param {string} name     name of the pattern (ie keyword.regex)\n     * @param {string} code     block of code to wrap\n     * @returns {string}\n     */\n    function _wrapCodeInSpan(name, code) {\n        return '<span class=\"' + name.replace(/\\./g, ' ') + (global_class ? ' ' + global_class : '') + '\">' + code + '</span>';\n    }\n\n    /**\n     * finds out the position of group match for a regular expression\n     *\n     * @see http://stackoverflow.com/questions/1985594/how-to-find-index-of-groups-in-match\n     *\n     * @param {Object} match\n     * @param {number} group_number\n     * @returns {number}\n     */\n    function _indexOfGroup(match, group_number) {\n        var index = 0,\n            i;\n\n        for (i = 1; i < group_number; ++i) {\n            if (match[i]) {\n                index += match[i].length;\n            }\n        }\n\n        return index;\n    }\n\n    /**\n     * matches a regex pattern against a block of code\n     * finds all matches that should be processed and stores the positions\n     * of where they should be replaced within the string\n     *\n     * this is where pretty much all the work is done but it should not\n     * be called directly\n     *\n     * @param {RegExp} pattern\n     * @param {string} code\n     * @returns void\n     */\n    function _processPattern(regex, pattern, code, callback)\n    {\n        var match = regex.exec(code);\n\n        if (!match) {\n            return callback();\n        }\n\n        ++match_counter;\n\n        // treat match 0 the same way as name\n        if (!pattern['name'] && typeof pattern['matches'][0] == 'string') {\n            pattern['name'] = pattern['matches'][0];\n            delete pattern['matches'][0];\n        }\n\n        var replacement = match[0],\n            start_pos = match.index,\n            end_pos = match[0].length + start_pos,\n\n            /**\n             * callback to process the next match of this pattern\n             */\n            processNext = function() {\n                var nextCall = function() {\n                    _processPattern(regex, pattern, code, callback);\n                };\n\n                // every 100 items we process let's call set timeout\n                // to let the ui breathe a little\n                return match_counter % 100 > 0 ? nextCall() : setTimeout(nextCall, 0);\n            };\n\n        // if this is not a child match and it falls inside of another\n        // match that already happened we should skip it and continue processing\n        if (_matchIsInsideOtherMatch(start_pos, end_pos)) {\n            return processNext();\n        }\n\n        /**\n         * callback for when a match was successfully processed\n         *\n         * @param {string} replacement\n         * @returns void\n         */\n        var onMatchSuccess = function(replacement) {\n                // if this match has a name then wrap it in a span tag\n                if (pattern['name']) {\n                    replacement = _wrapCodeInSpan(pattern['name'], replacement);\n                }\n\n                // console.log('LEVEL', CURRENT_LEVEL, 'replace', match[0], 'with', replacement, 'at position', start_pos, 'to', end_pos);\n\n                // store what needs to be replaced with what at this position\n                if (!replacements[CURRENT_LEVEL]) {\n                    replacements[CURRENT_LEVEL] = {};\n                    replacement_positions[CURRENT_LEVEL] = {};\n                }\n\n                replacements[CURRENT_LEVEL][start_pos] = {\n                    'replace': match[0],\n                    'with': replacement\n                };\n\n                // store the range of this match so we can use it for comparisons\n                // with other matches later\n                replacement_positions[CURRENT_LEVEL][start_pos] = end_pos;\n\n                // process the next match\n                processNext();\n            },\n\n            // if this pattern has sub matches for different groups in the regex\n            // then we should process them one at a time by rerunning them through\n            // this function to generate the new replacement\n            //\n            // we run through them backwards because the match position of earlier\n            // matches will not change depending on what gets replaced in later\n            // matches\n            group_keys = keys(pattern['matches']),\n\n            /**\n             * callback for processing a sub group\n             *\n             * @param {number} i\n             * @param {Array} group_keys\n             * @param {Function} callback\n             */\n            processGroup = function(i, group_keys, callback) {\n                if (i >= group_keys.length) {\n                    return callback(replacement);\n                }\n\n                var processNextGroup = function() {\n                        processGroup(++i, group_keys, callback);\n                    },\n                    block = match[group_keys[i]];\n\n                // if there is no match here then move on\n                if (!block) {\n                    return processNextGroup();\n                }\n\n                var group = pattern['matches'][group_keys[i]],\n                    language = group['language'],\n\n                    /**\n                     * process group is what group we should use to actually process\n                     * this match group\n                     *\n                     * for example if the subgroup pattern looks like this\n                     * 2: {\n                     *     'name': 'keyword',\n                     *     'pattern': /true/g\n                     * }\n                     *\n                     * then we use that as is, but if it looks like this\n                     *\n                     * 2: {\n                     *     'name': 'keyword',\n                     *     'matches': {\n                     *          'name': 'special',\n                     *          'pattern': /whatever/g\n                     *      }\n                     * }\n                     *\n                     * we treat the 'matches' part as the pattern and keep\n                     * the name around to wrap it with later\n                     */\n                    process_group = group['name'] && group['matches'] ? group['matches'] : group,\n\n                    /**\n                     * takes the code block matched at this group, replaces it\n                     * with the highlighted block, and optionally wraps it with\n                     * a span with a name\n                     *\n                     * @param {string} block\n                     * @param {string} replace_block\n                     * @param {string|null} match_name\n                     */\n                    _replaceAndContinue = function(block, replace_block, match_name) {\n                        replacement = _replaceAtPosition(_indexOfGroup(match, group_keys[i]), block, match_name ? _wrapCodeInSpan(match_name, replace_block) : replace_block, replacement);\n                        processNextGroup();\n                    };\n\n                // if this is a sublanguage go and process the block using that language\n                if (language) {\n                    return _highlightBlockForLanguage(block, language, function(code) {\n                        _replaceAndContinue(block, code);\n                    });\n                }\n\n                // if this is a string then this match is directly mapped to selector\n                // so all we have to do is wrap it in a span and continue\n                if (typeof group === 'string') {\n                    return _replaceAndContinue(block, block, group);\n                }\n\n                // the process group can be a single pattern or an array of patterns\n                // _processCodeWithPatterns always expects an array so we convert it here\n                _processCodeWithPatterns(block, process_group.length ? process_group : [process_group], function(code) {\n                    _replaceAndContinue(block, code, group['matches'] ? group['name'] : 0);\n                });\n            };\n\n        processGroup(0, group_keys, onMatchSuccess);\n    }\n\n    /**\n     * should a language bypass the default patterns?\n     *\n     * if you call Rainbow.extend() and pass true as the third argument\n     * it will bypass the defaults\n     */\n    function _bypassDefaultPatterns(language)\n    {\n        return bypass_defaults[language];\n    }\n\n    /**\n     * returns a list of regex patterns for this language\n     *\n     * @param {string} language\n     * @returns {Array}\n     */\n    function _getPatternsForLanguage(language) {\n        var patterns = language_patterns[language] || [],\n            default_patterns = language_patterns[DEFAULT_LANGUAGE] || [];\n\n        return _bypassDefaultPatterns(language) ? patterns : patterns.concat(default_patterns);\n    }\n\n    /**\n     * substring replace call to replace part of a string at a certain position\n     *\n     * @param {number} position         the position where the replacement should happen\n     * @param {string} replace          the text we want to replace\n     * @param {string} replace_with     the text we want to replace it with\n     * @param {string} code             the code we are doing the replacing in\n     * @returns {string}\n     */\n    function _replaceAtPosition(position, replace, replace_with, code) {\n        var sub_string = code.substr(position);\n        return code.substr(0, position) + sub_string.replace(replace, replace_with);\n    }\n\n   /**\n     * sorts an object by index descending\n     *\n     * @param {Object} object\n     * @return {Array}\n     */\n    function keys(object) {\n        var locations = [],\n            replacement,\n            pos;\n\n        for(var location in object) {\n            if (object.hasOwnProperty(location)) {\n                locations.push(location);\n            }\n        }\n\n        // numeric descending\n        return locations.sort(function(a, b) {\n            return b - a;\n        });\n    }\n\n    /**\n     * processes a block of code using specified patterns\n     *\n     * @param {string} code\n     * @param {Array} patterns\n     * @returns void\n     */\n    function _processCodeWithPatterns(code, patterns, callback)\n    {\n        // we have to increase the level here so that the\n        // replacements will not conflict with each other when\n        // processing sub blocks of code\n        ++CURRENT_LEVEL;\n\n        // patterns are processed one at a time through this function\n        function _workOnPatterns(patterns, i)\n        {\n            // still have patterns to process, keep going\n            if (i < patterns.length) {\n                return _processPattern(patterns[i]['pattern'], patterns[i], code, function() {\n                    _workOnPatterns(patterns, ++i);\n                });\n            }\n\n            // we are done processing the patterns\n            // process the replacements and update the DOM\n            _processReplacements(code, function(code) {\n\n                // when we are done processing replacements\n                // we are done at this level so we can go back down\n                delete replacements[CURRENT_LEVEL];\n                delete replacement_positions[CURRENT_LEVEL];\n                --CURRENT_LEVEL;\n                callback(code);\n            });\n        }\n\n        _workOnPatterns(patterns, 0);\n    }\n\n    /**\n     * process replacements in the string of code to actually update the markup\n     *\n     * @param {string} code         the code to process replacements in\n     * @param {Function} onComplete   what to do when we are done processing\n     * @returns void\n     */\n    function _processReplacements(code, onComplete) {\n\n        /**\n         * processes a single replacement\n         *\n         * @param {string} code\n         * @param {Array} positions\n         * @param {number} i\n         * @param {Function} onComplete\n         * @returns void\n         */\n        function _processReplacement(code, positions, i, onComplete) {\n            if (i < positions.length) {\n                ++replacement_counter;\n                var pos = positions[i],\n                    replacement = replacements[CURRENT_LEVEL][pos];\n                code = _replaceAtPosition(pos, replacement['replace'], replacement['with'], code);\n\n                // process next function\n                var next = function() {\n                    _processReplacement(code, positions, ++i, onComplete);\n                };\n\n                // use a timeout every 250 to not freeze up the UI\n                return replacement_counter % 250 > 0 ? next() : setTimeout(next, 0);\n            }\n\n            onComplete(code);\n        }\n\n        var string_positions = keys(replacements[CURRENT_LEVEL]);\n        _processReplacement(code, string_positions, 0, onComplete);\n    }\n\n    /**\n     * takes a string of code and highlights it according to the language specified\n     *\n     * @param {string} code\n     * @param {string} language\n     * @param {Function} onComplete\n     * @returns void\n     */\n    function _highlightBlockForLanguage(code, language, onComplete) {\n        var patterns = _getPatternsForLanguage(language);\n        _processCodeWithPatterns(_htmlEntities(code), patterns, onComplete);\n    }\n\n    /**\n     * highlight an individual code block\n     *\n     * @param {Array} code_blocks\n     * @param {number} i\n     * @returns void\n     */\n    function _highlightCodeBlock(code_blocks, i, onComplete) {\n        if (i < code_blocks.length) {\n            var block = code_blocks[i],\n                language = _getLanguageForBlock(block);\n\n            if (!_hasClass(block, 'rainbow') && language) {\n                language = language.toLowerCase();\n\n                _addClass(block, 'rainbow');\n\n                return _highlightBlockForLanguage(block.innerHTML, language, function(code) {\n                    block.innerHTML = code;\n\n                    // reset the replacement arrays\n                    replacements = {};\n                    replacement_positions = {};\n\n                    // if you have a listener attached tell it that this block is now highlighted\n                    if (onHighlight) {\n                        onHighlight(block, language);\n                    }\n\n                    // process the next block\n                    setTimeout(function() {\n                        _highlightCodeBlock(code_blocks, ++i, onComplete);\n                    }, 0);\n                });\n            }\n            return _highlightCodeBlock(code_blocks, ++i, onComplete);\n        }\n\n        if (onComplete) {\n            onComplete();\n        }\n    }\n\n    /**\n     * start highlighting all the code blocks\n     *\n     * @returns void\n     */\n    function _highlight(node, onComplete) {\n\n        // the first argument can be an Event or a DOM Element\n        // I was originally checking instanceof Event but that makes it break\n        // when using mootools\n        //\n        // @see https://github.com/ccampbell/rainbow/issues/32\n        //\n        node = node && typeof node.getElementsByTagName == 'function' ? node : document;\n\n        var pre_blocks = node.getElementsByTagName('pre'),\n            code_blocks = node.getElementsByTagName('code'),\n            i,\n            final_pre_blocks = [],\n            final_code_blocks = [];\n\n        // first loop through all pre blocks to find which ones to highlight\n        // also strip whitespace\n        for (i = 0; i < pre_blocks.length; ++i) {\n\n            // strip whitespace around code tags when they are inside of a pre tag\n            // this makes the themes look better because you can't accidentally\n            // add extra linebreaks at the start and end\n            //\n            // when the pre tag contains a code tag then strip any extra whitespace\n            // for example\n            // <pre>\n            //      <code>var foo = true;</code>\n            // </pre>\n            //\n            // will become\n            // <pre><code>var foo = true;</code></pre>\n            //\n            // if you want to preserve whitespace you can use a pre tag on its own\n            // without a code tag inside of it\n            if (pre_blocks[i].getElementsByTagName('code').length) {\n                pre_blocks[i].innerHTML = pre_blocks[i].innerHTML.replace(/^\\s+/, '').replace(/\\s+$/, '');\n                continue;\n            }\n\n            // if the pre block has no code blocks then we are going to want to\n            // process it directly\n            final_pre_blocks.push(pre_blocks[i]);\n        }\n\n        // @see http://stackoverflow.com/questions/2735067/how-to-convert-a-dom-node-list-to-an-array-in-javascript\n        // we are going to process all <code> blocks\n        for (i = 0; i < code_blocks.length; ++i) {\n            final_code_blocks.push(code_blocks[i]);\n        }\n\n        _highlightCodeBlock(final_code_blocks.concat(final_pre_blocks), 0, onComplete);\n    }\n\n    /**\n     * public methods\n     */\n    return {\n\n        /**\n         * extends the language pattern matches\n         *\n         * @param {*} language     name of language\n         * @param {*} patterns      array of patterns to add on\n         * @param {boolean|null} bypass      if true this will bypass the default language patterns\n         */\n        extend: function(language, patterns, bypass) {\n\n            // if there is only one argument then we assume that we want to\n            // extend the default language rules\n            if (arguments.length == 1) {\n                patterns = language;\n                language = DEFAULT_LANGUAGE;\n            }\n\n            bypass_defaults[language] = bypass;\n            language_patterns[language] = patterns.concat(language_patterns[language] || []);\n        },\n\n        /**\n         * call back to let you do stuff in your app after a piece of code has been highlighted\n         *\n         * @param {Function} callback\n         */\n        onHighlight: function(callback) {\n            onHighlight = callback;\n        },\n\n        /**\n         * method to set a global class that will be applied to all spans\n         *\n         * @param {string} class_name\n         */\n        addClass: function(class_name) {\n            global_class = class_name;\n        },\n\n        /**\n         * starts the magic rainbow\n         *\n         * @returns void\n         */\n        color: function() {\n\n            // if you want to straight up highlight a string you can pass the string of code,\n            // the language, and a callback function\n            if (typeof arguments[0] == 'string') {\n                return _highlightBlockForLanguage(arguments[0], arguments[1], arguments[2]);\n            }\n\n            // if you pass a callback function then we rerun the color function\n            // on all the code and call the callback function on complete\n            if (typeof arguments[0] == 'function') {\n                return _highlight(0, arguments[0]);\n            }\n\n            // otherwise we use whatever node you passed in with an optional\n            // callback function as the second parameter\n            _highlight(arguments[0], arguments[1]);\n        }\n    };\n}) ();//@ sourceURL=segmentio-rainbow/js/rainbow.js"
));
require.register("segmentio-rainbow/js/language/c.js", Function("exports, require, module",
"/**\n * C patterns\n *\n * @author Daniel Holden\n * @author Craig Campbell\n * @version 1.0.7\n */\nmodule.exports = ['c', [\n    {\n        'name': 'meta.preprocessor',\n        'matches': {\n            1: [\n                {\n                    'matches': {\n                        1: 'keyword.define',\n                        2: 'entity.name'\n                    },\n                    'pattern': /(\\w+)\\s(\\w+)\\b/g\n                },\n                {\n                    'name': 'keyword.define',\n                    'pattern': /endif/g\n                },\n                {\n                    'name': 'constant.numeric',\n                    'pattern': /\\d+/g\n                },\n                {\n                    'matches': {\n                        1: 'keyword.include',\n                        2: 'string'\n                    },\n                    'pattern': /(include)\\s(.*?)$/g\n                }\n            ]\n        },\n        'pattern': /\\#([\\S\\s]*?)$/gm\n    },\n    {\n        'name': 'keyword',\n        'pattern': /\\b(do|goto|typedef)\\b/g\n    },\n    {\n        'name': 'entity.label',\n        'pattern': /\\w+:/g\n    },\n    {\n        'matches': {\n            1: 'storage.type',\n            3: 'storage.type',\n            4: 'entity.name.function'\n        },\n        'pattern': /\\b((un)?signed|const)? ?(void|char|short|int|long|float|double)\\*? +((\\w+)(?= ?\\())?/g\n    },\n    {\n        'matches': {\n            2: 'entity.name.function'\n        },\n        'pattern': /(\\w|\\*) +((\\w+)(?= ?\\())/g\n    },\n    {\n        'name': 'storage.modifier',\n        'pattern': /\\b(static|extern|auto|register|volatile|inline)\\b/g\n    },\n    {\n        'name': 'support.type',\n        'pattern': /\\b(struct|union|enum)\\b/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/c.js"
));
require.register("segmentio-rainbow/js/language/coffeescript.js", Function("exports, require, module",
"/**\n * Coffeescript patterns\n *\n * @author Craig Campbell\n * @version 1.0\n */\nmodule.exports = ['coffeescript', [\n    {\n        'name': 'comment.block',\n        'pattern': /(\\#{3})[\\s\\S]*\\1/gm\n    },\n    {\n        'name': 'string.block',\n        'pattern': /('{3}|\"{3})[\\s\\S]*\\1/gm\n    },\n\n    /**\n     * multiline regex with comments\n     */\n    {\n        'name': 'string.regex',\n        'matches': {\n            2: {\n                'name': 'comment',\n                'pattern': /\\#(.*?)\\n/g\n            }\n        },\n        'pattern': /(\\/{3})([\\s\\S]*)\\1/gm\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\b(in|when|is|isnt|of|not|unless|until|super)(?=\\b)/gi\n    },\n    {\n        'name': 'keyword.operator',\n        'pattern': /\\?/g\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /\\b(undefined|yes|on|no|off)\\b/g\n    },\n    {\n        'name': 'keyword.variable.coffee',\n        'pattern': /@(\\w+)/gi\n    },\n\n    /**\n     * reset global keywards from generic\n     */\n    {\n        'name': 'reset',\n        'pattern': /object|class|print/gi\n    },\n\n    /**\n     * named function\n     */\n    {\n        'matches' : {\n            1: 'entity.name.function',\n            2: 'keyword.operator',\n            3: {\n                    'name': 'function.argument.coffee',\n                    'pattern': /([\\@\\w]+)/g\n            },\n            4: 'keyword.function'\n        },\n        'pattern': /(\\w+)\\s{0,}(=|:)\\s{0,}\\((.*?)((-|=)&gt;)/gi\n    },\n\n    /**\n     * anonymous function\n     */\n    {\n        'matches': {\n            1: {\n                    'name': 'function.argument.coffee',\n                    'pattern': /([\\@\\w]+)/g\n            },\n            2: 'keyword.function'\n        },\n        'pattern': /\\s\\((.*?)\\)\\s{0,}((-|=)&gt;)/gi\n    },\n\n    /**\n     * direct function no arguments\n     */\n    {\n        'matches' : {\n            1: 'entity.name.function',\n            2: 'keyword.operator',\n            3: 'keyword.function'\n        },\n        'pattern': /(\\w+)\\s{0,}(=|:)\\s{0,}((-|=)&gt;)/gi\n    },\n\n    /**\n     * class definitions\n     */\n    {\n        'matches': {\n            1: 'storage.class',\n            2: 'entity.name.class',\n            3: 'storage.modifier.extends',\n            4: 'entity.other.inherited-class'\n        },\n        'pattern': /\\b(class)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?\\b/g\n    },\n\n    /**\n     * object instantiation\n     */\n    {\n        'matches': {\n            1: 'keyword.new',\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /\\b(new)\\s(.*?)(?=\\s)/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/coffeescript.js"
));
require.register("segmentio-rainbow/js/language/csharp.js", Function("exports, require, module",
"/**\n* C# patterns\n*\n* @author Dan Stewart\n* @version 1.0.1\n*/\nmodule.exports = ['csharp', [\n\t{\n        // @see http://msdn.microsoft.com/en-us/library/23954zh5.aspx\n\t\t'name': 'constant',\n\t\t'pattern': /\\b(false|null|true)\\b/g\n\t},\n\t{\n\t\t// @see http://msdn.microsoft.com/en-us/library/x53a06bb%28v=vs.100%29.aspx\n\t\t// Does not support putting an @ in front of a keyword which makes it not a keyword anymore.\n\t\t'name': 'keyword',\n\t\t'pattern': /\\b(abstract|add|alias|ascending|as|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|double|do|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|foreach|for|from|get|global|goto|group|if|implicit|int|interface|internal|into|in|is|join|let|lock|long|namespace|new|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|try|typeof|uint|unchecked|ulong|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/g\n\t},\n    {\n        'matches': {\n            1: 'keyword',\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /(typeof)\\s([^\\$].*?)(\\)|;)/g\n    },\n    {\n        'matches': {\n            1: 'keyword.namespace',\n            2: {\n                'name': 'support.namespace',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /\\b(namespace)\\s(.*?);/g\n    },\n    {\n        'matches': {\n            1: 'storage.modifier',\n            2: 'storage.class',\n            3: 'entity.name.class',\n            4: 'storage.modifier.extends',\n            5: 'entity.other.inherited-class'\n        },\n        'pattern': /\\b(abstract|sealed)?\\s?(class)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?\\s?\\{?(\\n|\\})/g\n    },\n    {\n        'name': 'keyword.static',\n        'pattern': /\\b(static)\\b/g\n    },\n    {\n        'matches': {\n            1: 'keyword.new',\n\t\t\t2: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            }\n\n        },\n        'pattern': /\\b(new)\\s([^\\$].*?)(?=\\)|\\(|;|&)/g\n    },\n\t{\n\t\t'name': 'string',\n\t\t'pattern': /(\")(.*?)\\1/g\n\t},\n\t{\n\t\t'name': 'integer',\n\t\t'pattern': /\\b(0x[\\da-f]+|\\d+)\\b/g\n\t},\n\t{\n        'name': 'comment',\n        'pattern': /\\/\\*[\\s\\S]*?\\*\\/|(\\/\\/)[\\s\\S]*?$/gm\n    },\n\t{\n\t\t'name': 'operator',\n\t\t// @see http://msdn.microsoft.com/en-us/library/6a71f45d%28v=vs.100%29.aspx\n\t\t// ++ += + -- -= - <<= << <= => >>= >> >= != ! ~ ^ || && &= & ?? :: : *= * |= %= |= == =\n\t\t'pattern': /(\\+\\+|\\+=|\\+|--|-=|-|&lt;&lt;=|&lt;&lt;|&lt;=|=&gt;|&gt;&gt;=|&gt;&gt;|&gt;=|!=|!|~|\\^|\\|\\||&amp;&amp;|&amp;=|&amp;|\\?\\?|::|:|\\*=|\\*|\\/=|%=|\\|=|==|=)/g\n\t},\n    {\n\t\t// @see http://msdn.microsoft.com/en-us/library/ed8yd1ha%28v=vs.100%29.aspx\n\t\t'name': 'preprocessor',\n\t\t'pattern': /(\\#if|\\#else|\\#elif|\\#endif|\\#define|\\#undef|\\#warning|\\#error|\\#line|\\#region|\\#endregion|\\#pragma)[\\s\\S]*?$/gm\n\t}\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/csharp.js"
));
require.register("segmentio-rainbow/js/language/css.js", Function("exports, require, module",
"/**\n * CSS patterns\n *\n * @author Craig Campbell\n * @version 1.0.8\n */\nmodule.exports = ['css', [\n    {\n        'name': 'comment',\n        'pattern': /\\/\\*[\\s\\S]*?\\*\\//gm\n    },\n    {\n        'name': 'constant.hex-color',\n        'pattern': /#([a-f0-9]{3}|[a-f0-9]{6})(?=;|\\s|,|\\))/gi\n    },\n    {\n        'matches': {\n            1: 'constant.numeric',\n            2: 'keyword.unit'\n        },\n        'pattern': /(\\d+)(px|em|cm|s|%)?/g\n    },\n    {\n        'name': 'string',\n        'pattern': /('|\")(.*?)\\1/g\n    },\n    {\n        'name': 'support.css-property',\n        'matches': {\n            1: 'support.vendor-prefix'\n        },\n        'pattern': /(-o-|-moz-|-webkit-|-ms-)?[\\w-]+(?=\\s?:)(?!.*\\{)/g\n    },\n    {\n        'matches': {\n            1: [\n                {\n                    'name': 'entity.name.sass',\n                    'pattern': /&amp;/g\n                },\n                {\n                    'name': 'direct-descendant',\n                    'pattern': /&gt;/g\n                },\n                {\n                    'name': 'entity.name.class',\n                    'pattern': /\\.[\\w\\-_]+/g\n                },\n                {\n                    'name': 'entity.name.id',\n                    'pattern': /\\#[\\w\\-_]+/g\n                },\n                {\n                    'name': 'entity.name.pseudo',\n                    'pattern': /:[\\w\\-_]+/g\n                },\n                {\n                    'name': 'entity.name.tag',\n                    'pattern': /\\w+/g\n                }\n            ]\n        },\n        'pattern': /([\\w\\ ,:\\.\\#\\&\\;\\-_]+)(?=.*\\{)/g\n    },\n    {\n        'matches': {\n            2: 'support.vendor-prefix',\n            3: 'support.css-value'\n        },\n        'pattern': /(:|,)\\s*(-o-|-moz-|-webkit-|-ms-)?([a-zA-Z-]*)(?=\\b)(?!.*\\{)/g\n    },\n    {\n        'matches': {\n            1: 'support.tag.style',\n            2: [\n                {\n                    'name': 'string',\n                    'pattern': /('|\")(.*?)(\\1)/g\n                },\n                {\n                    'name': 'entity.tag.style',\n                    'pattern': /(\\w+)/g\n                }\n            ],\n            3: 'support.tag.style'\n        },\n        'pattern': /(&lt;\\/?)(style.*?)(&gt;)/g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/css.js"
));
require.register("segmentio-rainbow/js/language/d.js", Function("exports, require, module",
"/**\n* D patterns\n*\n* @author Matthew Brennan Jones\n* @version 1.0.1\n*/\nmodule.exports = ['d', [\n    {\n        'name': 'constant',\n        'pattern': /\\b(false|null|true)\\b/gm\n    },\n    {\n        // http://dlang.org/lex.html\n        'name': 'keyword',\n        'pattern': /\\b(abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|in|inout|int|interface|invariant|ireal|is|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__FILE__|__LINE__|__gshared|__traits|__vector|__parameters)\\b/gm\n    },\n    {\n        'matches': {\n            1: 'keyword',\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/gm\n            }\n        },\n        'pattern': /(typeof)\\s([^\\$].*?)(\\)|;)/gm\n    },\n    {\n        'matches': {\n            1: 'keyword.namespace',\n            2: {\n                'name': 'support.namespace',\n                'pattern': /\\w+/gm\n            }\n        },\n        'pattern': /\\b(namespace)\\s(.*?);/gm\n    },\n    {\n        'matches': {\n            1: 'storage.modifier',\n            2: 'storage.class',\n            3: 'entity.name.class',\n            4: 'storage.modifier.extends',\n            5: 'entity.other.inherited-class'\n        },\n        'pattern': /\\b(abstract|sealed)?\\s?(class)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?\\s?\\{?(\\n|\\})/gm\n    },\n    {\n        'name': 'keyword.static',\n        'pattern': /\\b(static)\\b/gm\n    },\n    {\n        'matches': {\n            1: 'keyword.new',\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/gm\n            }\n\n        },\n        'pattern': /\\b(new)\\s([^\\$].*?)(?=\\)|\\(|;|&)/gm\n    },\n    {\n        'name': 'string',\n        'pattern': /(\"|')(.*?)\\1/gm\n    },\n    {\n        'name': 'integer',\n        'pattern': /\\b(0x[\\da-f]+|\\d+)\\b/gm\n    },\n    {\n        'name': 'comment',\n        'pattern': /\\/\\*[\\s\\S]*?\\*\\/|\\/\\+[\\s\\S]*?\\+\\/|(\\/\\/)[\\s\\S]*?$/gm\n    },\n    {\n        // http://dlang.org/operatoroverloading.html\n        'name': 'operator',\n        //  / /= &= && & |= || | -= -- - += ++ + <= << < <<= <>= <> > >>>= >>= >= >> >>> != !<>= !<> !<= !< !>= !> ! [ ] $ == = *= * %= % ^^= ^= ^^ ^ ~= ~ @ => :\n        'pattern': /(\\/|\\/=|&amp;=|&amp;&amp;|&amp;|\\|=|\\|\\|\\||\\-=|\\-\\-|\\-|\\+=|\\+\\+|\\+|&lt;=|&lt;&lt;|&lt;|&lt;&lt;=|&lt;&gt;=|&lt;&gt;|&gt;|&gt;&gt;&gt;=|&gt;&gt;=|&gt;=|&gt;&gt;|&gt;&gt;&gt;|!=|!&lt;&gt;=|!&lt;&gt;|!&lt;=|!&lt;|!&gt;=|!&gt;|!|[|]|\\$|==|=|\\*=|\\*|%=|%|\\^\\^=|\\^=|\\^\\^|\\^|~=|~|@|=&gt;|\\:)/gm\n    }\n], true];\n\n//@ sourceURL=segmentio-rainbow/js/language/d.js"
));
require.register("segmentio-rainbow/js/language/generic.js", Function("exports, require, module",
"/**\n * Generic language patterns\n *\n * @author Craig Campbell\n * @version 1.0.10\n */\nmodule.exports = [[\n    {\n        'matches': {\n            1: {\n                'name': 'keyword.operator',\n                'pattern': /\\=/g\n            },\n            2: {\n                'name': 'string',\n                'matches': {\n                    'name': 'constant.character.escape',\n                    'pattern': /\\\\('|\"){1}/g\n                }\n            }\n        },\n        'pattern': /(\\(|\\s|\\[|\\=|:)(('|\")([^\\\\\\1]|\\\\.)*?(\\3))/gm\n    },\n    {\n        'name': 'comment',\n        'pattern': /\\/\\*[\\s\\S]*?\\*\\/|(\\/\\/|\\#)[\\s\\S]*?$/gm\n    },\n    {\n        'name': 'constant.numeric',\n        'pattern': /\\b(\\d+(\\.\\d+)?(e(\\+|\\-)?\\d+)?(f|d)?|0x[\\da-f]+)\\b/gi\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\b(and|array|as|b(ool(ean)?|reak)|c(ase|atch|har|lass|on(st|tinue))|d(ef|elete|o(uble)?)|e(cho|lse(if)?|xit|xtends|xcept)|f(inally|loat|or(each)?|unction)|global|if|import|int(eger)?|long|new|object|or|pr(int|ivate|otected)|public|return|self|st(ring|ruct|atic)|switch|th(en|is|row)|try|(un)?signed|var|void|while)(?=\\(|\\b)/gi\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /true|false|null/g\n    },\n    {\n        'name': 'keyword.operator',\n        'pattern': /\\+|\\!|\\-|&(gt|lt|amp);|\\||\\*|\\=/g\n    },\n    {\n        'matches': {\n            1: 'function.call'\n        },\n        'pattern': /(\\w+?)(?=\\()/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'entity.name.function'\n        },\n        'pattern': /(function)\\s(.*?)(?=\\()/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/generic.js"
));
require.register("segmentio-rainbow/js/language/go.js", Function("exports, require, module",
"/**\n * GO Language\n *\n * @author Javier Aguirre\n * @version 1.0\n */\nmodule.exports = ['go', [\n    {\n        'matches': {\n            1: {\n                'name': 'keyword.operator',\n                'pattern': /\\=/g\n            },\n            2: {\n                'name': 'string',\n                'matches': {\n                    'name': 'constant.character.escape',\n                    'pattern': /\\\\(`|\"){1}/g\n                }\n            }\n        },\n        'pattern': /(\\(|\\s|\\[|\\=|:)((`|\")([^\\\\\\1]|\\\\.)*?(\\3))/gm\n    },\n    {\n        'name': 'comment',\n        'pattern': /\\/\\*[\\s\\S]*?\\*\\/|(\\/\\/)[\\s\\S]*?$/gm\n    },\n    {\n        'name': 'constant.numeric',\n        'pattern': /\\b(\\d+(\\.\\d+)?(e(\\+|\\-)?\\d+)?(f|d)?|0x[\\da-f]+)\\b/gi\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\b(break|c(ase|onst|ontinue)|d(efault|efer)|else|fallthrough|for|go(to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)(?=\\(|\\b)/gi\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /true|false|null|string|byte|rune|u?int(8|16|32|64)?|float(32|64)|complex(64|128)/g\n    },\n    {\n        'name': 'keyword.operator',\n        'pattern': /\\+|\\!|\\-|&(gt|lt|amp);|\\||\\*|\\:?=/g\n    },\n    {\n        'matches': {\n            1: 'function.call'\n        },\n        'pattern': /(\\w+?)(?=\\()/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'entity.name.function'\n        },\n        'pattern': /(func)\\s(.*?)(?=\\()/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/go.js"
));
require.register("segmentio-rainbow/js/language/haskell.js", Function("exports, require, module",
"/**\n * Haskell patterns\n *\n * @author Bruno Dias\n * @version 1.0.1\n */\n//TODO: {-# ... #-} stuff...\nmodule.exports = ['haskell', [\n\t///- Comments\n\t{\n\t\t'name': 'comment',\n\t\t'pattern': /\\{\\-\\-[\\s\\S(\\w+)]+[\\-\\-][\\}$]/gm\n\t\t// /\\{\\-{2}[\\s\\S(.*)]+[\\-\\-][\\}$]/gm [multiple lines]\n\t},\n\t{\n\t\t'name': 'comment',\n\t\t'pattern': /\\-\\-(.*)/g\n\t\t// /\\-\\-\\s(.+)$/gm [single]\n\t},\n\t///- End Comments\n\n\t///- Namespace (module)\n\t{\n\t\t'matches': {\n\t\t\t1: 'keyword',\n\t\t\t2: 'support.namespace'\n\t\t},\n\t\t'pattern': /\\b(module)\\s(\\w+)\\s[\\(]?(\\w+)?[\\)?]\\swhere/g\n\t},\n\t///- End Namespace (module)\n\n\t///- Keywords and Operators\n\t{\n\t\t'name': 'keyword.operator',\n\t\t'pattern': /\\+|\\!|\\-|&(gt|lt|amp);|\\/\\=|\\||\\@|\\:|\\.|\\+{2}|\\:|\\*|\\=|#|\\.{2}|(\\\\)[a-zA-Z_]/g\n\t},\n\t{\n\t\t'name': 'keyword',\n\t\t'pattern': /\\b(case|class|foreign|hiding|qualified|data|family|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|in|otherwise|module|newtype|of|then|type|where)\\b/g\n\t},\n\t{\n\t\t'name': 'keyword',\n\t\t'pattern': /[\\`][a-zA-Z_']*?[\\`]/g\n\t},\n\t///- End Keywords and Operators\n\n\n\t///- Infix|Infixr|Infixl\n\t{\n\t\t'matches': {\n\t\t\t1: 'keyword',\n\t\t\t2: 'keyword.operator'\n\t\t},\n\t\t'pattern': /\\b(infix|infixr|infixl)+\\s\\d+\\s(\\w+)*/g\n\t},\n\t///- End Infix|Infixr|Infixl\n\n\t{\n\t\t'name': 'entity.class',\n\t\t'pattern': /\\b([A-Z][A-Za-z0-9_']*)/g\n\t},\n\n\t// From c.js\n\t{\n\t\t'name': 'meta.preprocessor',\n\t\t'matches': {\n\t\t\t1: [\n\t\t\t\t{\n\t\t\t\t\t'matches': {\n\t\t\t\t\t\t1: 'keyword.define',\n\t\t\t\t\t\t2: 'entity.name'\n\t\t\t\t\t},\n\t\t\t\t\t'pattern': /(\\w+)\\s(\\w+)\\b/g\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'name': 'keyword.define',\n\t\t\t\t\t'pattern': /endif/g\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'name': 'constant.numeric',\n\t\t\t\t\t'pattern': /\\d+/g\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'matches': {\n\t\t\t\t\t\t1: 'keyword.include',\n\t\t\t\t\t\t2: 'string'\n\t\t\t\t\t},\n\t\t\t\t 'pattern': /(include)\\s(.*?)$/g\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t'pattern': /^\\#([\\S\\s]*?)$/gm\n\t}\n]];\n//@ sourceURL=segmentio-rainbow/js/language/haskell.js"
));
require.register("segmentio-rainbow/js/language/html.js", Function("exports, require, module",
"/**\n * HTML patterns\n *\n * @author Craig Campbell\n * @version 1.0.7\n */\nmodule.exports = ['html', [\n    {\n        'name': 'source.php.embedded',\n        'matches': {\n            2: {\n                'language': 'php'\n            }\n        },\n        'pattern': /&lt;\\?=?(?!xml)(php)?([\\s\\S]*?)(\\?&gt;)/gm\n    },\n    {\n        'name': 'source.css.embedded',\n        'matches': {\n            0: {\n                'language': 'css'\n            }\n        },\n        'pattern': /&lt;style(.*?)&gt;([\\s\\S]*?)&lt;\\/style&gt;/gm\n    },\n    {\n        'name': 'source.js.embedded',\n        'matches': {\n            0: {\n                'language': 'javascript'\n            }\n        },\n        'pattern': /&lt;script(?! src)(.*?)&gt;([\\s\\S]*?)&lt;\\/script&gt;/gm\n    },\n    {\n        'name': 'comment.html',\n        'pattern': /&lt;\\!--[\\S\\s]*?--&gt;/g\n    },\n    {\n        'matches': {\n            1: 'support.tag.open',\n            2: 'support.tag.close'\n        },\n        'pattern': /(&lt;)|(\\/?\\??&gt;)/g\n    },\n    {\n        'name': 'support.tag',\n        'matches': {\n            1: 'support.tag',\n            2: 'support.tag.special',\n            3: 'support.tag-name'\n        },\n        'pattern': /(&lt;\\??)(\\/|\\!?)(\\w+)/g\n    },\n    {\n        'matches': {\n            1: 'support.attribute'\n        },\n        'pattern': /([a-z-]+)(?=\\=)/gi\n    },\n    {\n        'matches': {\n            1: 'support.operator',\n            2: 'string.quote',\n            3: 'string.value',\n            4: 'string.quote'\n        },\n        'pattern': /(=)('|\")(.*?)(\\2)/g\n    },\n    {\n        'matches': {\n            1: 'support.operator',\n            2: 'support.value'\n        },\n        'pattern': /(=)([a-zA-Z\\-0-9]*)\\b/g\n    },\n    {\n        'matches': {\n            1: 'support.attribute'\n        },\n        'pattern': /\\s(\\w+)(?=\\s|&gt;)(?![\\s\\S]*&lt;)/g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/html.js"
));
require.register("segmentio-rainbow/js/language/java.js", Function("exports, require, module",
"/**\n* Java patterns\n*\n* @author Leo Accend\n* @version 1.0.0\n*/\nmodule.exports = [ \"java\", [\n  {\n    name: \"constant\",\n    pattern: /\\b(false|null|true|[A-Z_]+)\\b/g\n  },\n  {\n    matches: {\n      1: \"keyword\",\n      2: \"support.namespace\"\n    },\n    pattern: /(import|package)\\s(.+)/g\n  },\n  {\n    // see http://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html\n    name: \"keyword\",\n    pattern: /\\b(abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/g\n  },\n  {\n    name: \"string\",\n    pattern: /(\".*?\")/g\n  },\n  {\n    name: \"char\",\n    pattern: /(')(.|\\\\.|\\\\u[\\dA-Fa-f]{4})\\1/g\n  },\n  {\n    name: \"integer\",\n    pattern: /\\b(0x[\\da-f]+|\\d+)L?\\b/g\n  },\n  {\n    name: \"comment\",\n    pattern: /\\/\\*[\\s\\S]*?\\*\\/|(\\/\\/).*?$/gm\n  },\n  {\n    name: \"support.annotation\",\n    pattern: /@\\w+/g\n  },\n  {\n    matches: {\n      1: \"entity.function\"\n    },\n    pattern: /([^@\\.\\s]+)\\(/g\n  },\n  {\n    name: \"entity.class\",\n    pattern: /\\b([A-Z]\\w*)\\b/g\n  },\n  {\n    // see http://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html\n    name: \"operator\",\n    pattern: /(\\+{1,2}|-{1,2}|~|!|\\*|\\/|%|(?:&lt;){1,2}|(?:&gt;){1,3}|instanceof|(?:&amp;){1,2}|\\^|\\|{1,2}|\\?|:|(?:=|!|\\+|-|\\*|\\/|%|\\^|\\||(?:&lt;){1,2}|(?:&gt;){1,3})?=)/g\n  }\n], true ];\n//@ sourceURL=segmentio-rainbow/js/language/java.js"
));
require.register("segmentio-rainbow/js/language/javascript.js", Function("exports, require, module",
"/**\n * Javascript patterns\n *\n * @author Craig Campbell\n * @version 1.0.8\n */\nmodule.exports = ['javascript', [\n\n    /**\n     * matches $. or $(\n     */\n    {\n        'name': 'selector',\n        'pattern': /(\\s|^)\\$(?=\\.|\\()/g\n    },\n    {\n        'name': 'support',\n        'pattern': /\\b(window|document)\\b/g\n    },\n    {\n        'matches': {\n            1: 'support.property'\n        },\n        'pattern': /\\.(length|node(Name|Value))\\b/g\n    },\n    {\n        'matches': {\n            1: 'support.function'\n        },\n        'pattern': /(setTimeout|setInterval)(?=\\()/g\n\n    },\n    {\n        'matches': {\n            1: 'support.method'\n        },\n        'pattern': /\\.(getAttribute|push|getElementById|getElementsByClassName|log|setTimeout|setInterval)(?=\\()/g\n    },\n    {\n        'matches': {\n            1: 'support.tag.script',\n            2: [\n                {\n                    'name': 'string',\n                    'pattern': /('|\")(.*?)(\\1)/g\n                },\n                {\n                    'name': 'entity.tag.script',\n                    'pattern': /(\\w+)/g\n                }\n            ],\n            3: 'support.tag.script'\n        },\n        'pattern': /(&lt;\\/?)(script.*?)(&gt;)/g\n    },\n\n    /**\n     * matches any escaped characters inside of a js regex pattern\n     *\n     * @see https://github.com/ccampbell/rainbow/issues/22\n     *\n     * this was causing single line comments to fail so it now makes sure\n     * the opening / is not directly followed by a *\n     *\n     * @todo check that there is valid regex in match group 1\n     */\n    {\n        'name': 'string.regexp',\n        'matches': {\n            1: 'string.regexp.open',\n            2: {\n                'name': 'constant.regexp.escape',\n                'pattern': /\\\\(.){1}/g\n            },\n            3: 'string.regexp.close',\n            4: 'string.regexp.modifier'\n        },\n        'pattern': /(\\/)(?!\\*)(.+)(\\/)([igm]{0,3})/g\n    },\n\n    /**\n     * matches runtime function declarations\n     */\n    {\n        'matches': {\n            1: 'storage',\n            3: 'entity.function'\n        },\n        'pattern': /(var)?(\\s|^)(\\S*)(?=\\s?=\\s?function\\()/g\n    },\n\n    /**\n     * matches constructor call\n     */\n    {\n        'matches': {\n            1: 'keyword',\n            2: 'entity.function'\n        },\n        'pattern': /(new)\\s+(.*)(?=\\()/g\n    },\n\n    /**\n     * matches any function call in the style functionName: function()\n     */\n    {\n        'name': 'entity.function',\n        'pattern': /(\\w+)(?=:\\s{0,}function)/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/javascript.js"
));
require.register("segmentio-rainbow/js/language/lua.js", Function("exports, require, module",
"/**\n * Lua patterns\n *\n * @author Javier Aguirre\n * @version 1.0.1\n */\nmodule.exports = ['lua', [\n    {\n        'matches': {\n            1: {\n                'name': 'keyword.operator',\n                'pattern': /\\=/g\n            },\n            2: {\n                'name': 'string',\n                'matches': {\n                    'name': 'constant.character.escape',\n                    'pattern': /\\\\('|\"){1}/g\n                }\n            }\n        },\n        'pattern': /(\\(|\\s|\\[|\\=)(('|\")([^\\\\\\1]|\\\\.)*?(\\3))/gm\n    },\n    {\n        'name': 'comment',\n        'pattern': /\\-{2}\\[{2}\\-{2}[\\s\\S]*?\\-{2}\\]{2}\\-{2}|(\\-{2})[\\s\\S]*?$/gm\n    },\n    {\n        'name': 'constant.numeric',\n        'pattern': /\\b(\\d+(\\.\\d+)?(e(\\+|\\-)?\\d+)?(f|d)?|0x[\\da-f]+)\\b/gi\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\b((a|e)nd|in|repeat|break|local|return|do|for|then|else(if)?|function|not|if|or|until|while)(?=\\(|\\b)/gi\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /true|false|nil/g\n    },\n    {\n        'name': 'keyword.operator',\n        'pattern': /\\+|\\!|\\-|&(gt|lt|amp);|\\||\\*|\\=|#|\\.{2}/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'entity.name.function'\n        },\n        'pattern': /(function)\\s+(\\w+[\\:|\\.]?\\w+?)(?=\\()/g\n    },\n    {\n        'matches': {\n            1: 'support.function'\n        },\n        'pattern': /\\b(print|require|module|\\w+\\.\\w+)(?=\\()/g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/lua.js"
));
require.register("segmentio-rainbow/js/language/php.js", Function("exports, require, module",
"/**\n * PHP patterns\n *\n * @author Craig Campbell\n * @version 1.0.8\n */\nmodule.exports = ['php', [\n    {\n        'name': 'support',\n        'pattern': /\\becho\\b/g\n    },\n    {\n        'matches': {\n            1: 'variable.dollar-sign',\n            2: 'variable'\n        },\n        'pattern': /(\\$)(\\w+)\\b/g\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /true|false|null/ig\n    },\n    {\n        'name': 'constant',\n        'pattern': /\\b[A-Z0-9_]{2,}\\b/g\n    },\n    {\n        'name': 'keyword.dot',\n        'pattern': /\\./g\n    },\n    {\n        'name': 'keyword',\n        'pattern': /\\b(die|end(for(each)?|switch|if)|case|require(_once)?|include(_once)?)(?=\\(|\\b)/g\n    },\n    {\n        'matches': {\n            1: 'keyword',\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /(instanceof)\\s([^\\$].*?)(\\)|;)/g\n    },\n\n    /**\n     * these are the top 50 most used PHP functions\n     * found from running a script and checking the frequency of each function\n     * over a bunch of popular PHP frameworks then combining the results\n     */\n    {\n        'matches': {\n            1: 'support.function'\n        },\n        'pattern': /\\b(array(_key_exists|_merge|_keys|_shift)?|isset|count|empty|unset|printf|is_(array|string|numeric|object)|sprintf|each|date|time|substr|pos|str(len|pos|tolower|_replace|totime)?|ord|trim|in_array|implode|end|preg_match|explode|fmod|define|link|list|get_class|serialize|file|sort|mail|dir|idate|log|intval|header|chr|function_exists|dirname|preg_replace|file_exists)(?=\\()/g\n    },\n    {\n        'name': 'variable.language.php-tag',\n        'pattern': /(&lt;\\?(php)?|\\?&gt;)/g\n    },\n    {\n        'matches': {\n            1: 'keyword.namespace',\n            2: {\n                'name': 'support.namespace',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /\\b(namespace|use)\\s(.*?);/g\n    },\n    {\n        'matches': {\n            1: 'storage.modifier',\n            2: 'storage.class',\n            3: 'entity.name.class',\n            4: 'storage.modifier.extends',\n            5: 'entity.other.inherited-class',\n            6: 'storage.modifier.extends',\n            7: 'entity.other.inherited-class'\n        },\n        'pattern': /\\b(abstract|final)?\\s?(class|interface|trait)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?(\\simplements\\s)?([\\w\\\\]*)?\\s?\\{?(\\n|\\})/g\n    },\n    {\n        'name': 'keyword.static',\n        'pattern': /self::|static::/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'support.magic'\n        },\n        'pattern': /(function)\\s(__.*?)(?=\\()/g\n    },\n    {\n        'matches': {\n            1: 'keyword.new',\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /\\b(new)\\s([^\\$].*?)(?=\\)|\\(|;)/g\n    },\n    {\n        'matches': {\n            1: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            },\n            2: 'keyword.static'\n        },\n        'pattern': /([\\w\\\\]*?)(::)(?=\\b|\\$)/g\n    },\n    {\n        'matches': {\n            2: {\n                'name': 'support.class',\n                'pattern': /\\w+/g\n            }\n        },\n        'pattern': /(\\(|,\\s?)([\\w\\\\]*?)(?=\\s\\$)/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/php.js"
));
require.register("segmentio-rainbow/js/language/python.js", Function("exports, require, module",
"/**\n * Python patterns\n *\n * @author Craig Campbell\n * @version 1.0.9\n */\nmodule.exports = ['python', [\n    /**\n     * don't highlight self as a keyword\n     */\n    {\n        'name': 'variable.self',\n        'pattern': /self/g\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /None|True|False|NotImplemented|\\.\\.\\./g\n    },\n    {\n        'name': 'support.object',\n        'pattern': /object/g\n    },\n\n    /**\n     * built in python functions\n     *\n     * this entire list is 580 bytes minified / 379 bytes gzipped\n     *\n     * @see http://docs.python.org/library/functions.html\n     *\n     * @todo strip some out or consolidate the regexes with matching patterns?\n     */\n    {\n        'name': 'support.function.python',\n        'pattern': /\\b(bs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|bin|file|iter|property|tuple|bool|filter|len|range|type|bytearray|float|list|raw_input|unichr|callable|format|locals|reduce|unicode|chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|__import__|complex|hash|min|set|apply|delattr|help|next|setattr|buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern)(?=\\()/g\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\b(pass|lambda|with|is|not|in|from|elif|raise|del)(?=\\(|\\b)/g\n    },\n    {\n        'matches': {\n            1: 'storage.class',\n            2: 'entity.name.class',\n            3: 'entity.other.inherited-class'\n        },\n        'pattern': /(class)\\s+(\\w+)\\((\\w+?)\\)/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'support.magic'\n        },\n        'pattern': /(def)\\s+(__\\w+)(?=\\()/g\n    },\n    {\n        'name': 'support.magic',\n        'pattern': /__(name)__/g\n    },\n    {\n        'matches': {\n            1: 'keyword.control',\n            2: 'support.exception.type'\n        },\n        'pattern': /(except) (\\w+):/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'entity.name.function'\n        },\n        'pattern': /(def)\\s+(\\w+)(?=\\()/g\n    },\n    {\n        'name': 'entity.name.function.decorator',\n        'pattern': /@([\\w\\.]+)/g\n    },\n    {\n        'name': 'comment.docstring',\n        'pattern': /('{3}|\"{3})[\\s\\S]*?\\1/gm\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/python.js"
));
require.register("segmentio-rainbow/js/language/r.js", Function("exports, require, module",
"/**\n * R language patterns\n *\n * @author Simon Potter\n * @version 1.0\n */\nmodule.exports = ['r', [\n    /**\n     * Note that a valid variable name is of the form:\n     * [.a-zA-Z][0-9a-zA-Z._]*\n     */\n    {\n        'matches': {\n            1: {\n                'name': 'keyword.operator',\n                'pattern': /\\=|<\\-|&lt;-/g\n            },\n            2: {\n                'name': 'string',\n                'matches': {\n                    'name': 'constant.character.escape',\n                    'pattern': /\\\\('|\"){1}/g\n                }\n            }\n        },\n        'pattern': /(\\(|\\s|\\[|\\=|:)(('|\")([^\\\\\\1]|\\\\.)*?(\\3))/gm\n    },\n\n    /**\n     * Most of these are known via the Language Reference.\n     * The built-in constant symbols are known via ?Constants.\n     */\n    {\n        'matches': {\n            1: 'constant.language'\n        },\n        'pattern': /\\b(NULL|NA|TRUE|FALSE|T|F|NaN|Inf|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/g\n    },\n    {\n        'matches': {\n            1: 'constant.symbol'\n        },\n        'pattern': /[^0-9a-zA-Z\\._](LETTERS|letters|month\\.(abb|name)|pi)/g\n    },\n\n    /**\n     * @todo: The list subsetting operator isn't quite working properly.\n     *        It includes the previous variable when it should only match [[\n     */\n    {\n        'name': 'keyword.operator',\n        'pattern': /&lt;-|<-|-|==|&lt;=|<=|&gt;>|>=|<|>|&amp;&amp;|&&|&amp;|&|!=|\\|\\|?|\\*|\\+|\\^|\\/|%%|%\\/%|\\=|%in%|%\\*%|%o%|%x%|\\$|:|~|\\[{1,2}|\\]{1,2}/g\n    },\n    {\n        'matches': {\n            1: 'storage',\n            3: 'entity.function'\n        },\n        'pattern': /(\\s|^)(.*)(?=\\s?=\\s?function\\s\\()/g\n    },\n    {\n        'matches': {\n            1: 'storage.function'\n        },\n        'pattern': /[^a-zA-Z0-9._](function)(?=\\s*\\()/g\n    },\n    {\n        'matches': {\n            1: 'namespace',\n            2: 'keyword.operator',\n            3: 'function.call'\n        },\n        'pattern': /([a-zA-Z][a-zA-Z0-9._]+)([:]{2,3})([.a-zA-Z][a-zA-Z0-9._]*(?=\\s*\\())\\b/g\n    },\n\n    /*\n     * Note that we would perhaps match more builtin functions and\n     * variables, but there are so many that most are ommitted for now.\n     * See ?builtins for more info.\n     *\n     * @todo: Fix the case where we have a function like tmp.logical().\n     *        This should just be a function call, at the moment it's\n     *        only partly a function all.\n     */\n    {\n        'name': 'support.function',\n        'pattern': /(^|[^0-9a-zA-Z\\._])(array|character|complex|data\\.frame|double|integer|list|logical|matrix|numeric|vector)(?=\\s*\\()/g\n    }\n]];\n//@ sourceURL=segmentio-rainbow/js/language/r.js"
));
require.register("segmentio-rainbow/js/language/ruby.js", Function("exports, require, module",
"/**\n * Ruby patterns\n *\n * @author Matthew King\n * @author Jesse Farmer <jesse@20bits.com>\n * @author actsasflinn\n * @version 1.0.5\n */\n\nmodule.exports = ['ruby', [\n    /**\n     * Strings\n     *   1. No support for multi-line strings\n     */\n    {\n        'name': 'string',\n        'matches': {\n            1: 'string.open',\n            2: {\n                'name': 'string.keyword',\n                'pattern': /(\\#\\{.*?\\})/g\n            },\n            3: 'string.close'\n        },\n        'pattern': /(\"|`)(.*?[^\\\\\\1])?(\\1)/g\n    },\n    {\n        'name': 'string',\n        'pattern': /('|\"|`)([^\\\\\\1\\n]|\\\\.)*\\1/g\n    },\n    {\n        'name': 'string',\n        'pattern': /%[qQ](?=(\\(|\\[|\\{|&lt;|.)(.*?)(?:'|\\)|\\]|\\}|&gt;|\\1))(?:\\(\\2\\)|\\[\\2\\]|\\{\\2\\}|\\&lt;\\2&gt;|\\1\\2\\1)/g\n    },\n    /**\n     * Heredocs\n     * Heredocs of the form `<<'HTML' ... HTML` are unsupported.\n     */\n    {\n        'matches': {\n            1: 'string',\n            2: 'string',\n            3: 'string'\n        },\n        'pattern': /(&lt;&lt;)(\\w+).*?$([\\s\\S]*?^\\2)/gm\n    },\n    {\n        'matches': {\n            1: 'string',\n            2: 'string',\n            3: 'string'\n        },\n        'pattern': /(&lt;&lt;\\-)(\\w+).*?$([\\s\\S]*?\\2)/gm\n    },\n    /**\n     * Regular expressions\n     * Escaped delimiter (`/\\//`) is unsupported.\n     */\n    {\n        'name': 'string.regexp',\n        'matches': {\n            1: 'string.regexp',\n            2: {\n                'name': 'string.regexp',\n                'pattern': /\\\\(.){1}/g\n            },\n            3: 'string.regexp',\n            4: 'string.regexp'\n        },\n        'pattern': /(\\/)(.*?)(\\/)([a-z]*)/g\n    },\n    {\n        'name': 'string.regexp',\n        'matches': {\n            1: 'string.regexp',\n            2: {\n                'name': 'string.regexp',\n                'pattern': /\\\\(.){1}/g\n            },\n            3: 'string.regexp',\n            4: 'string.regexp'\n        },\n        'pattern': /%r(?=(\\(|\\[|\\{|&lt;|.)(.*?)('|\\)|\\]|\\}|&gt;|\\1))(?:\\(\\2\\)|\\[\\2\\]|\\{\\2\\}|\\&lt;\\2&gt;|\\1\\2\\1)([a-z]*)/g\n    },\n    /**\n     * Comments\n     */\n    {\n        'name': 'comment',\n        'pattern': /#.*$/gm\n    },\n    {\n        'name': 'comment',\n        'pattern': /^\\=begin[\\s\\S]*?\\=end$/gm\n    },\n    /**\n     * Symbols\n     */\n    {\n        'matches': {\n            1: 'constant'\n        },\n        'pattern': /(\\w+:)[^:]/g\n    },\n    {\n        'matches': {\n            1: 'constant.symbol'\n        },\n        'pattern': /[^:](:(?:\\w+|(?=['\"](.*?)['\"])(?:\"\\2\"|'\\2')))/g\n    },\n    {\n        'name': 'constant.numeric',\n        'pattern': /\\b(0x[\\da-f]+|\\d+)\\b/g\n    },\n    {\n        'name': 'support.class',\n        'pattern': /\\b[A-Z]\\w*(?=((\\.|::)[A-Za-z]|\\[))/g\n    },\n    {\n        'name': 'constant',\n        'pattern': /\\b[A-Z]\\w*\\b/g\n    },\n    /**\n     * Keywords, variables, constants, and operators\n     *   In Ruby some keywords are valid method names, e.g., MyClass#yield\n     *   Don't mark those instances as \"keywords\"\n     */\n    {\n        'matches': {\n            1: 'storage.class',\n            2: 'entity.name.class',\n            3: 'entity.other.inherited-class'\n        },\n        'pattern': /\\s*(class)\\s+((?:(?:::)?[A-Z]\\w*)+)(?:\\s+&lt;\\s+((?:(?:::)?[A-Z]\\w*)+))?/g\n    },\n    {\n        'matches': {\n            1: 'storage.module',\n            2: 'entity.name.class'\n        },\n        'pattern': /\\s*(module)\\s+((?:(?:::)?[A-Z]\\w*)+)/g\n    },\n    {\n        'name': 'variable.global',\n        'pattern': /\\$([a-zA-Z_]\\w*)\\b/g\n    },\n    {\n        'name': 'variable.class',\n        'pattern': /@@([a-zA-Z_]\\w*)\\b/g\n    },\n    {\n        'name': 'variable.instance',\n        'pattern': /@([a-zA-Z_]\\w*)\\b/g\n    },\n    {\n        'matches': {\n            1: 'keyword.control'\n        },\n        'pattern': /[^\\.]\\b(BEGIN|begin|case|class|do|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\b(?![?!])/g\n    },\n    {\n        'matches': {\n            1: 'keyword.control.pseudo-method'\n        },\n        'pattern': /[^\\.]\\b(alias|alias_method|break|next|redo|retry|return|super|undef|yield)\\b(?![?!])|\\bdefined\\?|\\bblock_given\\?/g\n    },\n    {\n        'matches': {\n            1: 'constant.language'\n        },\n        'pattern': /\\b(nil|true|false)\\b(?![?!])/g\n    },\n    {\n        'matches': {\n            1: 'variable.language'\n        },\n        'pattern': /\\b(__(FILE|LINE)__|self)\\b(?![?!])/g\n    },\n    {\n        'matches': {\n            1: 'keyword.special-method'\n        },\n        'pattern': /\\b(require|gem|initialize|new|loop|include|extend|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|module_function|public|protected)\\b(?![?!])/g\n    },\n    {\n        'name': 'keyword.operator',\n        'pattern': /\\s\\?\\s|=|&lt;&lt;|&lt;&lt;=|%=|&=|\\*=|\\*\\*=|\\+=|\\-=|\\^=|\\|{1,2}=|&lt;&lt;|&lt;=&gt;|&lt;(?!&lt;|=)|&gt;(?!&lt;|=|&gt;)|&lt;=|&gt;=|===|==|=~|!=|!~|%|&amp;|\\*\\*|\\*|\\+|\\-|\\/|\\||~|&gt;&gt;/g\n    },\n    {\n        'matches': {\n            1: 'keyword.operator.logical'\n        },\n        'pattern': /[^\\.]\\b(and|not|or)\\b/g\n    },\n\n    /**\n    * Functions\n    *   1. No support for marking function parameters\n    */\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'entity.name.function'\n        },\n        'pattern': /(def)\\s(.*?)(?=(\\s|\\())/g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/ruby.js"
));
require.register("segmentio-rainbow/js/language/scheme.js", Function("exports, require, module",
"/**\n * Scheme patterns\n *\n * @author Alex Queiroz <alex@artisancoder.com>\n * @version 1.0\n */\nmodule.exports = ['scheme', [\n    {\n        /* making peace with HTML */\n        'name': 'plain',\n        'pattern': /&gt;|&lt;/g\n    },\n    {\n        'name': 'comment',\n        'pattern': /;.*$/gm\n    },\n    {\n        'name': 'constant.language',\n        'pattern': /#t|#f|'\\(\\)/g\n    },\n    {\n        'name': 'constant.symbol',\n        'pattern': /'[^()\\s#]+/g\n    },\n    {\n        'name': 'constant.number',\n        'pattern': /\\b\\d+(?:\\.\\d*)?\\b/g\n    },\n    {\n        'name': 'string',\n        'pattern': /\".+?\"/g\n    },\n    {\n        'matches': {\n            1: 'storage.function',\n            2: 'variable'\n        },\n        'pattern': /\\(\\s*(define)\\s+\\(?(\\S+)/g\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\(\\s*(begin|define\\-syntax|if|lambda|quasiquote|quote|set!|syntax\\-rules|and|and\\-let\\*|case|cond|delay|do|else|or|let|let\\*|let\\-syntax|letrec|letrec\\-syntax)(?=[\\]()\\s#])/g\n    },\n    {\n        'matches': {\n            1: 'entity.function'\n        },\n        'pattern': /\\(\\s*(eqv\\?|eq\\?|equal\\?|number\\?|complex\\?|real\\?|rational\\?|integer\\?|exact\\?|inexact\\?|=|<|>|<=|>=|zero\\?|positive\\?|negative\\?|odd\\?|even\\?|max|min|\\+|\\-|\\*|\\/|abs|quotient|remainder|modulo|gcd|lcm|numerator|denominator|floor|ceiling|truncate|round|rationalize|exp|log|sin|cos|tan|asin|acos|atan|sqrt|expt|make\\-rectangular|make\\-polar|real\\-part|imag\\-part|magnitude|angle|exact\\->inexact|inexact\\->exact|number\\->string|string\\->number|not|boolean\\?|pair\\?|cons|car|cdr|set\\-car!|set\\-cdr!|caar|cadr|cdar|cddr|caaar|caadr|cadar|caddr|cdaar|cdadr|cddar|cdddr|caaaar|caaadr|caadar|caaddr|cadaar|cadadr|caddar|cadddr|cdaaar|cdaadr|cdadar|cdaddr|cddaar|cddadr|cdddar|cddddr|null\\?|list\\?|list|length|append|reverse|list\\-tail|list\\-ref|memq|memv|member|assq|assv|assoc|symbol\\?|symbol\\->string|string\\->symbol|char\\?|char=\\?|char<\\?|char>\\?|char<=\\?|char>=\\?|char\\-ci=\\?|char\\-ci<\\?|char\\-ci>\\?|char\\-ci<=\\?|char\\-ci>=\\?|char\\-alphabetic\\?|char\\-numeric\\?|char\\-whitespace\\?|char\\-upper\\-case\\?|char\\-lower\\-case\\?|char\\->integer|integer\\->char|char\\-upcase|char\\-downcase|string\\?|make\\-string|string|string\\-length|string\\-ref|string\\-set!|string=\\?|string\\-ci=\\?|string<\\?|string>\\?|string<=\\?|string>=\\?|string\\-ci<\\?|string\\-ci>\\?|string\\-ci<=\\?|string\\-ci>=\\?|substring|string\\-append|string\\->list|list\\->string|string\\-copy|string\\-fill!|vector\\?|make\\-vector|vector|vector\\-length|vector\\-ref|vector\\-set!|vector\\->list|list\\->vector|vector\\-fill!|procedure\\?|apply|map|for\\-each|force|call\\-with\\-current\\-continuation|call\\/cc|values|call\\-with\\-values|dynamic\\-wind|eval|scheme\\-report\\-environment|null\\-environment|interaction\\-environment|call\\-with\\-input\\-file|call\\-with\\-output\\-file|input\\-port\\?|output\\-port\\?|current\\-input\\-port|current\\-output\\-port|with\\-input\\-from\\-file|with\\-output\\-to\\-file|open\\-input\\-file|open\\-output\\-file|close\\-input\\-port|close\\-output\\-port|read|read\\-char|peek\\-char|eof\\-object\\?|char\\-ready\\?|write|display|newline|write\\-char|load|transcript\\-on|transcript\\-off)(?=[\\]()\\s#])/g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/scheme.js"
));
require.register("segmentio-rainbow/js/language/shell.js", Function("exports, require, module",
"/**\n * Shell patterns\n *\n * @author Matthew King\n * @author Craig Campbell\n * @version 1.0.3\n */\nmodule.exports = ['shell', [\n    /**\n     * This handles the case where subshells contain quotes.\n     * For example: `\"$(resolve_link \"$name\" || true)\"`.\n     *\n     * Caveat: This really should match balanced parentheses, but cannot.\n     * @see http://stackoverflow.com/questions/133601/can-regular-expressions-be-used-to-match-nested-patterns\n     */\n    {\n        'name': 'shell',\n        'matches': {\n            1: {\n                'language': 'shell'\n            }\n        },\n        'pattern': /\\$\\(([\\s\\S]*?)\\)/gm\n    },\n    {\n        'matches': {\n            2: 'string'\n        },\n        'pattern': /(\\(|\\s|\\[|\\=)(('|\")[\\s\\S]*?(\\3))/gm\n    },\n    {\n        'name': 'keyword.operator',\n        'pattern': /&lt;|&gt;|&amp;/g\n    },\n    {\n        'name': 'comment',\n        'pattern': /\\#[\\s\\S]*?$/gm\n    },\n    {\n        'name': 'storage.function',\n        'pattern': /(.+?)(?=\\(\\)\\s{0,}\\{)/g\n    },\n    /**\n     * Environment variables\n     */\n    {\n        'name': 'support.command',\n        'pattern': /\\b(echo|rm|ls|(mk|rm)dir|cd|find|cp|exit|pwd|exec|trap|source|shift|unset)/g\n    },\n    {\n        'matches': {\n            1: 'keyword'\n        },\n        'pattern': /\\b(break|case|continue|do|done|elif|else|esac|eval|export|fi|for|function|if|in|local|return|set|then|unset|until|while)(?=\\(|\\b)/g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/shell.js"
));
require.register("segmentio-rainbow/js/language/smalltalk.js", Function("exports, require, module",
"/**\n * Smalltalk patterns\n *\n * @author Frank Shearar <frank@angband.za.org>\n * @version 1.0\n */\nmodule.exports = ['smalltalk', [\n    {\n        'name': 'keyword.pseudovariable',\n        'pattern': /self|thisContext/g\n    },\n    {\n        'name': 'keyword.constant',\n        'pattern': /false|nil|true/g\n    },\n    {\n        'name': 'string',\n        'pattern': /'([^']|'')*'/g\n    },\n    {\n        'name': 'string.symbol',\n        'pattern': /#\\w+|#'([^']|'')*'/g\n    },\n    {\n        'name': 'string.character',\n        'pattern': /\\$\\w+/g\n    },\n    {\n        'name': 'comment',\n        'pattern': /\"([^\"]|\"\")*\"/g\n    },\n    {\n        'name': 'constant.numeric',\n        'pattern': /-?\\d+(\\.\\d+)?((r-?|s)[A-Za-z0-9]+|e-?[0-9]+)?/g\n    },\n    {\n        'name': 'entity.name.class',\n        'pattern': /\\b[A-Z]\\w*/g\n    },\n    {\n        'name': 'entity.name.function',\n        'pattern': /\\b[a-z]\\w*:?/g\n    },\n    {\n        'name': 'entity.name.binary',\n        'pattern': /(&lt;|&gt;|&amp;|[=~\\|\\\\\\/!@*\\-_+])+/g\n    },\n    {\n        'name': 'operator.delimiter',\n        'pattern': /;[\\(\\)\\[\\]\\{\\}]|#\\[|#\\(^\\./g\n    }\n], true];\n//@ sourceURL=segmentio-rainbow/js/language/smalltalk.js"
));
require.register("component-moment/index.js", Function("exports, require, module",
"// moment.js\n// version : 2.0.0\n// author : Tim Wood\n// license : MIT\n// momentjs.com\n\n(function (undefined) {\n\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = \"2.0.0\",\n        round = Math.round, i,\n        // internal storage for language config files\n        languages = {},\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})/g,\n\n        // parsing tokens\n        parseMultipleFormatChunker = /([0-9a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)/gi,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenWord = /[0-9]*[a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF]+\\s*?[\\u0600-\\u06FF]+/i, // any word (or two) characters or numbers including two word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/i, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO seperator)\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        // preliminary iso regex\n        // 0000-00-00 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000\n        isoRegex = /^\\s*\\d{4}-\\d\\d-\\d\\d((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d\\d?\\d?)?)?)?)?([\\+\\-]\\d\\d:?\\d\\d)?)?/,\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.S', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d{1,3}/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker \"+10:00\" > [\"10\", \"00\"] or \"-1530\" > [\"-15\", \"30\"]\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Month|Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.lang().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.lang().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.lang().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.lang().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.lang().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            a    : function () {\n                return this.lang().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.lang().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return ~~(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(~~(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = -this.zone(),\n                    b = \"+\";\n                if (a < 0) {\n                    a = -a;\n                    b = \"-\";\n                }\n                return b + leftZeroFill(~~(a / 60), 2) + \":\" + leftZeroFill(~~a % 60, 2);\n            },\n            ZZ   : function () {\n                var a = -this.zone(),\n                    b = \"+\";\n                if (a < 0) {\n                    a = -a;\n                    b = \"-\";\n                }\n                return b + leftZeroFill(~~(10 * a / 6), 4);\n            },\n            X    : function () {\n                return this.unix();\n            }\n        };\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func) {\n        return function (a) {\n            return this.lang().ordinal(func.call(this, a));\n        };\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i]);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Language() {\n\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        extend(this, config);\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var data = this._data = {},\n            years = duration.years || duration.year || duration.y || 0,\n            months = duration.months || duration.month || duration.M || 0,\n            weeks = duration.weeks || duration.week || duration.w || 0,\n            days = duration.days || duration.day || duration.d || 0,\n            hours = duration.hours || duration.hour || duration.h || 0,\n            minutes = duration.minutes || duration.minute || duration.m || 0,\n            seconds = duration.seconds || duration.second || duration.s || 0,\n            milliseconds = duration.milliseconds || duration.millisecond || duration.ms || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = months +\n            years * 12;\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n        seconds += absRound(milliseconds / 1000);\n\n        data.seconds = seconds % 60;\n        minutes += absRound(seconds / 60);\n\n        data.minutes = minutes % 60;\n        hours += absRound(minutes / 60);\n\n        data.hours = hours % 24;\n        days += absRound(hours / 24);\n\n        days += weeks * 7;\n        data.days = days % 30;\n\n        months += absRound(days / 30);\n\n        data.months = months % 12;\n        years += absRound(months / 12);\n\n        data.years = years;\n    }\n\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (b.hasOwnProperty(i)) {\n                a[i] = b[i];\n            }\n        }\n        return a;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength) {\n        var output = number + '';\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return output;\n    }\n\n    // helper function for _.addTime and _.subtractTime\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding) {\n        var ms = duration._milliseconds,\n            d = duration._days,\n            M = duration._months,\n            currentDate;\n\n        if (ms) {\n            mom._d.setTime(+mom + ms * isAdding);\n        }\n        if (d) {\n            mom.date(mom.date() + d * isAdding);\n        }\n        if (M) {\n            currentDate = mom.date();\n            mom.date(1)\n                .month(mom.month() + M * isAdding)\n                .date(Math.min(currentDate, mom.daysInMonth()));\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (~~array1[i] !== ~~array2[i]) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n\n    /************************************\n        Languages\n    ************************************/\n\n\n    Language.prototype = {\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        },\n\n        _months : \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName) {\n            var i, mom, regex, output;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                if (!this._monthsParse[i]) {\n                    mom = moment([2000, i]);\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        _longDateFormat : {\n            LT : \"h:mm A\",\n            L : \"MM/DD/YYYY\",\n            LL : \"MMMM D YYYY\",\n            LLL : \"MMMM D YYYY LT\",\n            LLLL : \"dddd, MMMM D YYYY LT\"\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom) : output;\n        },\n\n        _relativeTime : {\n            future : \"in %s\",\n            past : \"%s ago\",\n            s : \"a few seconds\",\n            m : \"a minute\",\n            mm : \"%d minutes\",\n            h : \"an hour\",\n            hh : \"%d hours\",\n            d : \"a day\",\n            dd : \"%d days\",\n            M : \"a month\",\n            MM : \"%d months\",\n            y : \"a year\",\n            yy : \"%d years\"\n        },\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace(\"%d\", number);\n        },\n        _ordinal : \"%d\",\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy);\n        },\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    };\n\n    // Loads a language definition into the `languages` cache.  The function\n    // takes a key and optionally values.  If not in the browser and no values\n    // are provided, it will load the language file module.  As a convenience,\n    // this function also returns the language values.\n    function loadLang(key, values) {\n        values.abbr = key;\n        if (!languages[key]) {\n            languages[key] = new Language();\n        }\n        languages[key].set(values);\n        return languages[key];\n    }\n\n    // Determines which language definition to use and returns it.\n    //\n    // With no parameters, it will return the global language.  If you\n    // pass in a language key, such as 'en', it will return the\n    // definition for 'en', so long as 'en' has already been loaded using\n    // moment.lang.\n    function getLangDefinition(key) {\n        if (!key) {\n            return moment.fn._lang;\n        }\n        if (!languages[key] && hasModule) {\n            require('./lang/' + key);\n        }\n        return languages[key];\n    }\n\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[.*\\]/)) {\n            return input.replace(/^\\[|\\]$/g, \"\");\n        }\n        return input.replace(/\\\\/g, \"\");\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = \"\";\n            for (i = 0; i < length; i++) {\n                output += typeof array[i].call === 'function' ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return m.lang().longDateFormat(input) || input;\n        }\n\n        while (i-- && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        }\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token) {\n        switch (token) {\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n            return parseTokenFourDigits;\n        case 'YYYYY':\n            return parseTokenSixDigits;\n        case 'S':\n        case 'SS':\n        case 'SSS':\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n        case 'a':\n        case 'A':\n            return parseTokenWord;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n            return parseTokenOneOrTwoDigits;\n        default :\n            return new RegExp(token.replace('\\\\', ''));\n        }\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, b,\n            datePartArray = config._a;\n\n        switch (token) {\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            datePartArray[1] = (input == null) ? 0 : ~~input - 1;\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = getLangDefinition(config._l).monthsParse(input);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[1] = a;\n            } else {\n                config._isValid = false;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DDDD\n        case 'DD' : // fall through to DDDD\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                datePartArray[2] = ~~input;\n            }\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[0] = ~~input + (~~input > 68 ? 1900 : 2000);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n            datePartArray[0] = ~~input;\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._isPm = ((input + '').toLowerCase() === 'pm');\n            break;\n        // 24 HOUR\n        case 'H' : // fall through to hh\n        case 'HH' : // fall through to hh\n        case 'h' : // fall through to hh\n        case 'hh' :\n            datePartArray[3] = ~~input;\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[4] = ~~input;\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[5] = ~~input;\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n            datePartArray[6] = ~~ (('0.' + input) * 1000);\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            a = (input + '').match(parseTimezoneChunker);\n            if (a && a[1]) {\n                config._tzh = ~~a[1];\n            }\n            if (a && a[2]) {\n                config._tzm = ~~a[2];\n            }\n            // reverse offsets\n            if (a && a[0] === '+') {\n                config._tzh = -config._tzh;\n                config._tzm = -config._tzm;\n            }\n            break;\n        }\n\n        // if the input is null, the date is not valid\n        if (input == null) {\n            config._isValid = false;\n        }\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromArray(config) {\n        var i, date, input = [];\n\n        if (config._d) {\n            return;\n        }\n\n        for (i = 0; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // add the offsets to the time to be parsed so that we can have a clean array for checking isValid\n        input[3] += config._tzh || 0;\n        input[4] += config._tzm || 0;\n\n        date = new Date(0);\n\n        if (config._useUTC) {\n            date.setUTCFullYear(input[0], input[1], input[2]);\n            date.setUTCHours(input[3], input[4], input[5], input[6]);\n        } else {\n            date.setFullYear(input[0], input[1], input[2]);\n            date.setHours(input[3], input[4], input[5], input[6]);\n        }\n\n        config._d = date;\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var tokens = config._f.match(formattingTokens),\n            string = config._i,\n            i, parsedInput;\n\n        config._a = [];\n\n        for (i = 0; i < tokens.length; i++) {\n            parsedInput = (getParseRegexForToken(tokens[i]).exec(string) || [])[0];\n            if (parsedInput) {\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            }\n            // don't parse if its not a known token\n            if (formatTokenFunctions[tokens[i]]) {\n                addTimeToArrayFromToken(tokens[i], parsedInput, config);\n            }\n        }\n        // handle am pm\n        if (config._isPm && config._a[3] < 12) {\n            config._a[3] += 12;\n        }\n        // if is 12 am, change hours to 0\n        if (config._isPm === false && config._a[3] === 12) {\n            config._a[3] = 0;\n        }\n        // return\n        dateFromArray(config);\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            tempMoment,\n            bestMoment,\n\n            scoreToBeat = 99,\n            i,\n            currentScore;\n\n        for (i = config._f.length; i > 0; i--) {\n            tempConfig = extend({}, config);\n            tempConfig._f = config._f[i - 1];\n            makeDateFromStringAndFormat(tempConfig);\n            tempMoment = new Moment(tempConfig);\n\n            if (tempMoment.isValid()) {\n                bestMoment = tempMoment;\n                break;\n            }\n\n            currentScore = compareArrays(tempConfig._a, tempMoment.toArray());\n\n            if (currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempMoment;\n            }\n        }\n\n        extend(config, bestMoment);\n    }\n\n    // date from iso format\n    function makeDateFromString(config) {\n        var i,\n            string = config._i;\n        if (isoRegex.exec(string)) {\n            config._f = 'YYYY-MM-DDT';\n            for (i = 0; i < 4; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (parseTokenTimezone.exec(string)) {\n                config._f += \" Z\";\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._d = new Date(string);\n        }\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i,\n            matched = aspNetJsonRegex.exec(input);\n\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (matched) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = input.slice(0);\n            dateFromArray(config);\n        } else {\n            config._d = input instanceof Date ? new Date(+input) : new Date(input);\n        }\n    }\n\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {\n        return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(milliseconds, withoutSuffix, lang) {\n        var seconds = round(Math.abs(milliseconds) / 1000),\n            minutes = round(seconds / 60),\n            hours = round(minutes / 60),\n            days = round(hours / 24),\n            years = round(days / 365),\n            args = seconds < 45 && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < 45 && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < 22 && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days <= 25 && ['dd', days] ||\n                days <= 45 && ['M'] ||\n                days < 345 && ['MM', round(days / 30)] ||\n                years === 1 && ['y'] || ['yy', years];\n        args[2] = withoutSuffix;\n        args[3] = milliseconds > 0;\n        args[4] = lang;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day();\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        return Math.ceil(moment(mom).add('d', daysToDayOfWeek).dayOfYear() / 7);\n    }\n\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f;\n\n        if (input === null || input === '') {\n            return null;\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = getLangDefinition().preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            config = extend({}, input);\n            config._d = new Date(+input._d);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        return new Moment(config);\n    }\n\n    moment = function (input, format, lang) {\n        return makeMoment({\n            _i : input,\n            _f : format,\n            _l : lang,\n            _isUTC : false\n        });\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, lang) {\n        return makeMoment({\n            _useUTC : true,\n            _isUTC : true,\n            _l : lang,\n            _i : input,\n            _f : format\n        });\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var isDuration = moment.isDuration(input),\n            isNumber = (typeof input === 'number'),\n            duration = (isDuration ? input._data : (isNumber ? {} : input)),\n            ret;\n\n        if (isNumber) {\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration && input.hasOwnProperty('_lang')) {\n            ret._lang = input._lang;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // This function will load languages and then set the global language.  If\n    // no arguments are passed in, it will simply return the current global\n    // language key.\n    moment.lang = function (key, values) {\n        var i;\n\n        if (!key) {\n            return moment.fn._lang._abbr;\n        }\n        if (values) {\n            loadLang(key, values);\n        } else if (!languages[key]) {\n            getLangDefinition(key);\n        }\n        moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);\n    };\n\n    // returns language data\n    moment.langData = function (key) {\n        if (key && key._lang && key._lang._abbr) {\n            key = key._lang._abbr;\n        }\n        return getLangDefinition(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment;\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    moment.fn = Moment.prototype = {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d;\n        },\n\n        unix : function () {\n            return Math.floor(+this._d / 1000);\n        },\n\n        toString : function () {\n            return this.format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n        },\n\n        toDate : function () {\n            return this._d;\n        },\n\n        toJSON : function () {\n            return moment.utc(this).format('YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            if (this._isValid == null) {\n                if (this._a) {\n                    this._isValid = !compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray());\n                } else {\n                    this._isValid = !isNaN(this._d.getTime());\n                }\n            }\n            return !!this._isValid;\n        },\n\n        utc : function () {\n            this._isUTC = true;\n            return this;\n        },\n\n        local : function () {\n            this._isUTC = false;\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.lang().postformat(output);\n        },\n\n        add : function (input, val) {\n            var dur;\n            // switch args to support add('s', 1) and add(1, 's')\n            if (typeof input === 'string') {\n                dur = moment.duration(+val, input);\n            } else {\n                dur = moment.duration(input, val);\n            }\n            addOrSubtractDurationFromMoment(this, dur, 1);\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur;\n            // switch args to support subtract('s', 1) and subtract(1, 's')\n            if (typeof input === 'string') {\n                dur = moment.duration(+val, input);\n            } else {\n                dur = moment.duration(input, val);\n            }\n            addOrSubtractDurationFromMoment(this, dur, -1);\n            return this;\n        },\n\n        diff : function (input, units, asFloat) {\n            var that = this._isUTC ? moment(input).utc() : moment(input).local(),\n                zoneDiff = (this.zone() - that.zone()) * 6e4,\n                diff, output;\n\n            if (units) {\n                // standardize on singular form\n                units = units.replace(/s$/, '');\n            }\n\n            if (units === 'year' || units === 'month') {\n                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                output += ((this - moment(this).startOf('month')) - (that - moment(that).startOf('month'))) / diff;\n                if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = (this - that) - zoneDiff;\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? diff / 864e5 : // 1000 * 60 * 60 * 24\n                    units === 'week' ? diff / 6048e5 : // 1000 * 60 * 60 * 24 * 7\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function () {\n            var diff = this.diff(moment().startOf('day'), 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.lang().calendar(format, this));\n        },\n\n        isLeapYear : function () {\n            var year = this.year();\n            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n        },\n\n        isDST : function () {\n            return (this.zone() < moment([this.year()]).zone() ||\n                this.zone() < moment([this.year(), 5]).zone());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            return input == null ? day :\n                this.add({ d : input - day });\n        },\n\n        startOf: function (units) {\n            units = units.replace(/s$/, '');\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.day(0);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            return this.startOf(units).add(units.replace(/s?$/, 's'), 1).subtract('ms', 1);\n        },\n\n        isAfter: function (input, units) {\n            units = typeof units !== 'undefined' ? units : 'millisecond';\n            return +this.clone().startOf(units) > +moment(input).startOf(units);\n        },\n\n        isBefore: function (input, units) {\n            units = typeof units !== 'undefined' ? units : 'millisecond';\n            return +this.clone().startOf(units) < +moment(input).startOf(units);\n        },\n\n        isSame: function (input, units) {\n            units = typeof units !== 'undefined' ? units : 'millisecond';\n            return +this.clone().startOf(units) === +moment(input).startOf(units);\n        },\n\n        zone : function () {\n            return this._isUTC ? 0 : this._d.getTimezoneOffset();\n        },\n\n        daysInMonth : function () {\n            return moment.utc([this.year(), this.month() + 1, 0]).date();\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add(\"d\", (input - dayOfYear));\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4);\n            return input == null ? week : this.add(\"d\", (input - week) * 7);\n        },\n\n        week : function (input) {\n            var week = this.lang().week(this);\n            return input == null ? week : this.add(\"d\", (input - week) * 7);\n        },\n\n        // If passed a language key, it will set the language for this\n        // instance.  Otherwise, it will return the language configuration\n        // variables for this instance.\n        lang : function (key) {\n            if (key === undefined) {\n                return this._lang;\n            } else {\n                this._lang = getLangDefinition(key);\n                return this;\n            }\n        }\n    };\n\n    // helper for adding shortcuts\n    function makeGetterAndSetter(name, key) {\n        moment.fn[name] = moment.fn[name + 's'] = function (input) {\n            var utc = this._isUTC ? 'UTC' : '';\n            if (input != null) {\n                this._d['set' + utc + key](input);\n                return this;\n            } else {\n                return this._d['get' + utc + key]();\n            }\n        };\n    }\n\n    // loop through and add shortcuts (Month, Date, Hours, Minutes, Seconds, Milliseconds)\n    for (i = 0; i < proxyGettersAndSetters.length; i ++) {\n        makeGetterAndSetter(proxyGettersAndSetters[i].toLowerCase().replace(/s$/, ''), proxyGettersAndSetters[i]);\n    }\n\n    // add shortcut for year (uses different syntax than the getter/setter 'year' == 'FullYear')\n    makeGetterAndSetter('year', 'FullYear');\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    moment.duration.fn = Duration.prototype = {\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              this._months * 2592e6;\n        },\n\n        humanize : function (withSuffix) {\n            var difference = +this,\n                output = relativeTime(difference, !withSuffix, this.lang());\n\n            if (withSuffix) {\n                output = this.lang().pastFuture(difference, output);\n            }\n\n            return this.lang().postformat(output);\n        },\n\n        lang : moment.fn.lang\n    };\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    function makeDurationAsGetter(name, factor) {\n        moment.duration.fn['as' + name] = function () {\n            return +this / factor;\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (unitMillisecondFactors.hasOwnProperty(i)) {\n            makeDurationAsGetter(i, unitMillisecondFactors[i]);\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    makeDurationAsGetter('Weeks', 6048e5);\n\n\n    /************************************\n        Default Lang\n    ************************************/\n\n\n    // Set default language, other languages will inherit from English.\n    moment.lang('en', {\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~ (number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    }\n    /*global ender:false */\n    if (typeof ender === 'undefined') {\n        // here, `this` means `window` in the browser, or `global` on the server\n        // add `moment` as a global object via a string identifier,\n        // for Closure Compiler \"advanced\" mode\n        this['moment'] = moment;\n    }\n    /*global define:false */\n    if (typeof define === \"function\" && define.amd) {\n        define(\"moment\", [], function () {\n            return moment;\n        });\n    }\n}).call(this);\n//@ sourceURL=component-moment/index.js"
));
require.register("component-throttle/index.js", Function("exports, require, module",
"\n/**\n * Module exports.\n */\n\nmodule.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most one time per\n * `wait` milliseconds.\n *\n * @param {Function} func The `Function` instance to wrap.\n * @param {Number} wait The minimum number of milliseconds that must elapse in between `func` invokations.\n * @return {Function} A new function that wraps the `func` function passed in.\n * @api public\n */\n\nfunction throttle (func, wait) {\n  var rtn; // return value\n  var last = 0; // last invokation timestamp\n  return function throttled () {\n    var now = new Date().getTime();\n    var delta = now - last;\n    if (delta >= wait) {\n      rtn = func.apply(this, arguments);\n      last = now;\n    }\n    return rtn;\n  };\n}\n//@ sourceURL=component-throttle/index.js"
));
require.register("matthewmueller-debounce/index.js", Function("exports, require, module",
"/**\n * Debounce\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean} immediate\n * @return {Function}\n */\n\nmodule.exports = function(func, wait, immediate) {\n  var timeout, result;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) result = func.apply(context, args);\n    return result;\n  };\n};\n//@ sourceURL=matthewmueller-debounce/index.js"
));
require.register("segmentio-marked/lib/marked.js", Function("exports, require, module",
"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){3,} *\\n*/,\n  blockquote: /^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment|closed|closing) *(?:\\n{2,}|\\s*$)/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', /\\n+(?=(?: *[-*_]){3,} *(?:\\n+|$))/)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3]\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i+1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item[item.length-1] === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1][cap[1].length-1] === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([^\\s]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1][6] === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += '<a href=\"'\n        + href\n        + '\">'\n        + text\n        + '</a>';\n      continue;\n    }\n\n    // url (gfm)\n    if (cap = this.rules.url.exec(src)) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += '<a href=\"'\n        + href\n        + '\">'\n        + text\n        + '</a>';\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0][0];\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      out += this.outputLink(cap, link);\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += '<strong>'\n        + this.output(cap[2] || cap[1])\n        + '</strong>';\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += '<em>'\n        + this.output(cap[2] || cap[1])\n        + '</em>';\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += '<code>'\n        + escape(cap[2], true)\n        + '</code>';\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += '<br>';\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += '<del>'\n        + this.output(cap[1])\n        + '</del>';\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(this.smartypants(cap[0]));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  if (cap[0][0] !== '!') {\n    return '<a href=\"'\n      + escape(link.href)\n      + '\"'\n      + (link.title\n      ? ' title=\"'\n      + escape(link.title)\n      + '\"'\n      : '')\n      + '>'\n      + this.output(cap[1])\n      + '</a>';\n  } else {\n    return '<img src=\"'\n      + escape(link.href)\n      + '\" alt=\"'\n      + escape(cap[1])\n      + '\"'\n      + (link.title\n      ? ' title=\"'\n      + escape(link.title)\n      + '\"'\n      : '')\n      + '>';\n  }\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    .replace(/--/g, '\\u2014')\n    .replace(/'([^']*)'/g, '\\u2018$1\\u2019')\n    .replace(/\"([^\"]*)\"/g, '\\u201C$1\\u201D')\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length-1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return '<hr>\\n';\n    }\n    case 'heading': {\n      return '<h'\n        + this.token.depth\n        + '>'\n        + this.inline.output(this.token.text)\n        + '</h'\n        + this.token.depth\n        + '>\\n';\n    }\n    case 'code': {\n      if (this.options.highlight) {\n        var code = this.options.highlight(this.token.text, this.token.lang);\n        if (code != null && code !== this.token.text) {\n          this.token.escaped = true;\n          this.token.text = code;\n        }\n      }\n\n      if (!this.token.escaped) {\n        this.token.text = escape(this.token.text, true);\n      }\n\n      return '<pre><code'\n        + (this.token.lang\n        ? ' class=\"'\n        + this.options.langPrefix\n        + this.token.lang\n        + '\"'\n        : '')\n        + '>'\n        + this.token.text\n        + '</code></pre>\\n';\n    }\n    case 'table': {\n      var body = ''\n        , heading\n        , i\n        , row\n        , cell\n        , j;\n\n      // header\n      body += '<thead>\\n<tr>\\n';\n      for (i = 0; i < this.token.header.length; i++) {\n        heading = this.inline.output(this.token.header[i]);\n        body += this.token.align[i]\n          ? '<th align=\"' + this.token.align[i] + '\">' + heading + '</th>\\n'\n          : '<th>' + heading + '</th>\\n';\n      }\n      body += '</tr>\\n</thead>\\n';\n\n      // body\n      body += '<tbody>\\n'\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n        body += '<tr>\\n';\n        for (j = 0; j < row.length; j++) {\n          cell = this.inline.output(row[j]);\n          body += this.token.align[j]\n            ? '<td align=\"' + this.token.align[j] + '\">' + cell + '</td>\\n'\n            : '<td>' + cell + '</td>\\n';\n        }\n        body += '</tr>\\n';\n      }\n      body += '</tbody>\\n';\n\n      return '<table>\\n'\n        + body\n        + '</table>\\n';\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return '<blockquote>\\n'\n        + body\n        + '</blockquote>\\n';\n    }\n    case 'list_start': {\n      var type = this.token.ordered ? 'ol' : 'ul'\n        , body = '';\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return '<'\n        + type\n        + '>\\n'\n        + body\n        + '</'\n        + type\n        + '>\\n';\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return '<li>'\n        + body\n        + '</li>\\n';\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return '<li>'\n        + body\n        + '</li>\\n';\n    }\n    case 'html': {\n      return !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n    }\n    case 'paragraph': {\n      return '<p>'\n        + this.inline.output(this.token.text)\n        + '</p>\\n';\n    }\n    case 'text': {\n      return '<p>'\n        + this.parseText()\n        + '</p>\\n';\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    if (opt) opt = merge({}, marked.defaults, opt);\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(hi) {\n      var out, err;\n\n      if (hi !== true) {\n        delete opt.highlight;\n      }\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done(true);\n    }\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n//@ sourceURL=segmentio-marked/lib/marked.js"
));
require.register("solutionio-async/index.js", Function("exports, require, module",
"/*global setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root = this,\n        previous_async = root.async;\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    else {\n        root.async = async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    //// cross-browser compatiblity functions ////\n\n    var _forEach = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _forEach(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _forEach(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        async.nextTick = function (fn) {\n            setTimeout(fn, 0);\n        };\n    }\n    else {\n        async.nextTick = process.nextTick;\n    }\n\n    async.forEach = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _forEach(arr, function (x) {\n            iterator(x, function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed === arr.length) {\n                        callback(null);\n                    }\n                }\n            });\n        });\n    };\n\n    async.forEachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed === arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n\n    async.forEachLimit = function (arr, limit, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length || limit <= 0) {\n            return callback();\n        }\n        var completed = 0;\n        var started = 0;\n        var running = 0;\n\n        (function replenish () {\n            if (completed === arr.length) {\n                return callback();\n            }\n\n            while (running < limit && started < arr.length) {\n                started += 1;\n                running += 1;\n                iterator(arr[started - 1], function (err) {\n                    if (err) {\n                        callback(err);\n                        callback = function () {};\n                    }\n                    else {\n                        completed += 1;\n                        running -= 1;\n                        if (completed === arr.length) {\n                            callback();\n                        }\n                        else {\n                            replenish();\n                        }\n                    }\n                });\n            }\n        })();\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.forEach].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.forEachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.forEachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.forEach(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.forEach(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _forEach(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _forEach(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                if (err) {\n                    callback(err);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    taskComplete();\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.nextTick(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    async.parallel = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.forEach(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.forEachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.queue = function (worker, concurrency) {\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _forEach(data, function(task) {\n                    q.tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (q.saturated && q.tasks.length == concurrency) {\n                        q.saturated();\n                    }\n                    async.nextTick(q.process);\n                });\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if(q.empty && q.tasks.length == 0) q.empty();\n                    workers += 1;\n                    worker(task.data, function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if(q.drain && q.tasks.length + workers == 0) q.drain();\n                        q.process();\n                    });\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _forEach(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\tmodule.exports = async;\n}());\n//@ sourceURL=solutionio-async/index.js"
));
require.register("timoxley-next-tick/index.js", Function("exports, require, module",
"if (typeof setImmediate == 'function') {\n  module.exports = function(ƒ){ setImmediate(ƒ) }\n}\n// legacy node.js\nelse if (typeof process != 'undefined' && typeof process.nextTick == 'function') {\n  module.exports = process.nextTick\n}\n// fallback for other environments / postMessage behaves badly on IE8\nelse if (typeof window == 'undefined' || window.ActiveXObject || !window.postMessage) {\n  module.exports = function(ƒ){ setTimeout(ƒ) };\n} else {\n  var q = [];\n\n  window.addEventListener('message', function(){\n    var i = 0;\n    while (i < q.length) {\n      try { q[i++](); }\n      catch (e) {\n        q = q.slice(i);\n        window.postMessage('tic!', '*');\n        throw e;\n      }\n    }\n    q.length = 0;\n  }, true);\n\n  module.exports = function(fn){\n    if (!q.length) window.postMessage('tic!', '*');\n    q.push(fn);\n  }\n}\n//@ sourceURL=timoxley-next-tick/index.js"
));
require.register("timoxley-async-compose/index.js", Function("exports, require, module",
"var async = require('async.js')\nvar nextTick = require('next-tick')\n\nmodule.exports = function compose(fns) {\n  return function(obj, done) {\n    async.reduce(fns, obj, function(obj, fn, callback){\n      fn = requireCallback(fn)\n      fn(obj, callback)\n    }, function(err, results) {\n      nextTick(function() {\n        done(err, results)\n      })\n    })\n  }\n}\n\n/**\n * Require function to return results in callback.\n *\n * @param {Function:obj, Function} fn\n * @return {Function}\n * @api private\n */\n\nfunction requireCallback(fn) {\n  if (fn.length !== 1) return fn\n  return function(obj, next) {\n    next(null, fn(obj))\n  }\n}\n//@ sourceURL=timoxley-async-compose/index.js"
));
require.register("editor/index.js", Function("exports, require, module",
"\nvar $ = require('dom')\n  , compose = require('async-compose')\n  , debounce = require('debounce')\n  , marked = require('marked')\n  , moment = require('moment')\n  , throttle = require('throttle')\n  , value = require('value');\n\n\nmodule.exports = Editor;\n\n\n/**\n * Set some default marked options.\n */\n\nmarked.setOptions({\n  gfm : true,\n  tables : true,\n  breaks : true,\n  smartypants : true\n});\n\n\n/**\n * Editor.\n */\n\nfunction Editor (doc) {\n  this.doc = doc;\n  this.input = $('<textarea class=\"input\" placeholder=\"Start writing here&hellip;\">');\n  this.output = $('<article class=\"output\">');\n\n  // TODO: tabbing inside input\n\n  this.input.on('keyup', this.onkeyup.bind(this));\n  doc.on('change', this.onchange.bind(this));\n\n  this.render(doc.toJSON());\n}\n\n\n/**\n * Add a plugin.\n *\n * @param {Function} plugin\n */\n\nEditor.use = function (plugin) {\n  plugin(this);\n  return this;\n};\n\n\n/**\n * Add a filter, for transforming text, html or DOM elements.\n *\n * @param {String}   name      The name of the hook to attach to.\n * @param {Function} callback  A function called with `input` and a `done`\n *                             callback to to be called with `err, output`.\n */\n\nEditor.filter = function (name, callback) {\n  this._filters || (this._filters = {});\n  this._filters[name] = this._filters[name] || [];\n  this._filters[name].push(callback);\n};\n\n\n/**\n * Render settings into the DOM.\n *\n * @param {Object}   attrs     The settings to render.\n * @param {Function} callback\n */\n\nEditor.prototype.render = function (attrs, callback) {\n  var text = attrs.body;\n  if (!text) return;\n  value(this.input.get(0), text);\n\n  var self = this;\n  self.filter('text', text, function (err, text) {\n    if (err) throw err;\n    var html = marked(text);\n\n    self.filter('html', html, function (err, html) {\n      if (err) throw err;\n      var dom = $('<div>' + html + '</div>').get();\n\n      self.filter('dom', dom, function (err, dom) {\n        if (err) throw err;\n        self.output.empty().append(dom);\n        callback && callback();\n      });\n    });\n  });\n};\n\n\n/**\n * Runs all the filters for a given `type`, and `callback`.\n *\n * @param {String}   name      The type of the filter to run.\n * @param {Mixed}    input     The input to start with.\n * @param {Function} callback  The callback to invoke when finished.\n */\n\nEditor.prototype.filter = function (type, input, callback) {\n  var filter = compose(Editor._filters[type] || []);\n  filter(input, callback);\n};\n\n\n/**\n * Save settings to Firebase.\n *\n * Debounced 500ms.\n *\n * @param {Object} attrs  The settings to save.\n */\n\nEditor.prototype.save = debounce(function (attrs) {\n  this.doc.set(attrs).save();\n}, 500);\n\n\n/**\n * Update our DOM elements when our values change.\n *\n * @param {Object} snapshot  The new Firebase snapshot.\n */\n\nEditor.prototype.onchange = function () {\n  var attrs = this.doc.toJSON();\n  this.render(attrs);\n};\n\n\n/**\n * On keyup, take the textarea contents and save them to firebase.\n *\n * Throttled 200ms.\n */\n\nEditor.prototype.onkeyup = throttle(function (e) {\n  this.doc.body(value(this.input.get(0)));\n  var attrs = this.doc.toJSON();\n  var self = this;\n  this.render(attrs, function () {\n    self.save({ title : self.title() }); // grab the newest title\n  });\n}, 200);\n\n\n/**\n * Generate a title based on the body and date of the document.\n *\n * @param  {String} markdown  An HTML representation of the document body.\n * @param  {Date}   created   The date the document was created.\n * @return {String}           The title to use for the document.\n */\n\nEditor.prototype.title = function () {\n  var headings = $(this.output).find('h1, h2, h3, h4, h5, h6');\n  if (headings.length()) {\n    return headings.at(0).text();\n  } else {\n    return moment(this.doc.created()).format('[Untitled] - MMMM Do, YYYY');\n  }\n};//@ sourceURL=editor/index.js"
));
require.register("component-dom/index.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar delegate = require('delegate');\nvar classes = require('classes');\nvar indexof = require('indexof');\nvar domify = require('domify');\nvar events = require('event');\nvar value = require('value');\nvar query = require('query');\nvar type = require('type');\nvar css = require('css');\n\n/**\n * Attributes supported.\n */\n\nvar attrs = [\n  'id',\n  'src',\n  'rel',\n  'cols',\n  'rows',\n  'name',\n  'href',\n  'title',\n  'style',\n  'width',\n  'height',\n  'tabindex',\n  'placeholder'\n];\n\n/**\n * Expose `dom()`.\n */\n\nexports = module.exports = dom;\n\n/**\n * Expose supported attrs.\n */\n\nexports.attrs = attrs;\n\n/**\n * Return a dom `List` for the given\n * `html`, selector, or element.\n *\n * @param {String|Element|List}\n * @return {List}\n * @api public\n */\n\nfunction dom(selector, context) {\n  // array\n  if (Array.isArray(selector)) {\n    return new List(selector);\n  }\n\n  // List\n  if (selector instanceof List) {\n    return selector;\n  }\n\n  // node\n  if (selector.nodeName) {\n    return new List([selector]);\n  }\n\n  if ('string' != typeof selector) {\n    throw new TypeError('invalid selector');\n  }\n\n  // html\n  if ('<' == selector.charAt(0)) {\n    return new List([domify(selector)[0]], selector);\n  }\n\n  // selector\n  var ctx = context\n    ? (context.els ? context.els[0] : context)\n    : document;\n\n  return new List(query.all(selector, ctx), selector);\n}\n\n/**\n * Expose `List` constructor.\n */\n\nexports.List = List;\n\n/**\n * Initialize a new `List` with the\n * given array-ish of `els` and `selector`\n * string.\n *\n * @param {Mixed} els\n * @param {String} selector\n * @api private\n */\n\nfunction List(els, selector) {\n  this.els = els || [];\n  this.selector = selector;\n}\n\n/**\n * Enumerable iterator.\n */\n\nList.prototype.__iterate__ = function(){\n  var self = this;\n  return {\n    length: function(){ return self.els.length },\n    get: function(i){ return new List([self.els[i]]) }\n  }\n};\n\n/**\n * Remove elements from the DOM.\n *\n * @api public\n */\n\nList.prototype.remove = function(){\n  for (var i = 0; i < this.els.length; i++) {\n    var el = this.els[i];\n    var parent = el.parentNode;\n    if (parent) parent.removeChild(el);\n  }\n};\n\n/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {String} name\n * @param {String} [val]\n * @return {String|List} self\n * @api public\n */\n\nList.prototype.attr = function(name, val){\n  // get\n  if (1 == arguments.length) {\n    return this.els[0] && this.els[0].getAttribute(name);\n  }\n\n  // remove\n  if (null == val) {\n    return this.removeAttr(name);\n  }\n\n  // set\n  return this.forEach(function(el){\n    el.setAttribute(name, val);\n  });\n};\n\n/**\n * Remove attribute `name`.\n *\n * @param {String} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.removeAttr = function(name){\n  return this.forEach(function(el){\n    el.removeAttribute(name);\n  });\n};\n\n/**\n * Set property `name` to `val`, or get property `name`.\n *\n * @param {String} name\n * @param {String} [val]\n * @return {Object|List} self\n * @api public\n */\n\nList.prototype.prop = function(name, val){\n  if (1 == arguments.length) {\n    return this.els[0] && this.els[0][name];\n  }\n\n  return this.forEach(function(el){\n    el[name] = val;\n  });\n};\n\n/**\n * Get the first element's value or set selected\n * element values to `val`.\n *\n * @param {Mixed} [val]\n * @return {Mixed}\n * @api public\n */\n\nList.prototype.val =\nList.prototype.value = function(val){\n  if (0 == arguments.length) {\n    return this.els[0]\n      ? value(this.els[0])\n      : undefined;\n  }\n\n  return this.forEach(function(el){\n    value(el, val);\n  });\n};\n\n/**\n * Return a cloned `List` with all elements cloned.\n *\n * @return {List}\n * @api public\n */\n\nList.prototype.clone = function(){\n  var arr = [];\n  for (var i = 0, len = this.els.length; i < len; ++i) {\n    arr.push(this.els[i].cloneNode(true));\n  }\n  return new List(arr);\n};\n\n/**\n * Prepend `val`.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.prepend = function(val){\n  var el = this.els[0];\n  if (!el) return this;\n  val = dom(val);\n  for (var i = 0; i < val.els.length; ++i) {\n    if (el.children.length) {\n      el.insertBefore(val.els[i], el.firstChild);\n    } else {\n      el.appendChild(val.els[i]);\n    }\n  }\n  return val;\n};\n\n/**\n * Append `val`.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.append = function(val){\n  var el = this.els[0];\n  if (!el) return this;\n  val = dom(val);\n  for (var i = 0; i < val.els.length; ++i) {\n    el.appendChild(val.els[i]);\n  }\n  return val;\n};\n\n/**\n * Append self's `el` to `val`\n *\n * @param {String|Element|List} val\n * @return {List} self\n * @api public\n */\n\nList.prototype.appendTo = function(val){\n  dom(val).append(this);\n  return this;\n};\n\n/**\n * Return a `List` containing the element at `i`.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.at = function(i){\n  return new List([this.els[i]], this.selector);\n};\n\n/**\n * Return a `List` containing the first element.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.first = function(){\n  return new List([this.els[0]], this.selector);\n};\n\n/**\n * Return a `List` containing the last element.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.last = function(){\n  return new List([this.els[this.els.length - 1]], this.selector);\n};\n\n/**\n * Return an `Element` at `i`.\n *\n * @param {Number} i\n * @return {Element}\n * @api public\n */\n\nList.prototype.get = function(i){\n  return this.els[i || 0];\n};\n\n/**\n * Return list length.\n *\n * @return {Number}\n * @api public\n */\n\nList.prototype.length = function(){\n  return this.els.length;\n};\n\n/**\n * Return element text.\n *\n * @param {String} str\n * @return {String|List}\n * @api public\n */\n\nList.prototype.text = function(str){\n  // TODO: real impl\n  if (1 == arguments.length) {\n    this.forEach(function(el){\n      el.textContent = str;\n    });\n    return this;\n  }\n\n  var str = '';\n  for (var i = 0; i < this.els.length; ++i) {\n    str += this.els[i].textContent;\n  }\n  return str;\n};\n\n/**\n * Return element html.\n *\n * @return {String} html\n * @api public\n */\n\nList.prototype.html = function(html){\n  if (1 == arguments.length) {\n    this.forEach(function(el){\n      el.innerHTML = html;\n    });\n  }\n  // TODO: real impl\n  return this.els[0] && this.els[0].innerHTML;\n};\n\n/**\n * Bind to `event` and invoke `fn(e)`. When\n * a `selector` is given then events are delegated.\n *\n * @param {String} event\n * @param {String} [selector]\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {List}\n * @api public\n */\n\nList.prototype.on = function(event, selector, fn, capture){\n  if ('string' == typeof selector) {\n    for (var i = 0; i < this.els.length; ++i) {\n      fn._delegate = delegate.bind(this.els[i], selector, event, fn, capture);\n    }\n    return this;\n  }\n\n  capture = fn;\n  fn = selector;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    events.bind(this.els[i], event, fn, capture);\n  }\n\n  return this;\n};\n\n/**\n * Unbind to `event` and invoke `fn(e)`. When\n * a `selector` is given then delegated event\n * handlers are unbound.\n *\n * @param {String} event\n * @param {String} [selector]\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {List}\n * @api public\n */\n\nList.prototype.off = function(event, selector, fn, capture){\n  if ('string' == typeof selector) {\n    for (var i = 0; i < this.els.length; ++i) {\n      // TODO: add selector support back\n      delegate.unbind(this.els[i], event, fn._delegate, capture);\n    }\n    return this;\n  }\n\n  capture = fn;\n  fn = selector;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    events.unbind(this.els[i], event, fn, capture);\n  }\n  return this;\n};\n\n/**\n * Iterate elements and invoke `fn(list, i)`.\n *\n * @param {Function} fn\n * @return {List} self\n * @api public\n */\n\nList.prototype.each = function(fn){\n  for (var i = 0; i < this.els.length; ++i) {\n    fn(new List([this.els[i]], this.selector), i);\n  }\n  return this;\n};\n\n/**\n * Iterate elements and invoke `fn(el, i)`.\n *\n * @param {Function} fn\n * @return {List} self\n * @api public\n */\n\nList.prototype.forEach = function(fn){\n  for (var i = 0; i < this.els.length; ++i) {\n    fn(this.els[i], i);\n  }\n  return this;\n};\n\n/**\n * Map elements invoking `fn(list, i)`.\n *\n * @param {Function} fn\n * @return {Array}\n * @api public\n */\n\nList.prototype.map = function(fn){\n  var arr = [];\n  for (var i = 0; i < this.els.length; ++i) {\n    arr.push(fn(new List([this.els[i]], this.selector), i));\n  }\n  return arr;\n};\n\n/**\n * Filter elements invoking `fn(list, i)`, returning\n * a new `List` of elements when a truthy value is returned.\n *\n * @param {Function} fn\n * @return {List}\n * @api public\n */\n\nList.prototype.select =\nList.prototype.filter = function(fn){\n  var el;\n  var list = new List([], this.selector);\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    if (fn(new List([el], this.selector), i)) list.els.push(el);\n  }\n  return list;\n};\n\n/**\n * Add the given class `name`.\n *\n * @param {String} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.addClass = function(name){\n  var el;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes.add(name);\n  }\n  return this;\n};\n\n/**\n * Remove the given class `name`.\n *\n * @param {String|RegExp} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.removeClass = function(name){\n  var el;\n\n  if ('regexp' == type(name)) {\n    for (var i = 0; i < this.els.length; ++i) {\n      el = this.els[i];\n      el._classes = el._classes || classes(el);\n      var arr = el._classes.array();\n      for (var j = 0; j < arr.length; j++) {\n        if (name.test(arr[j])) {\n          el._classes.remove(arr[j]);\n        }\n      }\n    }\n    return this;\n  }\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes.remove(name);\n  }\n\n  return this;\n};\n\n/**\n * Toggle the given class `name`,\n * optionally a `bool` may be given\n * to indicate that the class should\n * be added when truthy.\n *\n * @param {String} name\n * @param {Boolean} bool\n * @return {List} self\n * @api public\n */\n\nList.prototype.toggleClass = function(name, bool){\n  var el;\n  var fn = 'toggle';\n\n  // toggle with boolean\n  if (2 == arguments.length) {\n    fn = bool ? 'add' : 'remove';\n  }\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes[fn](name);\n  }\n\n  return this;\n};\n\n/**\n * Check if the given class `name` is present.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nList.prototype.hasClass = function(name){\n  var el;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    if (el._classes.has(name)) return true;\n  }\n  return false;\n};\n\n/**\n * Set CSS `prop` to `val` or get `prop` value.\n * Also accepts an object (`prop`: `val`)\n *\n * @param {String} prop\n * @param {Mixed} val\n * @return {List|String}\n * @api public\n */\n\nList.prototype.css = function(prop, val){\n  if (2 == arguments.length) {\n    var obj = {};\n    obj[prop] = val;\n    return this.setStyle(obj);\n  }\n\n  if ('object' == type(prop)) {\n    return this.setStyle(prop);\n  }\n\n  return this.getStyle(prop);\n};\n\n/**\n * Set CSS `props`.\n *\n * @param {Object} props\n * @return {List} self\n * @api private\n */\n\nList.prototype.setStyle = function(props){\n  for (var i = 0; i < this.els.length; ++i) {\n    css(this.els[i], props);\n  }\n  return this;\n};\n\n/**\n * Get CSS `prop` value.\n *\n * @param {String} prop\n * @return {String}\n * @api private\n */\n\nList.prototype.getStyle = function(prop){\n  var el = this.els[0];\n  if (el) return el.style[prop];\n};\n\n/**\n * Find children matching the given `selector`.\n *\n * @param {String} selector\n * @return {List}\n * @api public\n */\n\nList.prototype.find = function(selector){\n  return dom(selector, this);\n};\n\n/**\n * Empty the dom list\n *\n * @return self\n * @api public\n */\n\nList.prototype.empty = function(){\n  var elem, el;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n\n  return this;\n}\n\n/**\n * Attribute accessors.\n */\n\nattrs.forEach(function(name){\n  List.prototype[name] = function(val){\n    if (0 == arguments.length) return this.attr(name);\n    return this.attr(name, val);\n  };\n});\n\n//@ sourceURL=component-dom/index.js"
));
require.register("component-event-manager/index.js", Function("exports, require, module",
"\n\n/**\n * Expose `EventManager`.\n */\n\nmodule.exports = EventManager;\n\n/**\n * Initialize an `EventManager` with the given\n * `target` object which events will be bound to,\n * and the `obj` which will receive method calls.\n *\n * @param {Object} target\n * @param {Object} obj\n * @api public\n */\n\nfunction EventManager(target, obj) {\n  this.target = target;\n  this.obj = obj;\n  this._bindings = {};\n}\n\n/**\n * Register bind function.\n *\n * @param {Function} fn\n * @return {EventManager} self\n * @api public\n */\n\nEventManager.prototype.onbind = function(fn){\n  this._bind = fn;\n  return this;\n};\n\n/**\n * Register unbind function.\n *\n * @param {Function} fn\n * @return {EventManager} self\n * @api public\n */\n\nEventManager.prototype.onunbind = function(fn){\n  this._unbind = fn;\n  return this;\n};\n\n/**\n * Bind to `event` with optional `method` name.\n * When `method` is undefined it becomes `event`\n * with the \"on\" prefix.\n *\n *    events.bind('login') // implies \"onlogin\"\n *    events.bind('login', 'onLogin')\n *\n * @param {String} event\n * @param {String} [method]\n * @return {EventManager}\n * @api public\n */\n\nEventManager.prototype.bind = function(event, method){\n  var obj = this.obj;\n  var method = method || 'on' + event;\n  var args = [].slice.call(arguments, 2);\n\n  // callback\n  function callback() {\n    var a = [].slice.call(arguments).concat(args);\n    obj[method].apply(obj, a);\n  }\n\n  // subscription\n  this._bindings[event] = this._bindings[event] || {};\n  this._bindings[event][method] = callback;\n\n  // bind\n  this._bind(event, callback);\n\n  return this;\n};\n\n/**\n * Unbind a single binding, all bindings for `event`,\n * or all bindings within the manager.\n *\n *     evennts.unbind('login', 'onLogin')\n *     evennts.unbind('login')\n *     evennts.unbind()\n *\n * @param {String} [event]\n * @param {String} [method]\n * @api public\n */\n\nEventManager.prototype.unbind = function(event, method){\n  if (0 == arguments.length) return this.unbindAll();\n  if (1 == arguments.length) return this.unbindAllOf(event);\n  var fn = this._bindings[event][method];\n  this._unbind(event, fn);\n};\n\n/**\n * Unbind all events.\n *\n * @api private\n */\n\nEventManager.prototype.unbindAll = function(){\n  for (var event in this._bindings) {\n    this.unbindAllOf(event);\n  }\n};\n\n/**\n * Unbind all events for `event`.\n *\n * @param {String} event\n * @api private\n */\n\nEventManager.prototype.unbindAllOf = function(event){\n  var bindings = this._bindings[event];\n  if (!bindings) return;\n  for (var method in bindings) {\n    this.unbind(event, method);\n  }\n};\n//@ sourceURL=component-event-manager/index.js"
));
require.register("component-events/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar Manager = require('event-manager')\n  , event = require('event');\n\n/**\n * Return a new event manager.\n */\n\nmodule.exports = function(target, obj){\n  var manager = new Manager(target, obj);\n\n  manager.onbind(function(name, fn){\n    event.bind(target, name, fn);\n  });\n\n  manager.onunbind(function(name, fn){\n    event.unbind(target, name, fn);\n  });\n\n  return manager;\n};\n//@ sourceURL=component-events/index.js"
));
require.register("component-format-parser/index.js", Function("exports, require, module",
"\n/**\n * Parse the given format `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(str){\n\treturn str.split(/ *\\| */).map(function(call){\n\t\tvar parts = call.split(':');\n\t\tvar name = parts.shift();\n\t\tvar args = parseArgs(parts.join(':'));\n\n\t\treturn {\n\t\t\tname: name,\n\t\t\targs: args\n\t\t};\n\t});\n};\n\n/**\n * Parse args `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction parseArgs(str) {\n\tvar args = [];\n\tvar re = /\"([^\"]*)\"|'([^']*)'|([^ \\t,]+)/g;\n\tvar m;\n\t\n\twhile (m = re.exec(str)) {\n\t\targs.push(m[2] || m[1] || m[0]);\n\t}\n\t\n\treturn args;\n}\n//@ sourceURL=component-format-parser/index.js"
));
require.register("component-props/index.js", Function("exports, require, module",
"\n/**\n * Return immediate identifiers parsed from `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(str, prefix){\n  var p = unique(props(str));\n  if (prefix) return prefixed(str, p, prefix);\n  return p;\n};\n\n/**\n * Return immediate identifiers in `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction props(str) {\n  return str\n    .replace(/\\.\\w+|\\w+ *\\(|\"[^\"]*\"|'[^']*'|\\/([^/]+)\\//g, '')\n    .match(/[a-zA-Z_]\\w*/g)\n    || [];\n}\n\n/**\n * Return `str` with `props` prefixed with `prefix`.\n *\n * @param {String} str\n * @param {Array} props\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction prefixed(str, props, prefix) {\n  var re = /\\.\\w+|\\w+ *\\(|\"[^\"]*\"|'[^']*'|\\/([^/]+)\\/|[a-zA-Z_]\\w*/g;\n  return str.replace(re, function(_){\n    if ('(' == _[_.length - 1]) return prefix + _;\n    if (!~props.indexOf(_)) return _;\n    return prefix + _;\n  });\n}\n\n/**\n * Return unique array.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nfunction unique(arr) {\n  var ret = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (~ret.indexOf(arr[i])) continue;\n    ret.push(arr[i]);\n  }\n\n  return ret;\n}\n//@ sourceURL=component-props/index.js"
));
require.register("visionmedia-debug/index.js", Function("exports, require, module",
"if ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n//@ sourceURL=visionmedia-debug/index.js"
));
require.register("visionmedia-debug/debug.js", Function("exports, require, module",
"\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n//@ sourceURL=visionmedia-debug/debug.js"
));
require.register("component-reactive/lib/index.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar AttrBinding = require('./attr-binding');\nvar TextBinding = require('./text-binding');\nvar debug = require('debug')('reactive');\nvar bindings = require('./bindings');\nvar Binding = require('./binding');\nvar utils = require('./utils');\nvar query = require('query');\n\n/**\n * Expose `Reactive`.\n */\n\nexports = module.exports = Reactive;\n\n/**\n * Bindings.\n */\n\nexports.bindings = {};\n\n/**\n * Default subscription method.\n */\n\nfunction subscribe(obj, prop, fn) {\n  if (!obj.on) return;\n  obj.on('change ' + prop, fn);\n};\n\n/**\n * Default unsubscription method.\n */\n\nfunction unsubscribe(obj, prop, fn) {\n  if (!obj.off) return;\n  obj.off('change ' + prop, fn);\n};\n\n/**\n * Define subscription function.\n *\n * @param {Function} fn\n * @api public\n */\n\nexports.subscribe = function(fn){\n  subscribe = fn;\n  Binding.subscribe = fn;\n};\n\n/**\n * Define unsubscribe function.\n *\n * @param {Function} fn\n * @api public\n */\n\nexports.unsubscribe = function(fn){\n  unsubscribe = fn;\n  Binding.unsubscribe = fn;\n};\n\n/**\n * Define binding `name` with callback `fn(el, val)`.\n *\n * @param {String} name or object\n * @param {String|Object} name\n * @param {Function} fn\n * @api public\n */\n\nexports.bind = function(name, fn){\n  if ('object' == typeof name) {\n    for (var key in name) {\n      exports.bind(key, name[key]);\n    }\n    return;\n  }\n\n  exports.bindings[name] = fn;\n};\n\n/**\n * Initialize a reactive template for `el` and `obj`.\n *\n * @param {Element} el\n * @param {Element} obj\n * @param {Object} options\n * @api public\n */\n\nfunction Reactive(el, obj, options) {\n  if (!(this instanceof Reactive)) return new Reactive(el, obj, options);\n  this.el = el;\n  this.obj = obj;\n  this.els = [];\n  this.fns = options || {};\n  this.bindAll();\n  this.bindInterpolation(this.el, []);\n}\n\n/**\n * Subscribe to changes on `prop`.\n *\n * @param {String} prop\n * @param {Function} fn\n * @api private\n */\n\nReactive.prototype.sub = function(prop, fn){\n  subscribe(this.obj, prop, fn);\n};\n\n/**\n * Unsubscribe to changes from `prop`.\n *\n * @param {String} prop\n * @param {Function} fn\n * @api public\n */\n\nReactive.prototype.unsub = function(prop, fn){\n  unsubscribe(this.obj, prop, fn);\n};\n\n/**\n * Traverse and bind all interpolation within attributes and text.\n *\n * @param {Element} el\n * @api private\n */\n\nReactive.prototype.bindInterpolation = function(el, els){\n\n  // element\n  if (el.nodeType == 1) {\n    for (var i = 0; i < el.attributes.length; i++) {\n      var attr = el.attributes[i];\n      if (utils.hasInterpolation(attr.value)) {\n        new AttrBinding(this, el, attr);\n      }\n    }\n  }\n\n  // text node\n  if (el.nodeType == 3) {\n    if (utils.hasInterpolation(el.data)) {\n      debug('bind text \"%s\"', el.data);\n      new TextBinding(this, el);\n    }\n  }\n\n  // walk nodes\n  for (var i = 0; i < el.childNodes.length; i++) {\n    var node = el.childNodes[i];\n    this.bindInterpolation(node, els);\n  }\n};\n\n/**\n * Apply all bindings.\n *\n * @api private\n */\n\nReactive.prototype.bindAll = function() {\n  for (var name in exports.bindings) {\n    this.bind(name, exports.bindings[name]);\n  }\n};\n\n/**\n * Bind `name` to `fn`.\n *\n * @param {String|Object} name or object\n * @param {Function} fn\n * @api public\n */\n\nReactive.prototype.bind = function(name, fn) {\n  if ('object' == typeof name) {\n    for (var key in name) {\n      this.bind(key, name[key]);\n    }\n    return;\n  }\n\n  var obj = this.obj;\n  var els = query.all('[' + name + ']', this.el);\n  if (!els.length) return;\n\n  debug('bind [%s] (%d elements)', name, els.length);\n  for (var i = 0; i < els.length; i++) {\n    var binding = new Binding(name, this, els[i], fn);\n    binding.bind();\n  }\n};\n\n// bundled bindings\n\nbindings(exports.bind);\n//@ sourceURL=component-reactive/lib/index.js"
));
require.register("component-reactive/lib/utils.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('reactive:utils');\nvar props = require('props');\n\n/**\n * Function cache.\n */\n\nvar cache = {};\n\n/**\n * Return interpolation property names in `str`,\n * for example \"{foo} and {bar}\" would return\n * ['foo', 'bar'].\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nexports.interpolationProps = function(str) {\n  var m;\n  var arr = [];\n  var re = /\\{([^}]+)\\}/g;\n\n  while (m = re.exec(str)) {\n    var expr = m[1];\n    if (isSimple(expr)) {\n      arr.push(expr);\n    } else {\n      arr = arr.concat(props(expr));\n    }\n  }\n\n  return unique(arr);\n};\n\n/**\n * Interpolate `str` with the given `fn`.\n *\n * TODO: cache compiled function\n *\n * @param {String} str\n * @param {Function} fn\n * @return {String}\n * @api private\n */\n\nexports.interpolate = function(str, fn){\n  return str.replace(/\\{([^}]+)\\}/g, function(_, expr){\n    var callback;\n\n    if (!isSimple(expr)) {\n      callback = cache[expr] || (cache[expr] = compile(expr));\n    }\n\n    return fn(expr.trim(), callback);\n  });\n};\n\n/**\n * Check if `str` has interpolation.\n *\n * @param {String} str\n * @return {Boolean}\n * @api private\n */\n\nexports.hasInterpolation = function(str) {\n  return ~str.indexOf('{');\n};\n\n/**\n * Remove computed properties notation from `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.clean = function(str) {\n  return str.split('<')[0].trim();\n};\n\n/**\n * Compile `expr` to a `Function`.\n *\n * @param {String} expr\n * @return {Function}\n * @api private\n */\n\nfunction compile(expr) {\n  expr = 'return ' + props(expr, 'model.');\n  debug('compile `%s`', expr);\n  return new Function('model', expr);\n}\n\n/**\n * Return unique array.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nfunction unique(arr) {\n  var ret = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (~ret.indexOf(arr[i])) continue;\n    ret.push(arr[i]);\n  }\n\n  return ret;\n}\n\n/**\n * Check if `expr` is \"simple\" and\n * may be optimized to reduce compiled functions.\n *\n * @param {String} expr\n * @return {Boolean}\n * @api private\n */\n\nfunction isSimple(expr) {\n  return expr.match(/^ *\\w+ *$/);\n}\n//@ sourceURL=component-reactive/lib/utils.js"
));
require.register("component-reactive/lib/text-binding.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('reactive:text-binding');\nvar utils = require('./utils');\n\n/**\n * Expose `TextBinding`.\n */\n\nmodule.exports = TextBinding;\n\n/**\n * Initialize a new text binding.\n *\n * @param {Reactive} view\n * @param {Element} node\n * @param {Attribute} attr\n * @api private\n */\n\nfunction TextBinding(view, node) {\n  var self = this;\n  this.view = view;\n  this.text = node.data;\n  this.node = node;\n  this.props = utils.interpolationProps(this.text);\n  this.subscribe();\n  this.render();\n}\n\n/**\n * Subscribe to changes.\n */\n\nTextBinding.prototype.subscribe = function(){\n  var self = this;\n  var view = this.view;\n  this.props.forEach(function(prop){\n    view.sub(prop, function(){\n      self.render();\n    });\n  });\n};\n\n/**\n * Render text.\n */\n\nTextBinding.prototype.render = function(){\n  var node = this.node;\n  var text = this.text;\n  var obj = this.view.obj;\n  debug('render \"%s\"', text);\n  node.data = utils.interpolate(text, function(prop, fn){\n    return fn\n      ? fn(obj)\n      : obj[prop];\n  });\n};\n//@ sourceURL=component-reactive/lib/text-binding.js"
));
require.register("component-reactive/lib/attr-binding.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('reactive:attr-binding');\nvar utils = require('./utils');\n\n/**\n * Expose `AttrBinding`.\n */\n\nmodule.exports = AttrBinding;\n\n/**\n * Initialize a new attribute binding.\n *\n * @param {Reactive} view\n * @param {Element} node\n * @param {Attribute} attr\n * @api private\n */\n\nfunction AttrBinding(view, node, attr) {\n  var self = this;\n  this.view = view;\n  this.node = node;\n  this.attr = attr;\n  this.text = attr.value;\n  this.props = utils.interpolationProps(this.text);\n  this.subscribe();\n  this.render();\n}\n\n/**\n * Subscribe to changes.\n */\n\nAttrBinding.prototype.subscribe = function(){\n  var self = this;\n  var view = this.view;\n  this.props.forEach(function(prop){\n    view.sub(prop, function(){\n      self.render();\n    });\n  });\n};\n\n/**\n * Render the value.\n */\n\nAttrBinding.prototype.render = function(){\n  var attr = this.attr;\n  var text = this.text;\n  var obj = this.view.obj;\n  debug('render %s \"%s\"', attr.name, text);\n  attr.value = utils.interpolate(text, function(prop, fn){\n    return fn\n      ? fn(obj)\n      : obj[prop];\n  });\n};\n//@ sourceURL=component-reactive/lib/attr-binding.js"
));
require.register("component-reactive/lib/binding.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar parse = require('format-parser');\n\n/**\n * Expose `Binding`.\n */\n\nmodule.exports = Binding;\n\n/**\n * Initialize a binding.\n *\n * @api private\n */\n\nfunction Binding(name, view, el, fn) {\n  this.name = name;\n  this.view = view;\n  this.obj = view.obj;\n  this.fns = view.fns;\n  this.el = el;\n  this.fn = fn;\n}\n\n/**\n * Apply the binding.\n *\n * @api private\n */\n\nBinding.prototype.bind = function() {\n  var val = this.el.getAttribute(this.name);\n  this.fn(this.el, val, this.obj);\n};\n\n/**\n * Perform interpolation on `name`.\n *\n * @param {String} name\n * @return {String}\n * @api public\n */\n\nBinding.prototype.interpolate = function(name) {\n  var self = this;\n  name = clean(name);\n\n  if (~name.indexOf('{')) {\n    return name.replace(/{([^}]+)}/g, function(_, name){\n      return self.value(name);\n    });\n  }\n\n  return this.formatted(name);\n};\n\n/**\n * Return value for property `name`.\n *\n *  - check if the \"view\" has a `name` method\n *  - check if the \"model\" has a `name` method\n *  - check if the \"model\" has a `name` property\n *\n * @param {String} name\n * @return {Mixed}\n * @api public\n */\n\nBinding.prototype.value = function(name) {\n  var self = this;\n  var obj = this.obj;\n  var view = this.view.fns;\n  name = clean(name);\n\n  // view method\n  if ('function' == typeof view[name]) {\n    return view[name]();\n  }\n\n  // view value\n  if (view.hasOwnProperty(name)) {\n    return view[name];\n  }\n\n  // getter-style method\n  if ('function' == typeof obj[name]) {\n    return obj[name]();\n  }\n\n  // value\n  return obj[name];\n};\n\n/**\n * Return formatted property.\n *\n * @param {String} fmt\n * @return {Mixed}\n * @api public\n */\n\nBinding.prototype.formatted = function(fmt) {\n  var calls = parse(clean(fmt));\n  var name = calls[0].name;\n  var val = this.value(name);\n\n  for (var i = 1; i < calls.length; ++i) {\n    var call = calls[i];\n    call.args.unshift(val);\n    var fn = this.fns[call.name];\n    val = fn.apply(this.fns, call.args);\n  }\n\n  return val;\n};\n\n/**\n * Define subscription `fn`.\n *\n * @param {Function} fn\n * @api public\n */\n\nBinding.prototype.subscribe = function(fn){\n  this._subscribe = fn;\n};\n\n/**\n * Define unsubscribe `fn`.\n *\n * @param {Function} fn\n * @api public\n */\n\nBinding.prototype.unsubscribe = function(fn){\n  this._unsubscribe = fn;\n};\n\n/**\n * Invoke `fn` on changes.\n *\n * @param {Function} fn\n * @api public\n */\n\nBinding.prototype.change = function(fn) {\n  fn.call(this);\n\n  var self = this;\n  var obj = this.obj;\n  var sub = this._subscribe || Binding.subscribe;\n  var val = this.el.getAttribute(this.name);\n\n  // computed props\n  var parts = val.split('<');\n  val = parts[0];\n  var computed = parts[1];\n  if (computed) computed = computed.trim().split(/\\s+/);\n\n  // interpolation\n  if (hasInterpolation(val)) {\n    var props = interpolationProps(val);\n    props.forEach(function(prop){\n      sub(obj, prop, fn.bind(self));\n    });\n    return;\n  }\n\n  // formatting\n  var calls = parse(val);\n  var prop = calls[0].name;\n\n  // computed props\n  if (computed) {\n    computed.forEach(function(prop){\n      sub(obj, prop, fn.bind(self));\n    });\n    return;\n  }\n\n  // bind to prop\n  sub(obj, prop, fn.bind(this));\n};\n\n/**\n * Default subscription method.\n */\n\nBinding.subscribe = function(obj, prop, fn) {\n  if (!obj.on) return;\n  obj.on('change ' + prop, fn);\n};\n\n/**\n * Default unsubscription method.\n */\n\nBinding.unsubscribe = function(obj, prop, fn) {\n  if (!obj.off) return;\n  obj.off('change ' + prop, fn);\n};\n\n/**\n * Return interpolation property names in `str`,\n * for example \"{foo} and {bar}\" would return\n * ['foo', 'bar'].\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction interpolationProps(str) {\n  var m;\n  var arr = [];\n  var re = /\\{([^}]+)\\}/g;\n  while (m = re.exec(str)) {\n    arr.push(m[1]);\n  }\n  return arr;\n}\n\n/**\n * Check if `str` has interpolation.\n *\n * @param {String} str\n * @return {Boolean}\n * @api private\n */\n\nfunction hasInterpolation(str) {\n  return ~str.indexOf('{');\n}\n\n/**\n * Remove computed properties notation from `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction clean(str) {\n  return str.split('<')[0].trim();\n}\n//@ sourceURL=component-reactive/lib/binding.js"
));
require.register("component-reactive/lib/bindings.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar classes = require('classes');\nvar event = require('event');\n\n/**\n * Attributes supported.\n */\n\nvar attrs = [\n  'id',\n  'src',\n  'rel',\n  'cols',\n  'rows',\n  'name',\n  'href',\n  'title',\n  'class',\n  'style',\n  'width',\n  'value',\n  'height',\n  'tabindex',\n  'placeholder'\n];\n\n/**\n * Events supported.\n */\n\nvar events = [\n  'change',\n  'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'blur',\n  'focus',\n  'input',\n  'keydown',\n  'keypress',\n  'keyup'\n];\n\n/**\n * Apply bindings.\n */\n\nmodule.exports = function(bind){\n\n  /**\n   * Generate attribute bindings.\n   */\n\n  attrs.forEach(function(attr){\n    bind('data-' + attr, function(el, name, obj){\n      this.change(function(){\n        el.setAttribute(attr, this.interpolate(name));\n      });\n    });\n  });\n\n/**\n * Append child element.\n */\n\n  bind('data-append', function(el, name){\n    var other = this.value(name);\n    el.appendChild(other);\n  });\n\n/**\n * Replace element.\n */\n\n  bind('data-replace', function(el, name){\n    var other = this.value(name);\n    el.parentNode.replaceChild(other, el);\n  });\n\n  /**\n   * Show binding.\n   */\n\n  bind('data-show', function(el, name){\n    this.change(function(){\n      if (this.value(name)) {\n        classes(el).add('show').remove('hide');\n      } else {\n        classes(el).remove('show').add('hide');\n      }\n    });\n  });\n\n  /**\n   * Hide binding.\n   */\n\n  bind('data-hide', function(el, name){\n    this.change(function(){\n      if (this.value(name)) {\n        classes(el).remove('show').add('hide');\n      } else {\n        classes(el).add('show').remove('hide');\n      }\n    });\n  });\n\n  /**\n   * Checked binding.\n   */\n\n  bind('data-checked', function(el, name){\n    this.change(function(){\n      if (this.value(name)) {\n        el.setAttribute('checked', 'checked');\n      } else {\n        el.removeAttribute('checked');\n      }\n    });\n  });\n\n  /**\n   * Text binding.\n   */\n\n  bind('data-text', function(el, name){\n    this.change(function(){\n      el.textContent = this.interpolate(name);\n    });\n  });\n\n  /**\n   * HTML binding.\n   */\n\n  bind('data-html', function(el, name){\n    this.change(function(){\n      el.innerHTML = this.formatted(name);\n    });\n  });\n\n  /**\n   * Generate event bindings.\n   */\n\n  events.forEach(function(name){\n    bind('on-' + name, function(el, method){\n      var fns = this.view.fns\n      event.bind(el, name, function(e){\n        var fn = fns[method];\n        if (!fn) throw new Error('method .' + method + '() missing');\n        fns[method](e);\n      });\n    });\n  });\n};\n//@ sourceURL=component-reactive/lib/bindings.js"
));
require.register("yields-prevent/index.js", Function("exports, require, module",
"\n/**\n * prevent default on the given `e`.\n * \n * examples:\n * \n *      anchor.onclick = prevent;\n *      anchor.onclick = function(e){\n *        if (something) return prevent(e);\n *      };\n * \n * @param {Event} e\n */\n\nmodule.exports = function(e){\n  e = e || window.event\n  return e.preventDefault\n    ? e.preventDefault()\n    : e.returnValue = false;\n};\n//@ sourceURL=yields-prevent/index.js"
));
require.register("yields-stop/index.js", Function("exports, require, module",
"\n/**\n * stop propagation on the given `e`.\n * \n * examples:\n * \n *      anchor.onclick = require('stop');\n *      anchor.onclick = function(e){\n *        if (!some) return require('stop')(e);\n *      };\n * \n * \n * @param {Event} e\n */\n\nmodule.exports = function(e){\n  e = e || window.event;\n  return e.stopPropagation\n    ? e.stopPropagation()\n    : e.cancelBubble = true;\n};\n//@ sourceURL=yields-stop/index.js"
));
require.register("menu/index.js", Function("exports, require, module",
"\nvar bind = require('bind')\n  , dom = require('dom')\n  , Emitter = require('emitter')\n  , events = require('events')\n  , prevent = require('prevent')\n  , reactive = require('reactive')\n  , stop = require('stop')\n  , type = require('type');\n\n\nmodule.exports = Menu;\n\n\n/**\n * Initialize a new `Menu`.\n */\n\nfunction Menu (collection) {\n  Emitter.call(this);\n  this.items = {};\n  this.el = dom('<ul>');\n\n  this.onkeydown = bind(this, this.onkeydown); // keep bound to this\n\n  this.events = events(this.el.get(0), this);\n  this.events.bind('hover');\n  this.events.bind('focus');\n  this.events.bind('blur');\n\n  if (collection) collection.each(this.add.bind(this));\n}\n\n\n/**\n * Mixin emitter.\n */\n\nMenu.prototype = new Emitter();\n\n\n/**\n * Deselect selected menu items.\n * @api public\n */\n\nMenu.prototype.deselect = function(){\n  this.el.find('.selected').removeClass('selected');\n  return this;\n};\n\n\n/**\n * Focus the next menu item in `direction`.\n *\n * @param {String} direction  'previous' or 'next'\n * @api public\n */\n\nMenu.prototype.move = function (direction) {\n  var previous = this.el.find('.selected').at(0);\n\n  var next = previous.length\n    ? previous[direction]\n    : this.el.find('li:first-chid');\n\n  if (next.length) {\n    previous.removeClass('selected');\n    next.addClass('selected');\n  }\n  return this;\n};\n\n\n/**\n * Add menu item with the given `model` and optional `view` and callback `fn`.\n *\n * @param {Object}   model\n * @param {Object}   view (optional)\n * @param {Function} fn (optional)\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.add = function (model, view, fn) {\n  // model, [view], fn\n  if ('function' === type(view)) {\n    fn = view;\n    view = undefined;\n  }\n\n  var el = this.template();\n  reactive(el.get(0), model, view);\n  el\n    .appendTo(this.el)\n    .on('click', function (e) {\n      prevent(e);\n      stop(e);\n      fn && fn();\n    });\n\n  this.items[model.id || model.primary()] = el;\n  this.emit('add', model);\n  return this;\n};\n\n\n/**\n * Remove menu item with the given `slug`.\n *\n * @param {String} slug\n * @return {Menu}\n * @api public\n */\n\nMenu.prototype.remove = function (id) {\n  var item = this.items[id];\n  if (!item) throw new Error('no menu item named \"' + id + '\"');\n  item.el.remove();\n  delete this.items[id];\n  this.emit('remove', item);\n  return this;\n};\n\n\n/**\n * Check if this menu has an item with the given `slug`.\n *\n * @param {String} slug\n * @return {Boolean}\n * @api public\n */\n\nMenu.prototype.has = function (id) {\n  return !!this.items[id];\n};\n\n\n/**\n * Set or render the template for the menu.\n *\n * @param {String|Function} template (optional)  The template string.\n */\n\nMenu.prototype.template = function (template) {\n  if (!template) {\n    if ('function' === type(this._template)) return this._template();\n    else return dom(this._template);\n  }\n  this._template = template;\n};\n\n\n/**\n * Event handlers.\n */\n\nMenu.prototype.onhover = function (e) {\n  this.deselect();\n};\n\nMenu.prototype.onfocus = function (e) {\n  dom(document).bind('keydown', this.onkeydown);\n};\n\nMenu.prototype.onblur = function (e) {\n  dom(document).unbind('keydown', this.onkeydown);\n};\n\nMenu.prototype.onkeydown = function(e){\n  switch (e.keyCode) {\n    // esc\n    case 27:\n      break;\n    // enter\n    case 13:\n      break;\n    // up\n    case 38:\n      prevent(e);\n      this.move('prev');\n      break;\n    // down\n    case 40:\n      prevent(e);\n      this.move('next');\n      break;\n  }\n};\n\n//@ sourceURL=menu/index.js"
));
require.register("app/index.js", Function("exports, require, module",
"\nvar $ = require('dom')\n  , bindAll = require('bindAll')\n  , Editor = require('editor')\n  , Emitter = require('emitter')\n  // , mathjax = require('./filters/mathjax')\n  , Menu = require('menu')\n  , rainbow = require('./filters/rainbow')\n  , shortcut = require('mousetrap')\n  , value = require('value');\n\n\n/**\n * Configure Editors.\n */\n\nEditor\n  .use(rainbow);\n  // .use(mathjax)\n\n\n/**\n * Initialize the `App`.\n */\n\nfunction App (el) {\n  this.el = el;\n\n  // cache dom elements\n  this.nav = el.find('nav');\n  this.search = el.find('.search');\n  this.input = el.find('.input');\n  this.output = el.find('.output');\n  this.navButton = el.find('.nav-button');\n  this.addButton = el.find('.add-button');\n  this.writeButton = el.find('.write-button');\n  this.readButton = el.find('.read-button');\n\n  // make our menu\n  var menu = this.menu = new Menu()\n    .template('<li><a data-text=\"title\"></a></li>')\n    .el.appendTo(this.nav.el);\n\n  this.bind();\n}\n\n\n/**\n * Mixin Emitter.\n */\n\nEmitter(App.prototype);\n\n\n/**\n * Bind events and shortcuts.\n */\n\nApp.prototype.bind = function () {\n  bindAll(this);\n  var self = this;\n\n  this.navButton.on('click', this.navigate);\n  this.addButton.on('click', this.new);\n  this.writeButton.on('click', this.write);\n  this.readButton.on('click', this.read);\n\n  this.search.on('change', function (e) {\n    var string = value(self.search.get(0));\n    self.menu.filter(string);\n  });\n\n  shortcut.bind('ctrl+alt+o', this.navigate);\n  shortcut.bind('ctrl+alt+n', this.new);\n  shortcut.bind('ctrl+alt+left', this.write);\n  shortcut.bind('ctrl+alt+right', this.read);\n  shortcut.bind('esc', this.close);\n  return this;\n};\n\n\n/**\n * Load a document.\n */\n\nApp.prototype.load = function (doc) {\n  var editor = this.editor = new Editor(doc);\n  this.input = this.input.replace(editor.input);\n  this.output = this.output.replace(editor.output);\n  return this;\n};\n\n\n/**\n * Add a document to the app.\n *\n * @param {Document} doc\n * @param {Function} callback\n */\n\nApp.prototype.add = function (doc, callback) {\n  this.menu.add(doc, callback);\n  return this;\n};\n\n\n/**\n * Remove a document from the app.\n *\n * @param {String} id\n */\n\nApp.prototype.remove = function (id) {\n  this.menu.remove(id);\n  return this;\n};\n\n\n/**\n * Change the App's reading or writing state.\n *\n * @param {String} state 'read' or 'write' or null\n */\n\nApp.prototype.state = function (state) {\n  this.el\n    .toggleClass('reading', state === 'read')\n    .toggleClass('writing', state === 'write');\n  return this;\n};\n\n\n/**\n * Toggle the App's navigating state.\n */\n\nApp.prototype.navigate = function () {\n  this.el.toggleClass(this.el.hasClass('navigating'));\n  return this;\n};\n\n\n/**\n * Toggle the App's loading state.\n */\n\nApp.prototype.loading = function () {\n  this.el.toggleClass(this.el.hasClass('loading'));\n  return this;\n};\n\n\n/**\n * Close the navigation.\n */\n\nApp.prototype.close = function () {\n  this.el.removeClass('navigating');\n  return this;\n};\n\n\n/**\n * Call for a new document.\n */\n\nApp.prototype.new = function () {\n  this.emit('new');\n  return this;\n};//@ sourceURL=app/index.js"
));
require.register("app/filters/mathjax.js", Function("exports, require, module",
"\nvar MathJax = require('mathjax');\n\n\n/**\n * Configure.\n *\n * http://docs.mathjax.org/en/latest/config-files.html#the-tex-ams-mml-htmlormml-configuration-file\n */\n\nMathJax.Hub.Config({\n  config: [\"MMLorHTML.js\"],\n  jax: [\"input/TeX\",\"input/MathML\",\"output/HTML-CSS\",\"output/NativeMML\"],\n  extensions: [\"tex2jax.js\",\"mml2jax.js\",\"MathMenu.js\",\"MathZoom.js\"],\n  TeX: {\n    extensions: [\"AMSmath.js\",\"AMSsymbols.js\",\"noErrors.js\",\"noUndefined.js\"]\n  },\n  tex2jax : {\n    displayMath : [['$$','$$'], ['\\\\[','\\\\]']],\n    inlineMath  : [['\\\\(','\\\\)']]\n  }\n});\n\n\n/**\n * Filter dom and turn it into MathJax.\n */\n\nmodule.exports = function (Editor) {\n  Editor.filter('dom', function (dom, done) {\n    MathJax.Hub.Queue(['Typeset'], MathJax.Hub, dom);\n    MathJax.Hub.Queue(function () {\n      done(null, dom);\n    });\n  });\n};//@ sourceURL=app/filters/mathjax.js"
));
require.register("app/filters/rainbow.js", Function("exports, require, module",
"\nvar Rainbow = require('rainbow');\n\n\n/**\n * Export our plugin.\n */\n\nmodule.exports = function (Editor) {\n  Editor.filter('dom', function (dom, done) {\n    Rainbow.color(dom, function () {\n      done(null, dom);\n    });\n  });\n};//@ sourceURL=app/filters/rainbow.js"
));
require.register("component-set/index.js", Function("exports, require, module",
"\n/**\n * Expose `Set`.\n */\n\nmodule.exports = Set;\n\n/**\n * Initialize a new `Set` with optional `vals`\n *\n * @param {Array} vals\n * @api public\n */\n\nfunction Set(vals) {\n  if (!(this instanceof Set)) return new Set(vals);\n  this.vals = [];\n  if (vals) {\n    for (var i = 0; i < vals.length; ++i) {\n      this.add(vals[i]);\n    }\n  }\n}\n\n/**\n * Add `val`.\n *\n * @param {Mixed} val\n * @api public\n */\n\nSet.prototype.add = function(val){\n  if (this.has(val)) return;\n  this.vals.push(val);\n};\n\n/**\n * Check if this set has `val`.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api public\n */\n\nSet.prototype.has = function(val){\n  return !! ~this.indexOf(val);\n};\n\n/**\n * Return the indexof `val`.\n *\n * @param {Mixed} val\n * @return {Number}\n * @api private\n */\n\nSet.prototype.indexOf = function(val){\n  for (var i = 0, len = this.vals.length; i < len; ++i) {\n    var obj = this.vals[i];\n    if (obj.equals && obj.equals(val)) return i;\n    if (obj == val) return i;\n  }\n  return -1;\n};\n\n/**\n * Iterate each member and invoke `fn(val)`.\n *\n * @param {Function} fn\n * @return {Set}\n * @api public\n */\n\nSet.prototype.each = function(fn){\n  for (var i = 0; i < this.vals.length; ++i) {\n    fn(this.vals[i]);\n  }\n  return this;\n};\n\n/**\n * Return the values as an array.\n *\n * @return {Array}\n * @api public\n */\n\nSet.prototype.values =\nSet.prototype.array =\nSet.prototype.members =\nSet.prototype.toJSON = function(){\n  return this.vals;\n};\n\n/**\n * Return the set size.\n *\n * @return {Number}\n * @api public\n */\n\nSet.prototype.size = function(){\n  return this.vals.length;\n};\n\n/**\n * Empty the set and return old values.\n *\n * @return {Array}\n * @api public\n */\n\nSet.prototype.clear = function(){\n  var old = this.vals;\n  this.vals = [];\n  return old;\n};\n\n/**\n * Remove `val`, returning __true__ when present, otherwise __false__.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api public\n */\n\nSet.prototype.remove = function(val){\n  var i = this.indexOf(val);\n  if (~i) this.vals.splice(i, 1);\n  return !! ~i;\n};\n\n/**\n * Perform a union on `set`.\n *\n * @param {Set} set\n * @return {Set} new set\n * @api public\n */\n\nSet.prototype.union = function(set){\n  var ret = new Set;\n  var a = this.vals;\n  var b = set.vals;\n  for (var i = 0; i < a.length; ++i) ret.add(a[i]);\n  for (var i = 0; i < b.length; ++i) ret.add(b[i]);\n  return ret;\n};\n\n/**\n * Perform an intersection on `set`.\n *\n * @param {Set} set\n * @return {Set} new set\n * @api public\n */\n\nSet.prototype.intersect = function(set){\n  var ret = new Set;\n  var a = this.vals;\n  var b = set.vals;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (set.has(a[i])) {\n      ret.add(a[i]);\n    }\n  }\n\n  for (var i = 0; i < b.length; ++i) {\n    if (this.has(b[i])) {\n      ret.add(b[i]);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Check if the set is empty.\n *\n * @return {Boolean}\n * @api public\n */\n\nSet.prototype.isEmpty = function(){\n  return 0 == this.vals.length;\n};\n\n//@ sourceURL=component-set/index.js"
));
require.register("yields-unserialize/index.js", Function("exports, require, module",
"\n/**\n * Unserialize the given \"stringified\" javascript.\n * \n * @param {String} val\n * @return {Mixed}\n */\n\nmodule.exports = function(val){\n  try {\n    return JSON.parse(val);\n  } catch (e) {\n    return val || undefined;\n  }\n};\n//@ sourceURL=yields-unserialize/index.js"
));
require.register("yields-store/index.js", Function("exports, require, module",
"\n/**\n * dependencies.\n */\n\nvar each = require('each')\n  , unserialize = require('unserialize')\n  , storage = window.localStorage\n  , type = require('type');\n\n/**\n * Store the given `key` `val`.\n *\n * @param {String} key\n * @param {Mixed} val\n * @return {Mixed}\n */\n\nexports = module.exports = function(key, val){\n  switch (arguments.length) {\n    case 2: return set(key, val);\n    case 0: return all();\n    case 1: return 'object' == type(key)\n      ? each(key, set)\n      : get(key);\n  }\n};\n\n/**\n * supported flag.\n */\n\nexports.supported = !! storage;\n\n/**\n * export methods.\n */\n\nexports.set = set;\nexports.get = get;\nexports.all = all;\n\n/**\n * Set `key` to `val`.\n *\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction set(key, val){\n  return null == val\n    ? storage.removeItem(key)\n    : storage.setItem(key, JSON.stringify(val));\n}\n\n/**\n * Get `key`.\n *\n * @param {String} key\n * @return {Mixed}\n */\n\nfunction get(key){\n  return null == key\n    ? storage.clear()\n    : unserialize(storage.getItem(key));\n}\n\n/**\n * Get all.\n *\n * @return {Object}\n */\n\nfunction all(){\n  var len = storage.length\n    , ret = {}\n    , key\n    , val;\n\n  for (var i = 0; i < len; ++i) {\n    key = storage.key(i);\n    ret[key] = get(key);\n  }\n\n  return ret;\n}\n//@ sourceURL=yields-store/index.js"
));
require.register("bookmarks/index.js", Function("exports, require, module",
"\nvar each = require('each')\n  , Set = require('set')\n  , store = require('store');\n\n\n/**\n * Create a set of bookmarks from local storage.\n */\n\nvar KEY = 'bookmarks';\nvar set = new Set(store(KEY));\n\n\n/**\n * Exports.\n */\n\nmodule.exports = all;\nmodule.exports.add = add;\nmodule.exports.remove = remove;\n\n\n/**\n * Get all bookmarks.\n */\n\nfunction all () {\n  return set.values();\n}\n\n\n/**\n * Add a bookmark.\n *\n * @param {String} id  The ID of the bookmark to add.\n */\n\nfunction add (id) {\n  set.add(id);\n  save();\n}\n\n\n/**\n * Remove a bookmark.\n *\n * @param {String} id  The ID of the bookmark to remove.\n */\n\nfunction remove (id) {\n  set.remove(id);\n  save();\n}\n\n\n/**\n * Save the current bookmarks set.\n */\n\nfunction save () {\n  store(KEY, set.values());\n}\n\n\n/**\n * BACKWARDS COMPATIBILITY: Bookmarks used to be stored under\n * `socrates.bookmarks` and as a comma-separated string. So convert them to the\n * new system gracefully.\n */\n\nvar OLD_KEY = 'socrates.bookmarks';\n\nif (store(OLD_KEY)) {\n  each(store(OLD_KEY).split(','), add);\n  store(OLD_KEY, null);\n}//@ sourceURL=bookmarks/index.js"
));
require.register("component-clone/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar type;\n\ntry {\n  type = require('type');\n} catch(e){\n  type = require('type-component');\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = clone;\n\n/**\n * Clones objects.\n *\n * @param {Mixed} any object\n * @api public\n */\n\nfunction clone(obj){\n  switch (type(obj)) {\n    case 'object':\n      var copy = {};\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          copy[key] = clone(obj[key]);\n        }\n      }\n      return copy;\n\n    case 'array':\n      var copy = new Array(obj.length);\n      for (var i = 0, l = obj.length; i < l; i++) {\n        copy[i] = clone(obj[i]);\n      }\n      return copy;\n\n    case 'regexp':\n      // from millermedeiros/amd-utils - MIT\n      var flags = '';\n      flags += obj.multiline ? 'm' : '';\n      flags += obj.global ? 'g' : '';\n      flags += obj.ignoreCase ? 'i' : '';\n      return new RegExp(obj.source, flags);\n\n    case 'date':\n      return new Date(obj.getTime());\n\n    default: // string, number, boolean, …\n      return obj;\n  }\n}\n//@ sourceURL=component-clone/index.js"
));
require.register("component-collection/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar Enumerable = require('enumerable');\n\n/**\n * Expose `Collection`.\n */\n\nmodule.exports = Collection;\n\n/**\n * Initialize a new collection with the given `models`.\n *\n * @param {Array} models\n * @api public\n */\n\nfunction Collection(models) {\n  this.models = models || [];\n}\n\n/**\n * Mixin enumerable.\n */\n\nEnumerable(Collection.prototype);\n\n/**\n * Iterator implementation.\n */\n\nCollection.prototype.__iterate__ = function(){\n  var self = this;\n  return {\n    length: function(){ return self.length() },\n    get: function(i){ return self.models[i] }\n  }\n};\n\n/**\n * Return the collection length.\n *\n * @return {Number}\n * @api public\n */\n\nCollection.prototype.length = function(){\n  return this.models.length;\n};\n\n/**\n * Add `model` to the collection and return the index.\n *\n * @param {Object} model\n * @return {Number}\n * @api public\n */\n\nCollection.prototype.push = function(model){\n  return this.models.push(model);\n};\n//@ sourceURL=component-collection/index.js"
));
require.register("RedVentures-reduce/index.js", Function("exports, require, module",
"\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};//@ sourceURL=RedVentures-reduce/index.js"
));
require.register("visionmedia-superagent/lib/client.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root = 'undefined' == typeof window\n  ? this\n  : window;\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nfunction getXHR() {\n  if (root.XMLHttpRequest\n    && ('file:' != root.location.protocol || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n}\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pairs.push(encodeURIComponent(key)\n      + '=' + encodeURIComponent(obj[key]));\n  }\n  return pairs.join('&');\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(xhr, options) {\n  options = options || {};\n  this.xhr = xhr;\n  this.text = xhr.responseText;\n  this.setStatusProperties(xhr.status);\n  this.header = this.headers = parseHeader(xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.parseBody(this.text);\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status || 1223 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var msg = 'got ' + this.status + ' response';\n  var err = new Error(msg);\n  err.status = this.status;\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.set('X-Requested-With', 'XMLHttpRequest');\n  this.on('end', function(){\n    var res = new Response(self.xhr);\n    if ('HEAD' == method) res.text = null;\n    self.callback(null, res);\n  });\n}\n\n/**\n * Inherit from `Emitter.prototype`.\n */\n\nRequest.prototype = new Emitter;\nRequest.prototype.constructor = Request;\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  this._query.push(val);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"})\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  if (2 == fn.length) return fn(err, res);\n  if (err) return this.emit('error', err);\n  fn(res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n    if (0 == xhr.status) {\n      if (self.aborted) return self.timeoutError();\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  if (xhr.upload) {\n    xhr.upload.onprogress = function(e){\n      e.percent = e.loaded / e.total * 100;\n      self.emit('progress', e);\n    };\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var serialize = request.serialize[this.getHeader('Content-Type')];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  xhr.send(data);\n  return this;\n};\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.del = function(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n//@ sourceURL=visionmedia-superagent/lib/client.js"
));
require.register("segmentio-model/lib/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar proto = require('./proto')\n  , statics = require('./static')\n  , Emitter = require('emitter');\n\n/**\n * Expose `createModel`.\n */\n\nmodule.exports = createModel;\n\n/**\n * Create a new model constructor with the given `name`.\n *\n * @param {String} name\n * @return {Function}\n * @api public\n */\n\nfunction createModel(name) {\n  if ('string' != typeof name) throw new TypeError('model name required');\n\n  /**\n   * Initialize a new model with the given `attrs`.\n   *\n   * @param {Object} attrs\n   * @api public\n   */\n\n  function model(attrs) {\n    if (!(this instanceof model)) return new model(attrs);\n    attrs = attrs || {};\n    this._callbacks = {};\n    this.attrs = attrs;\n    this.dirty = attrs;\n    this.model.emit('construct', this, attrs);\n  }\n\n  // mixin emitter\n\n  Emitter(model);\n\n  // statics\n\n  model.modelName = name;\n  model.base = '/' + name.toLowerCase();\n  model.attrs = {};\n  model.validators = [];\n  for (var key in statics) model[key] = statics[key];\n\n  // prototype\n\n  model.prototype = {};\n  model.prototype.model = model;\n  for (var key in proto) model.prototype[key] = proto[key];\n\n  return model;\n}\n\n//@ sourceURL=segmentio-model/lib/index.js"
));
require.register("segmentio-model/lib/static.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar request = require('superagent')\n  , Collection = require('collection')\n  , noop = function(){};\n\n/**\n * Construct a url to the given `path`.\n *\n * Example:\n *\n *    User.url('add')\n *    // => \"/users/add\"\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nexports.url = function(path){\n  var url = this.base;\n  if (0 == arguments.length) return url;\n  return url + '/' + path;\n};\n\n/**\n * Add validation `fn()`.\n *\n * @param {Function} fn\n * @return {Function} self\n * @api public\n */\n\nexports.validate = function(fn){\n  this.validators.push(fn);\n  return this;\n};\n\n/**\n * Use the given plugin `fn()`.\n *\n * @param {Function} fn\n * @return {Function} self\n * @api public\n */\n\nexports.use = function(fn){\n  fn(this);\n  return this;\n};\n\n/**\n * Define attr with the given `name` and `options`.\n *\n * @param {String} name\n * @param {Object} options\n * @return {Function} self\n * @api public\n */\n\nexports.attr = function(name, options){\n  this.attrs[name] = options || {};\n\n  // implied pk\n  if ('_id' == name || 'id' == name) {\n    this.attrs[name].primaryKey = true;\n    this.primaryKey = name;\n  }\n\n  // getter / setter method\n  this.prototype[name] = function(val){\n    if (0 == arguments.length) return this.attrs[name];\n    var prev = this.attrs[name];\n    this.dirty[name] = val;\n    this.attrs[name] = val;\n    this.model.emit('change', this, name, val, prev);\n    this.model.emit('change ' + name, this, val, prev);\n    this.emit('change', name, val, prev);\n    this.emit('change ' + name, val, prev);\n    return this;\n  };\n\n  return this;\n};\n\n/**\n * Remove all and invoke `fn(err)`.\n *\n * @param {Function} [fn]\n * @api public\n */\n\nexports.removeAll = function(fn){\n  fn = fn || noop;\n  var self = this;\n  var url = this.url('all');\n  request.del(url, function(res){\n    if (res.error) return fn(error(res));\n    fn();\n  });\n};\n\n/**\n * Get all and invoke `fn(err, array)`.\n *\n * @param {Function} fn\n * @api public\n */\n\nexports.all = function(fn){\n  var self = this;\n  var url = this.url('all');\n  request.get(url, function(res){\n    if (res.error) return fn(error(res));\n    var col = new Collection;\n    for (var i = 0, len = res.body.length; i < len; ++i) {\n      col.push(new self(res.body[i]));\n    }\n    fn(null, col);\n  });\n};\n\n/**\n * Get `id` and invoke `fn(err, model)`.\n *\n * @param {Mixed} id\n * @param {Function} fn\n * @api public\n */\n\nexports.get = function(id, fn){\n  var self = this;\n  var url = this.url(id);\n  request.get(url, function(res){\n    if (res.error) return fn(error(res));\n    var model = new self(res.body);\n    fn(null, model);\n  });\n};\n\n/**\n * Response error helper.\n *\n * @param {Response} er\n * @return {Error}\n * @api private\n */\n\nfunction error(res) {\n  return new Error('got ' + res.status + ' response');\n}\n//@ sourceURL=segmentio-model/lib/static.js"
));
require.register("segmentio-model/lib/proto.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter')\n  , request = require('superagent')\n  , clone = require('clone')\n  , each = require('each')\n  , noop = function(){};\n\n/**\n * Mixin emitter.\n */\n\nEmitter(exports);\n\n/**\n * Register an error `msg` on `attr`.\n *\n * @param {String} attr\n * @param {String} msg\n * @return {Object} self\n * @api public\n */\n\nexports.error = function(attr, msg){\n  this.errors.push({\n    attr: attr,\n    message: msg\n  });\n  return this;\n};\n\n/**\n * Check if this model is new.\n *\n * @return {Boolean}\n * @api public\n */\n\nexports.isNew = function(){\n  var key = this.model.primaryKey;\n  return ! this.has(key);\n};\n\n/**\n * Get / set the primary key.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api public\n */\n\nexports.primary = function(val){\n  var key = this.model.primaryKey;\n  if (0 == arguments.length) return this[key]();\n  return this[key](val);\n};\n\n/**\n * Validate the model and return a boolean.\n *\n * Example:\n *\n *    user.isValid()\n *    // => false\n *\n *    user.errors\n *    // => [{ attr: ..., message: ... }]\n *\n * @return {Boolean}\n * @api public\n */\n\nexports.isValid = function(){\n  this.validate();\n  return 0 == this.errors.length;\n};\n\n/**\n * Return `false` or an object\n * containing the \"dirty\" attributes.\n *\n * Optionally check for a specific `attr`.\n *\n * @param {String} [attr]\n * @return {Object|Boolean}\n * @api public\n */\n\nexports.changed = function(attr){\n  var dirty = this.dirty;\n  if (Object.keys(dirty).length) {\n    if (attr) return !! dirty[attr];\n    return dirty;\n  }\n  return false;\n};\n\n/**\n * Perform validations.\n *\n * @api private\n */\n\nexports.validate = function(){\n  var self = this;\n  var fns = this.model.validators;\n  this.errors = [];\n  each(fns, function(fn){ fn(self) });\n};\n\n/**\n * Destroy the model and mark it as `.removed`\n * and invoke `fn(err)`.\n *\n * Events:\n *\n *  - `removing` before deletion\n *  - `remove` on deletion\n *\n * @param {Function} [fn]\n * @api public\n */\n\nexports.destroy =\nexports.remove = function(fn){\n  fn = fn || noop;\n  if (this.isNew()) return fn(new Error('not saved'));\n  var self = this;\n  var url = this.url();\n  this.model.emit('removing', this);\n  this.emit('removing');\n  request.del(url, function(res){\n    if (res.error) return fn(error(res));\n    self.removed = true;\n    self.model.emit('remove', self);\n    self.emit('remove');\n    fn();\n  });\n};\n\n/**\n * Save and invoke `fn(err)`.\n *\n * Events:\n *\n *  - `saving` pre-update or save, after validation\n *  - `save` on updates and saves\n *\n * @param {Function} [fn]\n * @api public\n */\n\nexports.save = function(fn){\n  if (!this.isNew()) return this.update(fn);\n  var self = this;\n  var url = this.model.url();\n  fn = fn || noop;\n  if (!this.isValid()) return fn(new Error('validation failed'));\n  this.model.emit('saving', this);\n  this.emit('saving');\n  request.post(url, self, function(res){\n    if (res.error) return fn(error(res));\n    if (res.body) self.primary(res.body.id);\n    self.dirty = {};\n    self.model.emit('save', self);\n    self.emit('save');\n    fn();\n  });\n};\n\n/**\n * Update and invoke `fn(err)`.\n *\n * @param {Function} [fn]\n * @api private\n */\n\nexports.update = function(fn){\n  var self = this;\n  var url = this.url();\n  fn = fn || noop;\n  if (!this.isValid()) return fn(new Error('validation failed'));\n  this.model.emit('saving', this);\n  this.emit('saving');\n  request.put(url, self, function(res){\n    if (res.error) return fn(error(res));\n    self.dirty = {};\n    self.model.emit('save', self);\n    self.emit('save');\n    fn();\n  });\n};\n\n/**\n * Return a url for `path` relative to this model.\n *\n * Example:\n *\n *    var user = new User({ id: 5 });\n *    user.url('edit');\n *    // => \"/users/5/edit\"\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nexports.url = function(path){\n  var model = this.model;\n  var url = model.base;\n  var id = this.primary();\n  if (0 == arguments.length) return url + '/' + id;\n  return url + '/' + id + '/' + path;\n};\n\n/**\n * Set multiple `attrs`.\n *\n * @param {Object} attrs\n * @return {Object} self\n * @api public\n */\n\nexports.set = function(attrs){\n  for (var key in attrs) {\n    this[key](attrs[key]);\n  }\n  return this;\n};\n\n/**\n * Get `attr` value.\n *\n * @param {String} attr\n * @return {Mixed}\n * @api public\n */\n\nexports.get = function(attr){\n  return this.attrs[attr];\n};\n\n/**\n * Check if `attr` is present (not `null` or `undefined`).\n *\n * @param {String} attr\n * @return {Boolean}\n * @api public\n */\n\nexports.has = function(attr){\n  return null != this.attrs[attr];\n};\n\n/**\n * Return the JSON representation of the model.\n *\n * @return {Object}\n * @api public\n */\n\nexports.toJSON = function(){\n  return clone(this.attrs);\n};\n\n/**\n * Response error helper.\n *\n * @param {Response} er\n * @return {Error}\n * @api private\n */\n\nfunction error(res) {\n  return new Error('got ' + res.status + ' response');\n}//@ sourceURL=segmentio-model/lib/proto.js"
));
require.register("matthewmueller-uid/index.js", Function("exports, require, module",
"/**\n * Export `uid`\n */\n\nmodule.exports = uid;\n\n/**\n * Create a `uid`\n *\n * @param {String} len\n * @return {String} uid\n */\n\nfunction uid(len) {\n  len = len || 7;\n  return Math.random().toString(35).substr(2, len);\n}\n//@ sourceURL=matthewmueller-uid/index.js"
));
require.register("model-defaults/index.js", Function("exports, require, module",
"\nvar clone = require('clone')\n  , each = require('each')\n  , type = require('type');\n\n\n/**\n * Mixin our plugin.\n */\n\nmodule.exports = function (Model) {\n  Model.on('construct', function (model, attrs) {\n    each(Model.attrs, function (key, options) {\n      if (options.default !== undefined) def(model, key, options.default);\n    });\n  });\n};\n\n\n/**\n * Default a `model` with a `value` for a `key` if it doesn't exist. Use a clone\n * of the value, so that they it's easy to declare objects and arrays without\n * worrying about copying by reference.\n *\n * @param {Model}          model  The model.\n * @param {String}         key    The key to back by a default.\n * @param {Mixed|Function} value  The default value to use.\n */\n\nfunction def (model, key, value) {\n  if ('function' === type(value)) value = value();\n  if (!model.attrs[key]) model.attrs[key] = clone(value);\n}//@ sourceURL=model-defaults/index.js"
));
require.register("model-firebase/index.js", Function("exports, require, module",
"\nvar statics = require('./statics')\n  , protos = require('./protos');\n\n\n/**\n * Mixin our plugin.\n */\n\nmodule.exports = function (url) {\n  return function (Model) {\n    Model.firebase = new window.Firebase(url);\n    for (var key in statics) Model[key] = statics[key];\n    for (var key in protos) Model.prototype[key] = protos[key];\n    Model.on('construct', construct);\n  };\n};\n\n\n/**\n * On construct, start listening for firebase changes.\n */\n\nfunction construct (model, attrs) {\n  model.firebase().on('value', function (snapshot) {\n    var attrs = snapshot.val();\n    if (attrs) model.set(attrs);\n  });\n}//@ sourceURL=model-firebase/index.js"
));
require.register("model-firebase/statics.js", Function("exports, require, module",
"\nvar Collection = require('collection')\n  , noop = function(){};\n\n\n/**\n * `url` doesn't apply for firebase.\n */\n\nexports.url = noop;\n\n/**\n * Remove all and invoke `fn(err)`.\n *\n * @param {Function} [fn]\n * @api public\n */\n\nexports.removeAll = function(fn){\n  fn = fn || noop;\n  this.firebase.remove(function (err) {\n    if (err) return fn(err);\n    fn();\n  });\n};\n\n/**\n * Get all and invoke `fn(err, array)`.\n *\n * @param {Function} fn\n * @api public\n */\n\nexports.all = function(fn){\n  var self = this;\n  var col = new Collection();\n  this.firebase.once('value', function (snapshot) {\n    snapshot.forEach(function (child) {\n      var attrs = child.val();\n      if (attrs) col.push(new self(attrs));\n    });\n    fn(null, col);\n  });\n};\n\n/**\n * Get `id` and invoke `fn(err, model)`.\n *\n * @param {String} id\n * @param {Function} fn\n * @api public\n */\n\nexports.get = function(id, fn){\n  var self = this;\n  this.firebase.child(id).once('value', function (snapshot) {\n    var attrs = snapshot.val();\n    if (!attrs) fn(new Error('no model'));\n    var model = new self(attrs);\n    fn(null, model);\n  });\n};//@ sourceURL=model-firebase/statics.js"
));
require.register("model-firebase/protos.js", Function("exports, require, module",
"\nvar noop = function(){};\n\n\n/**\n * `url` doesn't apply for firebase.\n */\n\nexports.url = noop;\n\n/**\n * Returns this model's firebase.\n *\n * @return {Firebase} - Your Firebase reference.\n * @api public\n */\n\nexports.firebase = function () {\n  var firebase = this.model.firebase;\n  if (!firebase) throw new Error('no firebase');\n  return firebase.child(this.primary());\n};\n\n/**\n * Destroy the model and mark it as `.removed`\n * and invoke `fn(err)`.\n *\n * @param {Function} [fn] - Callback.\n * @api public\n */\n\nexports.destroy =\nexports.remove = function (fn) {\n  fn = fn || noop;\n  if (this.isNew()) return fn(new Error('not saved'));\n  var firebase = this.firebase();\n  var self = this;\n  this.model.emit('removing', this);\n  this.emit('removing');\n  firebase.remove(function (err) {\n    if (err) return fn(err);\n    self.removed = true;\n    self.model.emit('remove', self);\n    self.emit('remove');\n    fn();\n  });\n};\n\n/**\n * Save and invoke `fn(err)`.\n *\n * @param {Function} [fn] - Callback.\n * @api public\n */\n\nexports.save  = function (fn) {\n  if (!this.isNew()) return this.update(fn);\n  var self = this;\n  var firebase = this.firebase();\n  fn = fn || noop;\n  if (!this.isValid()) return fn(new Error('validation failed'));\n  this.model.emit('saving', this);\n  this.emit('saving');\n  firebase.set(self.attrs, function (err) {\n    if (err) return fn(err);\n    self.dirty = {};\n    self.model.emit('save', self);\n    self.emit('save');\n    fn();\n  });\n};\n\n/**\n * Update and invoke `fn(err)`.\n *\n * @param {Function} [fn] - Callback.\n * @api public\n */\n\nexports.update = function (fn) {\n  var self = this;\n  var firebase = this.firebase();\n  fn = fn || noop;\n  if (!this.isValid()) return fn(new Error('validation failed'));\n  this.model.emit('saving', this);\n  this.emit('saving');\n  firebase.update(self.attrs, function (err) {\n    if (err) return fn(err);\n    self.dirty = {};\n    self.model.emit('save', self);\n    self.emit('save');\n    fn();\n  });\n};//@ sourceURL=model-firebase/protos.js"
));
require.register("document/index.js", Function("exports, require, module",
"\nvar defaults = require('model-defaults')\n  , firebase = require('model-firebase')('https://socrates.firebaseio.com/documents/')\n  , model = require('model')\n  , uid = require('uid');\n\n\n/**\n * Document.\n */\n\nvar Document = module.exports = model('document')\n  .use(defaults)\n  .use(firebase)\n  .attr('id', { default : function () { return uid(); } })\n  .attr('created', { default : function () { return new Date(); } })\n  .attr('title', { default : '' })\n  .attr('body', { default : '' });//@ sourceURL=document/index.js"
));
require.register("boot/browser.js", Function("exports, require, module",
"\nvar App = require('app')\n  , bookmarks = require('bookmarks')\n  , Collection = require('collection')\n  , Document = require('document')\n  , each = require('each')\n  , Router = require('router');\n\n\n/**\n * Router.\n */\n\nvar router = new Router();\n\nrouter.get('/:id/:state', load);\nrouter.get('/:id', load);\nrouter.get('/', load);\n\n\n/**\n * App.\n */\n\nvar app = new App(document.body)\n\n  .on('new', function () {\n    router.dispatch('/');\n  });\n\n\n/**\n * Documents. Update app and bookmarks when documents change.\n */\n\nvar documents = new Collection()\n\n  .on('add', function (doc) {\n    var id = doc.primary();\n    bookmarks.add(id);\n    app.add(doc, function () {\n      load(id);\n    });\n  })\n\n  .on('remove', function (doc) {\n    var id = doc.primary();\n    bookmarks.remove(id);\n    app.remove(id);\n  });\n\n\n/**\n * Start routing.\n */\n\nrouter.dispatch(location.pathname);\n\n\n/**\n * Finally, get the bookmarked documents from Firebase after already requesting\n * the currently active document.\n */\n\neach(bookmarks(), get);\n\n\n/**\n * Load a Document onto the page.\n *\n * @param {String} id                ID of the document to load.\n * @param {String} state (optional)  State to start in.\n */\n\nfunction load (id, state) {\n  app.loading();\n  get(id, function (err, doc) {\n    if (err) throw err;\n    app\n      .load(doc)\n      .loading()\n      .state(state);\n    window.analytics.track('Viewed Document', { id: doc.primary(), state: state });\n  });\n}\n\n\n/**\n * Retrieve a Document.\n *\n * @param {String}   id        ID to query by.\n * @param {Function} callback  Called with `err, doc`.\n */\n\nfunction get (id, callback) {\n  var doc = documents.find('primary() === \"' + id + '\"');\n  if (doc) return callback && callback(null, doc);\n\n  Document.get(id, function (err, doc) {\n    if (err) return callback(err);\n    if (!doc) {\n      doc = new Document();\n      window.analytics.track('Created New Document');\n    }\n    documents.push(doc);\n    callback && callback(null, doc);\n  });\n}//@ sourceURL=boot/browser.js"
));
require.alias("boot/browser.js", "socrates/deps/boot/browser.js");
require.alias("boot/browser.js", "socrates/deps/boot/index.js");
require.alias("segmentio-collection/index.js", "boot/deps/collection/index.js");
require.alias("component-emitter/index.js", "segmentio-collection/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-enumerable/index.js", "segmentio-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("component-each/index.js", "boot/deps/each/index.js");
require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-router/index.js", "boot/deps/router/index.js");
require.alias("component-route/index.js", "component-router/deps/route/index.js");
require.alias("component-path-to-regexp/index.js", "component-route/deps/path-to-regexp/index.js");

require.alias("app/index.js", "boot/deps/app/index.js");
require.alias("app/filters/mathjax.js", "boot/deps/app/filters/mathjax.js");
require.alias("app/filters/rainbow.js", "boot/deps/app/filters/rainbow.js");
require.alias("segmentio-dom/index.js", "app/deps/dom/index.js");
require.alias("component-type/index.js", "segmentio-dom/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-dom/deps/event/index.js");

require.alias("component-delegate/index.js", "segmentio-dom/deps/delegate/index.js");
require.alias("component-matches-selector/index.js", "component-delegate/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("component-event/index.js", "component-delegate/deps/event/index.js");

require.alias("component-indexof/index.js", "segmentio-dom/deps/indexof/index.js");

require.alias("component-domify/index.js", "segmentio-dom/deps/domify/index.js");

require.alias("component-classes/index.js", "segmentio-dom/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-css/index.js", "segmentio-dom/deps/css/index.js");

require.alias("component-sort/index.js", "segmentio-dom/deps/sort/index.js");

require.alias("component-value/index.js", "segmentio-dom/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-dom/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");

require.alias("component-query/index.js", "segmentio-dom/deps/query/index.js");

require.alias("component-emitter/index.js", "app/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-menu/index.js", "app/deps/menu/index.js");
require.alias("component-emitter/index.js", "component-menu/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-jquery/index.js", "component-menu/deps/jquery/index.js");

require.alias("component-mousetrap/index.js", "app/deps/mousetrap/index.js");

require.alias("component-value/index.js", "app/deps/value/index.js");
require.alias("component-value/index.js", "app/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");


require.alias("segmentio-bindAll/index.js", "app/deps/bindAll/index.js");
require.alias("segmentio-bindAll/index.js", "app/deps/bindAll/index.js");
require.alias("component-bind/index.js", "segmentio-bindAll/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bindAll/deps/type/index.js");

require.alias("segmentio-bindAll/index.js", "segmentio-bindAll/index.js");

require.alias("segmentio-mathjax/MathJax.js", "app/deps/mathjax/MathJax.js");
require.alias("segmentio-mathjax/MathJax.js", "app/deps/mathjax/index.js");
require.alias("segmentio-mathjax/MathJax.js", "segmentio-mathjax/index.js");

require.alias("segmentio-rainbow/index.js", "app/deps/rainbow/index.js");
require.alias("segmentio-rainbow/js/rainbow.js", "app/deps/rainbow/js/rainbow.js");
require.alias("segmentio-rainbow/js/language/c.js", "app/deps/rainbow/js/language/c.js");
require.alias("segmentio-rainbow/js/language/coffeescript.js", "app/deps/rainbow/js/language/coffeescript.js");
require.alias("segmentio-rainbow/js/language/csharp.js", "app/deps/rainbow/js/language/csharp.js");
require.alias("segmentio-rainbow/js/language/css.js", "app/deps/rainbow/js/language/css.js");
require.alias("segmentio-rainbow/js/language/d.js", "app/deps/rainbow/js/language/d.js");
require.alias("segmentio-rainbow/js/language/generic.js", "app/deps/rainbow/js/language/generic.js");
require.alias("segmentio-rainbow/js/language/go.js", "app/deps/rainbow/js/language/go.js");
require.alias("segmentio-rainbow/js/language/haskell.js", "app/deps/rainbow/js/language/haskell.js");
require.alias("segmentio-rainbow/js/language/html.js", "app/deps/rainbow/js/language/html.js");
require.alias("segmentio-rainbow/js/language/java.js", "app/deps/rainbow/js/language/java.js");
require.alias("segmentio-rainbow/js/language/javascript.js", "app/deps/rainbow/js/language/javascript.js");
require.alias("segmentio-rainbow/js/language/lua.js", "app/deps/rainbow/js/language/lua.js");
require.alias("segmentio-rainbow/js/language/php.js", "app/deps/rainbow/js/language/php.js");
require.alias("segmentio-rainbow/js/language/python.js", "app/deps/rainbow/js/language/python.js");
require.alias("segmentio-rainbow/js/language/r.js", "app/deps/rainbow/js/language/r.js");
require.alias("segmentio-rainbow/js/language/ruby.js", "app/deps/rainbow/js/language/ruby.js");
require.alias("segmentio-rainbow/js/language/scheme.js", "app/deps/rainbow/js/language/scheme.js");
require.alias("segmentio-rainbow/js/language/shell.js", "app/deps/rainbow/js/language/shell.js");
require.alias("segmentio-rainbow/js/language/smalltalk.js", "app/deps/rainbow/js/language/smalltalk.js");

require.alias("editor/index.js", "app/deps/editor/index.js");
require.alias("segmentio-dom/index.js", "editor/deps/dom/index.js");
require.alias("component-type/index.js", "segmentio-dom/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-dom/deps/event/index.js");

require.alias("component-delegate/index.js", "segmentio-dom/deps/delegate/index.js");
require.alias("component-matches-selector/index.js", "component-delegate/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("component-event/index.js", "component-delegate/deps/event/index.js");

require.alias("component-indexof/index.js", "segmentio-dom/deps/indexof/index.js");

require.alias("component-domify/index.js", "segmentio-dom/deps/domify/index.js");

require.alias("component-classes/index.js", "segmentio-dom/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-css/index.js", "segmentio-dom/deps/css/index.js");

require.alias("component-sort/index.js", "segmentio-dom/deps/sort/index.js");

require.alias("component-value/index.js", "segmentio-dom/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-dom/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");

require.alias("component-query/index.js", "segmentio-dom/deps/query/index.js");

require.alias("component-moment/index.js", "editor/deps/moment/index.js");

require.alias("component-throttle/index.js", "editor/deps/throttle/index.js");

require.alias("component-value/index.js", "editor/deps/value/index.js");
require.alias("component-value/index.js", "editor/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");

require.alias("matthewmueller-debounce/index.js", "editor/deps/debounce/index.js");

require.alias("segmentio-marked/lib/marked.js", "editor/deps/marked/lib/marked.js");
require.alias("segmentio-marked/lib/marked.js", "editor/deps/marked/index.js");
require.alias("segmentio-marked/lib/marked.js", "segmentio-marked/index.js");

require.alias("timoxley-async-compose/index.js", "editor/deps/async-compose/index.js");
require.alias("solutionio-async/index.js", "timoxley-async-compose/deps/async.js/index.js");

require.alias("timoxley-next-tick/index.js", "timoxley-async-compose/deps/next-tick/index.js");

require.alias("menu/index.js", "app/deps/menu/index.js");
require.alias("component-bind/index.js", "menu/deps/bind/index.js");

require.alias("component-dom/index.js", "menu/deps/dom/index.js");
require.alias("component-type/index.js", "component-dom/deps/type/index.js");

require.alias("component-event/index.js", "component-dom/deps/event/index.js");

require.alias("component-delegate/index.js", "component-dom/deps/delegate/index.js");
require.alias("component-matches-selector/index.js", "component-delegate/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("component-event/index.js", "component-delegate/deps/event/index.js");

require.alias("component-indexof/index.js", "component-dom/deps/indexof/index.js");

require.alias("component-domify/index.js", "component-dom/deps/domify/index.js");

require.alias("component-classes/index.js", "component-dom/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-css/index.js", "component-dom/deps/css/index.js");

require.alias("component-sort/index.js", "component-dom/deps/sort/index.js");

require.alias("component-value/index.js", "component-dom/deps/value/index.js");
require.alias("component-value/index.js", "component-dom/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");

require.alias("component-query/index.js", "component-dom/deps/query/index.js");

require.alias("component-emitter/index.js", "menu/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-events/index.js", "menu/deps/events/index.js");
require.alias("component-event/index.js", "component-events/deps/event/index.js");

require.alias("component-event-manager/index.js", "component-events/deps/event-manager/index.js");

require.alias("component-reactive/lib/index.js", "menu/deps/reactive/lib/index.js");
require.alias("component-reactive/lib/utils.js", "menu/deps/reactive/lib/utils.js");
require.alias("component-reactive/lib/text-binding.js", "menu/deps/reactive/lib/text-binding.js");
require.alias("component-reactive/lib/attr-binding.js", "menu/deps/reactive/lib/attr-binding.js");
require.alias("component-reactive/lib/binding.js", "menu/deps/reactive/lib/binding.js");
require.alias("component-reactive/lib/bindings.js", "menu/deps/reactive/lib/bindings.js");
require.alias("component-reactive/lib/index.js", "menu/deps/reactive/index.js");
require.alias("component-format-parser/index.js", "component-reactive/deps/format-parser/index.js");

require.alias("component-props/index.js", "component-reactive/deps/props/index.js");
require.alias("component-props/index.js", "component-reactive/deps/props/index.js");
require.alias("component-props/index.js", "component-props/index.js");

require.alias("visionmedia-debug/index.js", "component-reactive/deps/debug/index.js");
require.alias("visionmedia-debug/debug.js", "component-reactive/deps/debug/debug.js");

require.alias("component-event/index.js", "component-reactive/deps/event/index.js");

require.alias("component-classes/index.js", "component-reactive/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-query/index.js", "component-reactive/deps/query/index.js");

require.alias("component-reactive/lib/index.js", "component-reactive/index.js");

require.alias("component-type/index.js", "menu/deps/type/index.js");

require.alias("yields-prevent/index.js", "menu/deps/prevent/index.js");

require.alias("yields-stop/index.js", "menu/deps/stop/index.js");

require.alias("bookmarks/index.js", "boot/deps/bookmarks/index.js");
require.alias("component-each/index.js", "bookmarks/deps/each/index.js");
require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-set/index.js", "bookmarks/deps/set/index.js");

require.alias("yields-store/index.js", "bookmarks/deps/store/index.js");
require.alias("component-each/index.js", "yields-store/deps/each/index.js");
require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "yields-store/deps/type/index.js");

require.alias("yields-unserialize/index.js", "yields-store/deps/unserialize/index.js");

require.alias("document/index.js", "boot/deps/document/index.js");
require.alias("segmentio-model/lib/index.js", "document/deps/model/lib/index.js");
require.alias("segmentio-model/lib/static.js", "document/deps/model/lib/static.js");
require.alias("segmentio-model/lib/proto.js", "document/deps/model/lib/proto.js");
require.alias("segmentio-model/lib/index.js", "document/deps/model/index.js");
require.alias("component-clone/index.js", "segmentio-model/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model/deps/each/index.js");
require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "segmentio-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "segmentio-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("visionmedia-superagent/lib/client.js", "segmentio-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "segmentio-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("RedVentures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");

require.alias("segmentio-model/lib/index.js", "segmentio-model/index.js");

require.alias("matthewmueller-uid/index.js", "document/deps/uid/index.js");

require.alias("model-defaults/index.js", "document/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "model-defaults/deps/each/index.js");
require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "model-defaults/deps/type/index.js");

require.alias("model-firebase/index.js", "document/deps/model-firebase/index.js");
require.alias("model-firebase/statics.js", "document/deps/model-firebase/statics.js");
require.alias("model-firebase/protos.js", "document/deps/model-firebase/protos.js");
require.alias("component-collection/index.js", "model-firebase/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("boot/browser.js", "boot/index.js");

